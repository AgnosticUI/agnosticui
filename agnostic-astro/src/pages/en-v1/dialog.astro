---
import { Code } from 'astro/components';
// TODO -- remove this global CSS and Input.astro comp once built
import 'agnostic-css/src/components/input/input.css';

import XElement from 'astro-xelement'
import AgButton from '../../lib/components/Button.astro'
import AgInput from '../../lib/components/Input.astro'
import AgIcon from '../../lib/components/Icon.astro'
import AgClose from '../../lib/components/Close.astro'
import AgDialog from '../../lib/components/Dialog.astro'
import BaseLayout from '../../layouts/BaseLayout.astro';
const { HContainer} = XElement;

---
<svg aria-hidden="true"
     style="position: absolute; width: 0; height: 0; overflow: hidden"
     version="1.1"
     xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink">
  <defs>
    <symbol id="icon-email"
            viewBox="0 0 32 32">
      <path fill="currentColor" d="M28 6H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2Zm-2.2 2L16 14.78L6.2 8ZM4 24V8.91l11.43 7.91a1 1 0 0 0 1.14 0L28 8.91V24Z" />
    </symbol>
  </defs>
</svg>
  <BaseLayout>
    <div class="h3 mbs40">Dialog</div>
    <HContainer class="container">
      <p class="mbs24 mbe24">The <a href="https://github.com/agnosticui/agnosticui/agnostic-astro" target="_blank">agnostic-astro</a>
      package utilizes <a href="https://github.com/astro-community/xelement" target="_blank">XElement</a> under-the-hood in order to provide build-time
      <a href="https://docs.astro.build/en/core-concepts/astro-components/" target="_blank">Astro components</a>. These build-time components will help
      your project get closer to realizing a mostly <span class="quoted">no client-side runtime</span>â€¦if you do it right, this should mean an all-green 100% Lighthouse performance score!
      Leverage the benefits of <a href="https://docs.astro.build/en/core-concepts/partial-hydration/#island-architecture" target="_blank">Islands architecture</a>
      by sending mostly server built <a href="https://github.com/agnosticui/agnosticui/agnostic-astro" target="_blank">agnostic-astro</a> components. Then,
      sprinkle client-hydrated ones only as needed.</p>
      <div class="h4 mbe24">Usage</div>
      <p class="mbe12">Ensure you've installed the <code>agnostic-astro</code> npm package
        (note this installs depedency <code>agnostic-css</code> as well):
        <Code code={`npm i agnostic-astro`} lang="bash" wrap />
      </p>
      <p class="mbs18 mbe12">and then import <code>common.min.css</code> from your &ldquo;base layout&rdquo; (you should only need to do this in once place as this is global CSS). This brings in
      the required CSS custom properties, reset, and properties:
        <Code code={`import 'agnostic-css/public/css-dist/common.min.css';`} lang="javascript" wrap />
      </p>
      <p class="mbs24 mbe12">Then you can import Astro Dialog component:
      <Code code={`import AgDialog from 'agnostic-astro/Dialog.astro';`} lang="javascript" wrap />
      </p>
      <p class="mbs24 mbe12">Here's the <a href="https://github.com/AgnosticUI/agnosticui/tree/master/agnostic-astro" target="_blank">agnostic-astro</a> Dialog component in use:</p>
    <Code code={`<AgButton class="mbs40" mode="primary" isBordered isRounded data-a11y-dialog-show="YourUniqueID">
  Open the dialog
</AgButton>
<!-- isAnimatedSlideUp defaults to false. isAnimatedFadeIn defaults to true. -->
<AgDialog dialogId="YourUnitID" isAnimatedSlideUp titleId="my-dialog-title">
  <!-- The rest of this can be any valid HTML; you're essentially "projecting" the slot content. But, you WILL want to provide a close button that has the data-a11y-dialog-hide attribute as seen here. -->
  <AgClose data-a11y-dialog-hide class="dialog-close" aria-label="Close this dialog window" />
  <div class="h3 text-center" id="my-dialog-title">Subscribe to our newsletter</div>
  <p class="text-center mbs16 mbe24">
  Subscribe to our newsletter to receive the latest news and
  exclusive offers every week. We promise to never spam you or sell your data.
  </p>
  <form>
    <!-- TODO -- Use an Input.astro component here (once built). Note .label and .input* classes are from the agnostic-css package -->
    <label class="label" for="email">Email (required)</label>
    <input type="email" name="email" class="input input-large input-rounded" id="email" placeholder="youremail@gmail.com" required />
    <div class="mbe16" />
    <AgButton type="submit" size="large" mode="primary" isRounded isBlock>
      Sign Up
    </AgButton>
  </form>
</AgDialog>`} lang="html" wrap />
      <AgButton class="mbs40" mode="primary" data-a11y-dialog-show="YourUnitID">
        Open the dialog
      </AgButton>
      <div class="mbe24" />
      <AgDialog
        dialogId="YourUnitID"
        isAnimatedSlideUp
        titleId="my-dialog-title"
      >
        <!-- This can be any valid HTML; you're essentially "projecting" the slot
        content. But you will want to provide a close button that has the
        data-a11y-dialog-hide attribute as you see here -->
        <AgClose
          data-a11y-dialog-hide
          class="dialog-close"
          aria-label="Close this dialog window"
        />
        <div class="h3" id="my-dialog-title">Subscribe to our newsletter</div>
        <p class="mbs16 mbe24">
          Subscribe to our newsletter to receive the latest news and
          exclusive offers every week. We promise to never spam you or sell your data.
        </p>
        <form>
          <AgInput
            hasRightAddon
            size="large"
            isRounded
            label="Email (required)"
            uniqueId="email"
            placeholder="youremail@gmail.com"
            required
          >
            <div slot="addon-right" class="input-addon-right">
              <AgIcon type="info" size="20">
                <svg>
                  <use xlink:href="#icon-email"></use>
                </svg> 
              </AgIcon>
            </div>
          </AgInput>
          <div class="mbe16" />
          <AgButton type="submit" size="large" mode="primary" isRounded isBlock>
            Sign Up
          </AgButton>
        </form>
      </AgDialog>
    </HContainer>
  </BaseLayout>

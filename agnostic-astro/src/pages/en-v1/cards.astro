---
import { Code } from 'astro/components';
// We can use this too but will need to go grab a CSS theme
// import { Prism } from '@astrojs/prism';

import XElement from 'astro-xelement'

import AgCard from '../../lib/components/Card.astro'

import BaseLayout from '../../layouts/BaseLayout.astro';

const { HContainer} = XElement;

---
  <BaseLayout>
    <div class="h3 mbs40">Cards</div>
    <HContainer class="container">
      <p class="mbs24 mbe24">The <a href="https://github.com/agnosticui/agnosticui/agnostic-astro" target="_blank">agnostic-astro</a>
      package utilizes <a href="https://github.com/astro-community/xelement" target="_blank">XElement</a> under-the-hood in order to provide build-time
      <a href="https://docs.astro.build/en/core-concepts/astro-components/" target="_blank">Astro components</a>. These build-time components will help
      your project get closer to realizing a mostly <span class="quoted">no client-side runtime</span>â€¦if you do it right, this should mean an all-green 100% Lighthouse performance score!
      Leverage the benefits of <a href="https://docs.astro.build/en/core-concepts/partial-hydration/#island-architecture" target="_blank">Islands architecture</a>
      by sending mostly server built <a href="https://github.com/agnosticui/agnosticui/agnostic-astro" target="_blank">agnostic-astro</a> components. Then,
      sprinkle client-hydrated ones only as needed.</p>
      <div class="h4 mbe24">Usage</div>
      <p class="mbe12">Ensure you've installed the <code>agnostic-astro</code> npm package
        (note this installs depedency <code>agnostic-css</code> as well):
        <Code code={`npm i agnostic-astro`} lang="bash" wrap />
      </p>
      <p class="mbs18 mbe12">and then import <code>common.min.css</code> from your &ldquo;base layout&rdquo; (you should only need to do this in once place as this is global CSS). This brings in
      the required CSS custom properties, reset, and properties:
        <Code code={`import 'agnostic-css/public/css-dist/common.min.css';`} lang="javascript" wrap />
      </p>
      <p class="mbs24 mbe12">Then you can import Astro Card component:
        <Code code={`import AgCard from 'agnostic-astro/Card.astro';`} lang="javascript" wrap />
      </p>
      <p class="mbs24 mbe12">Here's the <a href="https://github.com/AgnosticUI/agnosticui/tree/master/agnostic-astro" target="_blank">agnostic-astro</a> Card component in use:</p>
      <Code code={`<AgCard>
  <h1 class="mbe24"><a href="#">You're Invited!</a></h1>
  <p class="mbe24">We'll be hacking all night!</p>
  <button class="btn btn-block">Join Us!</button>
</AgCard>`} lang="html" wrap />
      <section class="demo-grid">
        <AgCard class="card-example mbs24 mbe24" isBordered>
          <img src="https://via.placeholder.com/1000x500?text=A+Big+Image"
                alt="Image placeholder image for testing responsiveness" />
          <div class="pbs32 pbe32 pis32 pie32">
            <div class="h4 mbe6"><a href="#">Card Title</a></div>
            <p class="mbe16">
              <span class="card-demo-rating">â˜…â˜…â˜…â˜…<span>â˜†</span></span>
              <span>(1234 votes)</span>
            </p>
            <p class="mbe24">Gingerbread gingerbread candy lollipop oat cake danish dragÃ©e sugar plum. Lemon drops powder icing cake chocolate.</p>
            <button class="btn btn-block btn-bordered" type="submit">Get in Touch!</button>
          </div>
        </AgCard>
        <AgCard class="card-example mbs24 mbe24" isBordered>
          <img src="https://via.placeholder.com/1000x500?text=A+Big+Image"
                alt="Image placeholder image for testing responsiveness" />
          <div class="pbs32 pbe32 pis32 pie32">
            <div class="h4 mbe6"><a href="#">Card Title</a></div>
            <p class="mbe16">
              <span class="card-demo-rating">â˜…â˜…â˜…â˜…<span>â˜†</span></span>
              <span>(1234 votes)</span>
            </p>
            <p class="mbe24">Gingerbread gingerbread candy lollipop oat cake danish dragÃ©e sugar plum. Lemon drops powder icing cake chocolate.</p>
            <button class="btn btn-block btn-bordered" type="submit">Get in Touch!</button>
          </div>
        </AgCard>
        <AgCard class="card-example mbe24" isAnimated isShadow type="success">
          <div class="pbs32 pbe32 pis32 pie32">
            <div class="h4 mbe8">You're Invited!</div>
            <p class="mbe24">We'll be hacking all night long on <a href="https://astro.build/" target="_blank">Astro</a> ðŸš€ and <a href="http://www.agnosticui.com/" target="_blank">AgnosticUI</a>. Come join us for the fun times!</p>
            <button class="btn btn-block btn-bordered btn-demo-action" type="submit">Join Us!</button>
          </div>
        </AgCard>
        <AgCard class="card-example mbe24" isAnimated isShadow type="info">
          <div class="pbs32 pbe32 pis32 pie32">
            <div class="h4 mbe8">You're Invited!</div>
            <p class="mbe24">We'll be hacking all night long on <a href="https://astro.build/" target="_blank">Astro</a> ðŸš€ and <a href="http://www.agnosticui.com/" target="_blank">AgnosticUI</a>. Come join us for the fun times!</p>
            <button class="btn btn-block btn-primary" type="submit">Join Us!</button>
          </div>
        </AgCard>
        <AgCard class="card-example mbe24" isAnimated isShadow type="warning">
          <div class="pbs32 pbe32 pis32 pie32">
            <div class="h4">Warning</div>
            <p class="mbe24">Here be dragons. Thou art forewarned!</p>
          </div>
        </AgCard>
        <AgCard class="card-example mbe24" isAnimated isShadow type="error">
          <div class="pbs32 pbe32 pis32 pie32">
            <div class="h4">Error</div>
            <p class="mbe24">There are two hard things in computer science: cache invalidation, naming things, and off-by-one errors.</p>
          </div>
        </AgCard>
      </section>
    </HContainer>
  </BaseLayout>
<style>
.card-example {
  /* Remove article defaults */
  padding: 0;
  margin: 0;
}
.card-demo-rating {
  color: #ff8f00;
}
.btn-demo-action {
  color: var(--agnostic-action);
  border-color: var(--agnostic-action);
}
.demo-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: var(--fluid-24);
}
@media only screen and (min-width: 1000px) {
  .demo-grid {
    grid-template-columns: 1fr 1fr;
  }
}
</style> 

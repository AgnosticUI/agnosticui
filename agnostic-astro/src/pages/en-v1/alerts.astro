---
import { Code } from 'astro/components';
// We can use this too but will need to go grab a CSS theme
// import { Prism } from '@astrojs/prism';

import XElement from 'astro-xelement'

import AgAlert from '../../lib/components/Alert.astro'

import BaseLayout from '../../layouts/BaseLayout.astro';

const { HContainer} = XElement;

const copy = 'Alert messages should be timely and concise.';
---
  <BaseLayout>
    <div class="h3 mbs40">Alerts</div>
    <HContainer class="container">
      <p class="mbs24 mbe24">The <a href="https://github.com/agnosticui/agnosticui/agnostic-astro" target="_blank">agnostic-astro</a>
      package utilizes <a href="https://github.com/astro-community/xelement" target="_blank">XElement</a> under-the-hood in order to provide build-time
      <a href="https://docs.astro.build/en/core-concepts/astro-components/" target="_blank">Astro components</a>. These build-time components will help
      your project get closer to realizing a mostly <span class="quoted">no client-side runtime</span>â€¦if you do it right, this should mean an all-green 100% Lighthouse performance score!
      Leverage the benefits of <a href="https://docs.astro.build/en/core-concepts/partial-hydration/#island-architecture" target="_blank">Islands architecture</a>
      by sending mostly server built <a href="https://github.com/agnosticui/agnosticui/agnostic-astro" target="_blank">agnostic-astro</a> components. Then,
      sprinkle client-hydrated ones only as needed.</p>
      <div class="h4 mbe24">Usage</div>
      <p class="mbe12">Ensure you've installed and setup the <a href="https://github.com/AgnosticUI/agnosticui/tree/master/integrations/astro/agnostic-astro" target="_blank">AgnosticUI Astro integration</a>
      which will import the required <code>common.min.css</code> onto your page:
      <Code code={`npm i astro-agnosticui`} lang="bash" wrap />
      </p>
      <p class="mbs24 mbe12">Then add the integration to your <code>astro.config.mjs</code> (you may need to run Astro with experimental integrations flag <code>astro dev --experimental-integrations</code>):
        <Code code={`import { defineConfig } from 'astro/config';
import agnosticAstro from 'astro-agnosticui';;
export default defineConfig({
  integrations: [agnosticAstro()]
});`} lang="javascript" wrap />
      </p>
      <p class="mbs24 mbe12">Then you can import Astro Alert component (<code>agnostic-astro</code> ships with the <code>astro-agnosticui</code> integration):
        <Code code={`import AgAlert from 'agnostic-astro/Alert.astro';`} lang="javascript" wrap />
      </p>
      <p class="mbs24 mbe12">Here's the <a href="https://github.com/AgnosticUI/agnosticui/tree/master/agnostic-astro" target="_blank">agnostic-astro</a> Alert component in use:</p>
      <Code code={`<AgAlert><p>{copy}</p></AgAlert>
<AgAlert isBorderAll><p>{copy}</p></AgAlert>
<AgAlert isBorderLeft><p>{copy}</p></AgAlert>
<AgAlert isBorderTop><p>{copy}</p></AgAlert>
<AgAlert isBorderBottom><p>{copy}</p></AgAlert>
<AgAlert isBorderRight><p>{copy}</p></AgAlert>
<AgAlert type="dark"><p>{copy}</p></AgAlert>
<AgAlert type="success"><p>{copy}</p></AgAlert>
<AgAlert type="info"><p>{copy}</p></AgAlert>
<AgAlert type="warning"><p>{copy}</p></AgAlert>
<AgAlert type="error"><p>{copy}</p></AgAlert>
<AgAlert isIcon type="dark"><p>{copy}</p></AgAlert>
<AgAlert isIcon type="success"><p>{copy}</p></AgAlert>
<AgAlert isIcon type="info"><p>{copy}</p></AgAlert>
<AgAlert isIcon type="warning"><p>{copy}</p></AgAlert>
<AgAlert isIcon type="error"><p>{copy}</p></AgAlert>`} lang="html" wrap />
      <div class="mbe24" />
      <AgAlert>
        <p>{copy}</p>
      </AgAlert>
      <div class="mbe24" />
      <AgAlert isBorderAll>
        <p>{copy}</p>
      </AgAlert>
      <div class="mbe24" />
      <AgAlert isBorderLeft>
        <p>{copy}</p>
      </AgAlert>
      <div class="mbe24" />
      <AgAlert isBorderTop>
        <p>{copy}</p>
      </AgAlert>
      <div class="mbe24" />
      <AgAlert isBorderBottom>
        <p>{copy}</p>
      </AgAlert>
      <div class="mbe24" />
      <AgAlert isBorderRight>
        <p>{copy}</p>
      </AgAlert>
      <div class="mbe24" />
      <AgAlert type="dark">
        <p>{copy}</p>
      </AgAlert>
      <div class="mbe24" />
      <AgAlert type="success">
        <p>{copy}</p>
      </AgAlert>
      <div class="mbe24" />
      <AgAlert type="info">
        <p>{copy}</p>
      </AgAlert>
      <div class="mbe24" />
      <AgAlert type="warning">
        <p>{copy}</p>
      </AgAlert>
      <div class="mbe24" />
      <AgAlert type="error">
        <p>{copy}</p>
      </AgAlert>
      <div class="mbe24" />
      <AgAlert isIcon type="dark">
        <p>{copy}</p>
      </AgAlert>
      <div class="mbe24" />
      <AgAlert isIcon type="success">
        <p>{copy}</p>
      </AgAlert>
      <div class="mbe24" />
      <AgAlert isIcon type="info">
        <p>{copy}</p>
      </AgAlert>
      <div class="mbe24" />
      <AgAlert isIcon type="warning">
        <p>{copy}</p>
      </AgAlert>
      <div class="mbe24" />
      <AgAlert isIcon type="error">
        <p>{copy}</p>
      </AgAlert>
    </HContainer>
  </BaseLayout>
  
---
import 'agnostic-css/src/components/loaders/loading.css';

import XElement from 'astro-xelement'
import { pluckClassesFromAttrs } from '../../shared/pluckClassesFromAttrs';

const { ScreenreaderOnly, div: AgLoader } = XElement;
const {size, label='Loading...', showOnMount = true, ...attrs} = Astro.props
const { additionalClassList } = pluckClassesFromAttrs(attrs);

const localShowOnMount = showOnMount;
const state = {
  showOnMount: localShowOnMount
};
---
<AgLoader
  define:vars={{ state }}
  @do={(element, store) => {
    // If consumer sets to showOnMount to false, they'll need to
    // do something like this themselves
    if (state.showOnMount) {
      element.setAttribute('aria-busy', 'true');
    }
  }}
  class:list={[
    'loader',
    {
      'loader-small': size == 'small' ? true : false,
      'loader-large': size == 'large' ? true : false,
    },
    additionalClassList,
  ]}
  {...attrs}
  role="status"
  aria-live="polite"
  aria-busy="false"
>
  <ScreenreaderOnly class="screenreader-only">{label}</ScreenreaderOnly>
</AgLoader>

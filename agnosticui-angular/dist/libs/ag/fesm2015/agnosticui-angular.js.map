{"version":3,"file":"agnosticui-angular.js","sources":["../../../../libs/ag/src/lib/button.component.ts","../../../../libs/ag/src/lib/buttongroup.component.ts","../../../../libs/ag/src/lib/card.component.ts","../../../../libs/ag/src/lib/choice-input.component.ts","../../../../libs/ag/src/lib/header.component.ts","../../../../libs/ag/src/lib/input.component.ts","../../../../libs/ag/src/lib/progress.component.ts","../../../../libs/ag/src/lib/switch.component.ts","../../../../libs/ag/src/lib/tab-panel.component.ts","../../../../libs/ag/src/lib/tabs.component.ts","../../../../libs/ag/src/lib/ag.module.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\n@Component({\n  selector: 'ag-button',\n  template: ` <button\n      div\n      *ngIf=\"getType !== 'faux'; else useFauxDiv\"\n      [type]=\"getType\"\n      (click)=\"handleClick.emit($event)\"\n      [disabled]=\"getDisabled\"\n      [class]=\"classes\"\n    >\n      <ng-container *ngTemplateOutlet=\"contentTpl\"></ng-container>\n    </button>\n    <ng-template #useFauxDiv>\n      <div [class]=\"classes\">\n        <ng-container *ngTemplateOutlet=\"contentTpl\"></ng-container>\n      </div>\n    </ng-template>\n    <!-- We have to grab projected ng-content and put in this template.\n      Then, we can reference it from the template outlets above -->\n    <ng-template #contentTpl>\n      <ng-content></ng-content>\n    </ng-template>`,\n  styleUrls: ['./button.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ButtonComponent {\n  @Input() mode: 'primary' | 'secondary' | undefined = undefined;\n  // Type `faux` will result in a div that \"looks like\" a button. Useful for tab buttons\n  // or similar that may be descendents of a focusable <li role=\"button\"... where it would\n  // throw an a11y error like: Ensure interactive controls are not nested\n  @Input() type?: 'button' | 'reset' | 'submit' | 'faux' = 'button';\n  @Input() size?: 'small' | 'medium' | 'large' = 'medium';\n  @Input() css?: string;\n  @Input() isDisabled?: true | false = false;\n  @Input() isSkinned?: boolean;\n  @Input() isBlank?: boolean;\n  @Input() isRaised?: boolean;\n  @Input() isCircle?: boolean;\n  @Input() isBlock?: boolean;\n  @Input() isBordered?: boolean;\n  @Input() isRounded?: boolean;\n  @Output() handleClick = new EventEmitter<MouseEvent>();\n\n  public get classes(): string {\n    const baseClass = this.isSkinned !== false ? `btn` : `btn-base`;\n    const modeClass = this.mode ? `btn-${this.mode}` : '';\n    const isBlankClass = this.isBlank === true ? 'btn-blank' : '';\n    const isBorderedClass = this.isBordered === true ? 'btn-bordered' : '';\n    const isRaisedClass = this.isRaised === true ? 'btn-raised' : '';\n    const isCircleClass = this.isCircle === true ? 'btn-circle' : '';\n    const isBlockClass = this.isBlock === true ? 'btn-block' : '';\n    const isRoundedClass = this.isRounded === true ? 'btn-rounded' : '';\n    const overrides = this.css ? `${this.css}` : '';\n    const sizeClass = this.size ? `btn-${this.size}` : 'btn-medium';\n\n    return [\n      baseClass,\n      modeClass,\n      isBlankClass,\n      sizeClass,\n      isBorderedClass,\n      isCircleClass,\n      isRoundedClass,\n      isRaisedClass,\n      isBlockClass,\n      overrides,\n    ].join(' ');\n  }\n\n  public get getDisabled(): boolean {\n    return this.isDisabled || false;\n  }\n\n  public get getType(): string {\n    return this.type ? this.type : 'button';\n  }\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ContentChildren,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ButtonComponent } from './button.component';\n\n// .screenreader-only is expected to be globally available via common.min.css\n@Component({\n  selector: 'ag-button-group',\n  template: `<div [ngClass]=\"classes\">\n    <span class=\"screenreader-only\">{{ getAriaLabel }}</span>\n    <ng-content></ng-content>\n  </div>`,\n  styleUrls: ['./button-group.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ButtonGroupComponent {\n  @ContentChildren(ButtonComponent) buttons!: QueryList<ButtonComponent>;\n  @Input() css?: string;\n  @Input() ariaLabel: string | undefined;\n\n  public get getAriaLabel(): string {\n    const label = this.ariaLabel ? this.ariaLabel : 'button group element';\n    return label;\n  }\n\n  public get classes(): string {\n    const cssClass = this.css ? this.css : '';\n    return ['btn-group', cssClass].join(' ');\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'ag-card',\n  template: `<div [ngClass]=\"classes\">\n    <ng-content></ng-content>\n  </div>`,\n  styleUrls: ['./card.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CardComponent {\n  @Input() css?: string;\n  @Input() isAnimated?: boolean;\n  @Input() isSkinned?: boolean = true;\n  @Input() isStacked?: boolean;\n  public get classes(): string {\n    // classes() {\n    const baseClass = this.isSkinned ? 'card' : 'card-base';\n    const isAnimatedClass = this.isAnimated ? 'card-animated' : '';\n    const isStackedClass = this.isStacked ? 'card-stacked' : '';\n    const overrides = this.css ? `${this.css}` : '';\n    return [baseClass, isAnimatedClass, isStackedClass, overrides].join(' ');\n  }\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  Output,\n  EventEmitter,\n} from '@angular/core';\n\n@Component({\n  selector: 'ag-choice-input',\n  template: `<fieldset [ngClass]=\"fieldsetClass()\">\n    <legend [ngClass]=\"legendClasses()\">{{ legendLabel }}</legend>\n    <ng-container *ngFor=\"let option of options\">\n      <label\n        [attr.disabled]=\"isDisabled || disabledOptions?.includes(option.value)\"\n        [ngClass]=\"labelClasses()\"\n      >\n        <input\n          [ngClass]=\"inputClasses()\"\n          [type]=\"type\"\n          [name]=\"option.name\"\n          [value]=\"option.value\"\n          [disabled]=\"isDisabled || disabledOptions?.includes(option.value)\"\n          [checked]=\"checkedOptions?.includes(option.value) || false\"\n          (change)=\"this.handleChange($event)\"\n        />\n        <span [ngClass]=\"labelSpanClasses()\">{{ option.label }}</span>\n      </label>\n    </ng-container>\n  </fieldset>`,\n  styleUrls: ['./choice-input.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ChoiceInputComponent {\n  @Input() isInline?: boolean = false;\n  @Input() isFieldset?: boolean = true;\n  @Input() isSkinned?: boolean = true;\n  @Input() isDisabled?: boolean = false;\n  @Input() options?: any[] = [];\n  @Input() disabledOptions?: string[];\n\n  private _checkedOptions: any[] = [];\n  get checkedOptions(): any[] {\n    return this._checkedOptions;\n  }\n  @Input()\n  set checkedOptions(val: any[]) {\n    this._checkedOptions = val;\n  }\n\n  @Input() css?: string;\n  @Input() legendLabel = '';\n  @Input() type: 'radio' | 'checkbox' = 'checkbox';\n  // Medium is default so we just use empty string\n  @Input() size: 'small' | 'large' | '' = '';\n  // TODO type this\n  @Output() selected = new EventEmitter<any>();\n\n  labelSpanClasses() {\n    let klasses = [\n      this.type ? `${this.type}-label` : '',\n      this.size ? `${this.type}-label-${this.size}` : '',\n    ];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n  handleChange(ev: Event) {\n    const el = ev.target as HTMLInputElement;\n    const value = el.value;\n    if (this.type === 'checkbox') {\n      let checkedItemsUpdated;\n      if (this.checkedOptions?.includes(value)) {\n        checkedItemsUpdated = this.checkedOptions?.filter(\n          (item) => item !== value\n        );\n        this.checkedOptions = checkedItemsUpdated;\n      } else {\n        checkedItemsUpdated = [...this.checkedOptions, value];\n        this.checkedOptions = checkedItemsUpdated;\n      }\n      this.selected.emit(checkedItemsUpdated);\n    } else {\n      // Type is radio. We ignore if they're trying to check the currently checked\n      if (this.checkedOptions?.includes(value)) {\n        // Since you can only have one checked radio at a time, we simply\n        // set to the new radio to be checked\n        this.checkedOptions = [value];\n        this.selected.emit(this.checkedOptions);\n      }\n    }\n  }\n  inputClasses() {\n    let inputKlasses = [\n      `${this.type}`,\n      this.size ? `${this.size}` : '',\n      this.isDisabled ? 'disabled' : '',\n    ];\n    inputKlasses = inputKlasses.filter((klass) => klass.length);\n    return inputKlasses.join(' ');\n  }\n  fieldsetClass() {\n    // If consumer sets is skinned to false we don't style the fieldset\n    const skin = this.isSkinned ? `${this.type}-group` : '';\n\n    // we only add the fieldset class for large (not small) e.g. radio|checkbox-group-large\n    const sizeSkin =\n      this.isSkinned && this.size === 'large'\n        ? `${this.type}-group-${this.size}`\n        : '';\n\n    const overrides = this.css ? `${this.css}` : '';\n    const klasses = [\n      overrides ? overrides : '',\n      skin,\n      sizeSkin,\n      this.isFieldset === false ? `${this.type}-group-hidden` : '',\n    ];\n    return klasses.filter((klass) => klass.length);\n  }\n  legendClasses() {\n    const skin = this.isSkinned ? `${this.type}-legend` : '';\n    const klasses = [\n      skin,\n      // .screenreader-only is expected to be globally available via common.min.css\n      this.isFieldset === false ? 'screenreader-only' : null,\n    ];\n    return klasses.join(' ');\n  }\n  labelClasses() {\n    let klasses = [\n      this.type ? `${this.type}-label-wrap` : '',\n      this.isInline ? `${this.type}-label-wrap-inline` : '',\n    ];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'ag-header-nav',\n  template: `<nav>\n    <div [ngClass]=\"classes\">\n      <ng-content></ng-content>\n    </div>\n  </nav>`,\n  styleUrls: ['./headernav.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class HeaderNavComponent {\n  @Input() css?: string;\n  public get classes(): string {\n    let klasses = ['header-nav', this.css ? `${this.css}` : ''];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ')\n  }\n}\n\n@Component({\n  selector: 'ag-header-nav-item',\n  template: `<div [ngClass]=\"classes\"><ng-content></ng-content></div>`,\n  styleUrls: ['./headernavitem.css'],\n})\n\nexport class HeaderNavItemComponent {\n  @Input() css?: string;\n  public get classes(): string {\n    let klasses = ['header-nav-item', this.css ? `${this.css}` : ''];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n}\n\n@Component({\n  selector: 'ag-header',\n  template: `<header [ngClass]=\"classes\">\n    <div class=\"header-content\"><ng-content></ng-content></div>\n  </header>\n  `,\n  styleUrls: ['./header.css'],\n})\n\nexport class HeaderComponent {\n  @Input() css?: string;\n  @Input() isSkinned?: boolean = true;\n  @Input() isSticky?: boolean;\n  \n  public get classes(): string {\n    const baseClass = this.isSkinned ? 'header' : 'header-base';\n    const isStickyClass = this.isSticky ? 'header-sticky' : '';\n    const overrides = this.css ? `${this.css}` : '';\n    let klasses = [\n      baseClass,\n      isStickyClass,\n      overrides,\n    ];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n}\n","import {\n  Component,\n  HostBinding,\n  Input,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\n@Component({\n  selector: 'ag-input',\n  template: `<div className=\"width-full\">\n    <label [class]=\"labelClasses()\" [for]=\"id\">\n      {{ label }}\n    </label>\n    <ng-container *ngIf=\"type === 'textarea'; else noTextarea\">\n      <textarea\n        *ngIf=\"type === 'textarea'\"\n        [id]=\"id\"\n        [attr.name]=\"name ? name : null\"\n        [value]=\"defaultValue || ''\"\n        [disabled]=\"isDisabled\"\n        [class]=\"inputClasses()\"\n        [placeholder]=\"placeholder ? placeholder : ''\"\n        [attr.rows]=\"rows\"\n        [attr.cols]=\"cols\"\n        (change)=\"(handleChange)\"\n        (focus)=\"(handleFocus)\"\n        (blur)=\"(handleBlur)\"\n      ></textarea>\n    </ng-container>\n    <ng-template #noTextarea>\n      <div\n        class=\"input-addon-container\"\n        *ngIf=\"hasLeftAddon || hasRightAddon; else inputOnly\"\n      >\n        <ng-content select=\"[addOnLeft]\"></ng-content>\n        <input\n          [id]=\"id\"\n          [attr.name]=\"name ? name : null\"\n          [value]=\"defaultValue || ''\"\n          [type]=\"type\"\n          [disabled]=\"isDisabled\"\n          [class]=\"inputClasses()\"\n          [placeholder]=\"placeholder ? placeholder : ''\"\n          (change)=\"(handleChange)\"\n          (focus)=\"(handleFocus)\"\n          (blur)=\"(handleBlur)\"\n        />\n        <ng-content select=\"[addOnRight]\"></ng-content>\n      </div>\n      <ng-template #inputOnly>\n        <input\n          [id]=\"id\"\n          [attr.name]=\"name ? name : null\"\n          [value]=\"defaultValue || ''\"\n          [type]=\"type\"\n          [disabled]=\"isDisabled\"\n          [class]=\"inputClasses()\"\n          [placeholder]=\"placeholder ? placeholder : ''\"\n          (change)=\"(handleChange)\"\n          (focus)=\"(handleFocus)\"\n          (blur)=\"(handleBlur)\"\n        />\n      </ng-template>\n    </ng-template>\n    <span\n      *ngIf=\"isInvalid; else helpHint\"\n      [class]=\"invalidClasses()\"\n      role=\"status\"\n      aria-live=\"polite\"\n    >\n      {{ invalidText }}\n    </span>\n    <ng-template #helpHint>\n      <span [class]=\"helpClasses()\" role=\"status\" aria-live=\"polite\">\n        {{ helpText }}\n      </span>\n    </ng-template>\n  </div>`,\n  styleUrls: ['./input.css', './inputaddon-hack.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InputComponent {\n  // a11y duplicate ID unless we bind the host to externalId and delete\n  // that value before it's added to the DOM. Maybe there's a better way?\n  // https://coryrylan.com/blog/prevent-attribute-reflection-in-angular\n  @HostBinding('attr.id') externalId: string | null = '';\n  @Input()\n  set id(value: string) {\n    this._ID = value;\n    this.externalId = null;\n  }\n  get id() {\n    return this._ID;\n  }\n  private _ID: string = '';\n\n  @Input() helpText?: string = '';\n  @Input() invalidText?: string = '';\n  @Input() isInvalid?: boolean = false;\n  @Input() isSkinned?: boolean = true;\n  @Input() isRounded?: boolean = false;\n  @Input() isUnderlined?: boolean = false;\n  @Input() isInline?: boolean = false;\n  @Input() isDisabled?: boolean = false;\n  @Input() hasLeftAddon?: boolean = false;\n  @Input() hasRightAddon?: boolean = false;\n  @Input() isUnderlinedWithBackground?: boolean = false;\n  @Input() name?: string;\n  @Input() label!: string;\n  @Input() labelCss?: string;\n  @Input() css?: string;\n  @Input() placeholder?: string;\n  @Input() defaultValue?: string;\n  @Input() size?: 'small' | 'large' | '' = '';\n  @Input() type!:\n    | 'text'\n    | 'password'\n    | 'email'\n    | 'number'\n    | 'url'\n    | 'tel'\n    | 'search'\n    | 'textarea';\n  // It appears we can't have arbitrary props in Angular and they all have to be defined\n  // as an @Input. React has ...rest, Vue has v-bind=\"$attrs\", Svelte has  {...$$restProps} ¯\\_(ツ)_/¯\n  // https://github.com/angular/angular/issues/14545\n  @Input() rows?: number;\n  @Input() cols?: number;\n\n  helpClasses() {\n    const klasses = [\n      !this.size ? 'field-help' : '',\n      this.size ? `field-help-${this.size}` : '',\n    ];\n    return klasses.filter((klass) => klass.length).join(' ');\n  }\n  invalidClasses() {\n    const klasses = [\n      !this.size ? 'field-error' : '',\n      this.size ? `field-error-${this.size}` : '',\n    ];\n    return klasses.filter((klass) => klass.length).join(' ');\n  }\n  labelClasses() {\n    const labelKlasses = [\n      'label',\n      this.isInvalid ? 'label-error' : '',\n      this.isInline ? 'label-inline' : '',\n      this.size ? `label-${this.size}` : '',\n      this.labelCss ? this.labelCss : '',\n    ];\n    return labelKlasses.filter((klass) => klass.length).join(' ');\n  }\n  inputClasses() {\n    let klasses = [\n      this.isSkinned ? 'input' : 'input-base',\n      this.isRounded ? 'input-rounded' : '',\n      this.isUnderlined ? 'input-underlined' : '',\n      this.isDisabled ? 'disabled' : '',\n      this.isInline ? 'input-inline' : '',\n      this.hasLeftAddon ? 'input-has-left-addon' : '',\n      this.hasRightAddon ? 'input-has-right-addon' : '',\n      this.isInvalid ? 'input-error' : '',\n      this.isUnderlinedWithBackground ? 'input-underlined-bg' : '',\n      this.css ? `${this.css}` : '',\n      this.size ? `input-${this.size}` : '',\n    ];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n  handleChange(ev: Event) {\n    console.log('handleChange not yet implemented...');\n  }\n  handleFocus(ev: Event) {\n    console.log('handleFocus not yet implemented...');\n  }\n  handleBlur(ev: Event) {\n    console.log('handleBlur not yet implemented...');\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n@Component({\n  selector: 'ag-progress',\n  template: `<progress [ngClass]=\"classes\" [attr.value]=\"value\" [attr.max]=\"max\"></progress>`,\n  styleUrls: ['./progress.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class ProgressComponent {\n  @Input() value: number = 0;\n  @Input() max: number = 100;\n  @Input() css?: string;\n  public get classes(): string {\n    console.log(this)\n    let klasses = ['progress', this.css?.length ? `${this.css}` : '']\n    klasses = klasses.filter((klass) => klass.length)\n    return klasses.join(' ')\n  }\n}\n","import { Component, EventEmitter, Input, ChangeDetectionStrategy, Output } from '@angular/core';\n\n@Component({\n  selector: 'ag-switch',\n  template: `<label [ngClass]=\"switchContainer()\">\n    <span *ngIf=\"labelPosition === 'left'\" class=\"switch-label\">{{\n      label\n    }}</span>\n    <input\n      type=\"checkbox\"\n      [checked]=\"isChecked\"\n      class=\"switch-input\"\n      [disabled]=\"isDisabled\"\n      role=\"switch\"\n      (change)=\"toggleChecked($event)\"\n    />\n    <span [ngClass]=\"switchSpan()\" aria-hidden=\"true\"></span>\n    <span *ngIf=\"labelPosition === 'right'\" class=\"switch-label\">{{\n      label\n    }}</span>\n  </label>`,\n  styleUrls: ['./switch.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SwitchComponent {\n  @Input() label!: string;\n  @Input() css?: string;\n  @Input() labelPosition = 'left';\n  @Input() isDisabled?: boolean = false;\n  @Input() isAction?: boolean = false;\n  @Input() isBordered?: boolean = false;\n  @Input() size? = '';\n\n  private switchChecked!: boolean;\n  get isChecked(): boolean {\n    return this.switchChecked;\n  }\n\n  @Input()\n  set isChecked(val: boolean) {\n    this.switchChecked = val;\n  }\n\n  @Output() selected = new EventEmitter<boolean>();\n\n  toggleChecked(ev: Event) {\n    const el = ev.target as HTMLInputElement;\n    if (el.getAttribute('aria-checked') == 'true') {\n      el.setAttribute('aria-checked', 'false');\n      this.switchChecked = false;\n    } else {\n      el.setAttribute('aria-checked', 'true');\n      this.switchChecked = true;\n    }\n    this.selected.emit(this.switchChecked);\n  }\n  switchContainer() {\n    let klasses = [\n      'switch-container',\n      this.css ? this.css : '',\n      this.labelPosition === 'right' ? 'switch-right' : '',\n      this.isDisabled ? 'disabled' : '',\n    ];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n  switchSpan() {\n    let klasses = [\n      'switch',\n      this.isBordered ? 'switch-border' : '',\n      this.isAction ? 'switch-action' : '',\n      this.size ? `switch-${this.size}` : '',\n    ];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n}\n","import { Component, Input} from '@angular/core';\n@Component({\n  selector: 'ag-tab-panel',\n  styleUrls: ['./tabs.css'],\n  template: `<div\n    [hidden]=\"!isActive\"\n    role=\"tabpanel\"\n    [attr.aria-label]=\"title\"\n    class=\"pane\"\n  >\n    <ng-content></ng-content>\n  </div>`,\n})\nexport class TabPanelComponent {\n  private _title = '';\n  @Input()\n  set title(t: string) {\n    this._title = t;\n  }\n  get title() {\n    return this._title;\n  }\n  @Input() isActive = false;\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  QueryList,\n  TemplateRef,\n  ChangeDetectionStrategy,\n  Input,\n  ContentChild,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { TabPanelComponent } from './tab-panel.component';\n@Component({\n  selector: 'ag-tabs',\n  template: `\n    <div\n      [class.tab-list]=\"isSkinned === true\"\n      [class.tab-list-base]=\"isSkinned === false\"\n      [class.tab-borderless]=\"isBorderless === true\"\n      role=\"tablist\"\n      aria-label=\"Tabs\"\n    >\n      <div\n        *ngFor=\"let panel of tabPanels; index as i\"\n        (click)=\"selectPanel(panel)\"\n      >\n        <ng-container *ngIf=\"!tabButtonTemplate\">\n          <button\n            role=\"tab\"\n            class=\"tab-item tab-button\"\n            [class.active]=\"panel.isActive\"\n            [class.tab-button-large]=\"size === 'large'\"\n            [class.tab-button-jumbo]=\"size === 'jumbo'\"\n            [attr.aria-selected]=\"panel.isActive\"\n          >\n            {{ panel.title }}\n          </button>\n        </ng-container>\n        <ng-container\n          *ngIf=\"tabButtonTemplate\"\n          [ngTemplateOutlet]=\"tabButtonTemplate\"\n          [ngTemplateOutletContext]=\"{ $implicit: panel, index: i }\"\n        >\n        </ng-container>\n      </div>\n    </div>\n    <ng-content></ng-content>\n  `,\n  styleUrls: ['./tabs.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TabsComponent implements AfterContentInit {\n  @ContentChildren(TabPanelComponent) tabPanels!: QueryList<TabPanelComponent>;\n\n  @Input() size?: string = '';\n  @Input() isSkinned?: boolean = true;\n  @Input() isBorderless?: boolean = false;\n\n  /**\n   * This is used to allow consumer to provide their own custom tab buttons like:\n   * <ng-template #tabButtonTemplate let-tab let-index>\n      <ag-button\n        type=\"faux\"\n        [isBordered]=\"true\"\n        mode=\"primary\"\n        role=\"tab\"\n        [attr.aria-selected]=\"tab.isActive\"\n      >\n        {{ tab.title }}\n      </ag-button>\n    </ng-template>\n  */\n  @ContentChild('tabButtonTemplate')\n  tabButtonTemplate: TemplateRef<any> | undefined;\n\n  @Output()\n  selectionChanged = new EventEmitter();\n\n  ngAfterContentInit() {\n    const activeTabs = this.tabPanels.filter((tab) => tab.isActive);\n    if (activeTabs.length === 0) {\n      this.selectPanel(this.tabPanels.first);\n    }\n  }\n\n  selectPanel(tabPanel: TabPanelComponent) {\n    // First deactivate all tabs, then select passed in tab\n    this.tabPanels.toArray().forEach((tab) => {\n      tab.isActive = false;\n    });\n    tabPanel.isActive = true;\n    this.selectionChanged.emit(tabPanel);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonComponent } from './button.component';\nimport { ButtonGroupComponent } from './buttongroup.component';\nimport { CardComponent } from './card.component';\nimport { ChoiceInputComponent } from './choice-input.component';\nimport {\n  HeaderComponent,\n  HeaderNavComponent,\n  HeaderNavItemComponent,\n} from './header.component';\nimport { InputComponent } from './input.component';\nimport { ProgressComponent } from './progress.component';\nimport { SwitchComponent } from './switch.component';\nimport { TabsComponent } from './tabs.component';\nimport { TabPanelComponent } from './tab-panel.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    ButtonComponent,\n    ButtonGroupComponent,\n    CardComponent,\n    ChoiceInputComponent,\n    HeaderComponent,\n    HeaderNavComponent,\n    HeaderNavItemComponent,\n    InputComponent,\n    ProgressComponent,\n    SwitchComponent,\n    TabsComponent,\n    TabPanelComponent,\n  ],\n  exports: [\n    ButtonComponent,\n    ButtonGroupComponent,\n    CardComponent,\n    ChoiceInputComponent,\n    HeaderComponent,\n    HeaderNavComponent,\n    HeaderNavItemComponent,\n    InputComponent,\n    ProgressComponent,\n    SwitchComponent,\n    TabsComponent,\n    TabPanelComponent,\n  ],\n})\nexport class AgModule {}\n"],"names":[],"mappings":"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"}
{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "AgService",
            "id": "injectable-AgService-a592c27a6e6e32e05511ba609c092f38",
            "file": "src/stories/ag/src/lib/ag.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AgService {\n\n  constructor() { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AgComponent",
            "id": "component-AgComponent-f33de41c026a5cc1727070fb8085560d",
            "file": "src/stories/ag/src/lib/ag.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-ag",
            "styleUrls": [],
            "styles": [],
            "template": "<p>\n  ag works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ag',\n  template: `\n    <p>\n      ag works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class AgComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-2d4e9d1ad21a6a827614b47463c284d5",
            "file": "src/stories/ag/src/lib/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button    [type]=\"getType\"\n    (click)=\"handleClick.emit($event)\"\n    [disabled]=\"getDisabled\"\n    [ngClass]=\"classes\"\n  >\n    <ng-content></ng-content>\n  </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "css",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "isBlank",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "isBlock",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean"
                },
                {
                    "name": "isBordered",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean"
                },
                {
                    "name": "isCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean"
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": " | "
                },
                {
                    "name": "isRaised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean"
                },
                {
                    "name": "isRounded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean"
                },
                {
                    "name": "isSkinned",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean"
                },
                {
                    "name": "mode",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"primary\" | \"secondary\" | undefined"
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "\"small\" | \"medium\" | \"large\""
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"button\" | \"reset\" | \"submit\""
                }
            ],
            "outputsClass": [
                {
                    "name": "handleClick",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'ag-button',\n  template: `<button\n    [type]=\"getType\"\n    (click)=\"handleClick.emit($event)\"\n    [disabled]=\"getDisabled\"\n    [ngClass]=\"classes\"\n  >\n    <ng-content></ng-content>\n  </button>`,\n  styleUrls: ['./button.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport default class ButtonComponent {\n  @Input() mode: 'primary' | 'secondary' | undefined = undefined;\n  @Input() type?: 'button' | 'reset' | 'submit' = 'button';\n  @Input() size?: 'small' | 'medium' | 'large' = 'medium';\n  @Input() css?: string;\n  @Input() isDisabled?: true | false = false;\n  @Input() isSkinned?: boolean;\n  @Input() isBlank?: boolean;\n  @Input() isRaised?: boolean;\n  @Input() isCircle?: boolean;\n  @Input() isBlock?: boolean;\n  @Input() isBordered?: boolean;\n  @Input() isRounded?: boolean;\n  @Output() handleClick = new EventEmitter<MouseEvent>();\n  \n  public get classes(): string {\n    const baseClass = this.isSkinned !== false ? `btn` : `btn-base`;\n    const modeClass = this.mode? `btn-${this.mode}` : '';\n    const isBlankClass = this.isBlank === true ? 'btn-blank' : '';\n    const isBorderedClass = this.isBordered === true ? 'btn-bordered' : '';\n    const isRaisedClass = this.isRaised === true ? 'btn-raised' : '';\n    const isCircleClass = this.isCircle === true ? 'btn-circle' : '';\n    const isBlockClass = this.isBlock === true ? 'btn-block' : '';\n    const isRoundedClass = this.isRounded === true ? 'btn-rounded' : '';\n    const overrides = this.css ? `${this.css}` : '';\n    const sizeClass = this.size ? `btn-${this.size}` : 'btn-medium';\n\n    return [\n      baseClass, \n      modeClass,\n      isBlankClass,\n      sizeClass,\n      isBorderedClass,\n      isCircleClass,\n      isRoundedClass,\n      isRaisedClass,\n      isBlockClass,\n      overrides,\n    ].join(' ');\n  }\n  \n  public get getDisabled(): boolean {\n    return this.isDisabled || false;\n  }\n\n  public get getType(): string {\n    return this.type ? this.type : 'button';\n  }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/*\n* Base Button Style\n*\n* Please note that we have two versions of this:\n* `.btn` which encompasses both the base and skin styles\n* `.btn-base` and `btn-skin`.\n* The reason we've done this is to provide you with some convenience but\n* also flexibility. Most will just want to apply `.btn`. However, if the\n* base skin of the button does not work for you, another option is to only\n* apply `.btn-base` and then set your own \"button skin\".\n*/\n.btn-base,\n.btn {\n  /* TODO test this fallback override syntax is correct */\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  white-space: nowrap;\n  user-select: none;\n  appearance: none;\n  cursor: pointer;\n  box-sizing: border-box;\n  transition-property: all;\n  transition-duration: var(--agnosticui-timing-medium);\n}\n\n.btn-skin,\n.btn {\n  color: var(--agnosticui-btn-font-color, var(--agnosticui-dark));\n  background-color: var(--agnosticui-btn-bgcolor, var(--agnosticui-gray-light));\n  border-color: var(--agnosticui-btn-bgcolor, var(--agnosticui-gray-light));\n  /* seems like a reasonable default as chrome picks `outset` which results in a weird 3d effect */\n  border-style: solid;\n  border-width: var(--agnosticui-btn-border-size, 1px);\n  font-family: var(--agnosticui-btn-font-family, var(--agnosticui-font-family));\n  font-weight: var(--agnosticui-btn-font-weight, 400);\n  font-size: var(--agnosticui-btn-font-size, 1rem);\n  /* this can be overriden, but it might mess with the balance of the button heights across variants */\n  line-height: var(--agnosticui-line-height, 1.25rem);\n  padding-block-start: var(--agnosticui-vertical-pad, 0.5rem);\n  padding-block-end: var(--agnosticui-vertical-pad, 0.5rem);\n  padding-inline-start: var(--agnosticui-side-padding, 0.75rem);\n  padding-inline-end: var(--agnosticui-side-padding, 0.75rem);\n  text-decoration: none;\n  text-align: center;\n  outline: none;\n}\n\n.btn:visited {\n  color: var(--agnosticui-btn-font-color, var(--agnosticui-dark));\n}\n\n.btn:hover {\n  opacity: 0.85;\n  text-decoration: none;\n}\n\n.btn:active {\n  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.3);\n  text-decoration: none;\n  transition-duration: 0s;\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);\n}\n\n.btn:focus {\n  box-shadow: 0 0 0 3px var(--agnosticui-focus-ring-color);\n  /* Needed for High Contrast mode */\n  outline: 3px solid transparent;\n  transition: box-shadow var(--agnosticui-timing-fast) ease-out;\n}\n\n/*\n* Disabled State\n*\n* The disabled state uses the class .disabled, is-disabled,\n* and the form attribute disabled=\"disabled\".\n* The use of !important is only added because this is a state\n* that must be applied to all buttons when in a disabled state.\n*/\n.btn.disabled,\n.btn:disabled {\n  top: 0 !important;\n  background: var(--agnosticui-btn-disabled-bg, var(--agnosticui-gray-mid-dark)) !important;\n  text-shadow: 0 1px 1px rgba(255, 255, 255, 1) !important;\n  /* primary, secondary, natural, all look same when disabled; and we don't want to\n  have an inadvertant looking blue primary border when disabled so it's transparent */\n  border-color: transparent;\n  color: var(--agnosticui-btn-disabled-color, var(--agnosticui-gray-dark)) !important;\n  cursor: default !important;\n  appearance: none !important;\n  box-shadow: none !important;\n  opacity: 0.8 !important;\n}\n\n.btn-primary {\n  background-color: var(--agnosticui-btn-primary, var(--agnosticui-primary));\n  border-color: var(--agnosticui-btn-primary, var(--agnosticui-primary));\n  color: var(--agnosticui-btn-primary-color, var(--agnosticui-light));\n}\n\n/* Border and font is primary. When hovered, we invert with primary background and white font */\n.btn-primary.btn-bordered {\n  color: var(--agnosticui-btn-primary, var(--agnosticui-primary));\n}\n.btn-primary.btn-bordered:hover,\n.btn-primary.btn-bordered:focus {\n  background-color: var(--agnosticui-btn-primary, var(--agnosticui-primary));\n  color: var(--agnosticui-btn-primary-color, var(--agnosticui-light));\n}\n\n.btn-primary:visited {\n  color: var(--agnosticui-btn-primary-color, var(--agnosticui-light));\n}\n\n.btn-secondary {\n  background-color: var(--agnosticui-btn-secondary, var(--agnosticui-secondary));\n  border-color: var(--agnosticui-btn-secondary, var(--agnosticui-secondary));\n  color: var(--agnosticui-btn-secondary-color, var(--agnosticui-light));\n}\n\n/* Border and font is secondary. When hovered, we invert with secondary background and white font */\n.btn-secondary.btn-bordered {\n  color: var(--agnosticui-btn-secondary, var(--agnosticui-secondary));\n}\n.btn-secondary.btn-bordered:hover,\n.btn-secondary.btn-bordered:focus {\n  background-color: var(--agnosticui-btn-secondary, var(--agnosticui-secondary));\n  color: var(--agnosticui-btn-secondary-color, var(--agnosticui-light));\n}\n\n.btn-secondary:visited {\n  color: var(--agnosticui-btn-secondary-color, var(--agnosticui-light));\n}\n\n/*\n* Raised Buttons\n*\n* A classic looking button that offers\n* great depth and affordance.\n*/\n.btn-raised {\n  border-color: var(--agnosticui-btn-bgcolor, var(--agnosticui-gray-light));\n  border-style: solid;\n  background: -webkit-gradient(linear, left top, left bottom, from(#f6f6f6), to(#e1e1e1));\n  /* Note that while one can customize some of these slightly, we essentially have hard-coded\n  box shadow rgba values so they can't really do so drastically which is probably fine :) */\n  background: linear-gradient(\n    var(--agnosticui-btn-raised-from, var(--agnosticui-gray-mid)),\n    var(--agnosticui-btn-raised-to, var(--agnosticui-gray-extra-light))\n  );\n  -webkit-box-shadow: inset 0px 1px 0px rgba(255, 255, 255, 0.3), 0 1px 2px rgba(0, 0, 0, 0.15);\n  box-shadow: inset 0px 1px 0px rgba(255, 255, 255, 0.3), 0 1px 2px rgba(0, 0, 0, 0.15);\n}\n.btn-raised:hover,\n.btn-raised:focus {\n  background: -webkit-gradient(linear, left top, left bottom, from(white), to(gainsboro));\n  background: linear-gradient(to bottom, white, gainsboro);\n}\n.btn-raised.active {\n  /* TODO -- maybe this shouldn't be hard coded */\n  background: #eeeeee;\n  -webkit-box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.2), 0px 1px 0px white;\n  box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.2), 0px 1px 0px white;\n}\n\n/*\n* Raised Primary Buttons\n*/\n.btn-raised.btn-primary {\n  border-color: var(--agnosticui-btn-primary-raised-to, var(--agnosticui-primary-from));\n  background: -webkit-gradient(\n    linear,\n    left top,\n    left bottom,\n    from(var(--agnosticui-btn-primary-raised-from, var(--agnosticui-primary-from))),\n    to(var(--agnosticui-btn-primary-raised-to, var(--agnosticui-primary-to)))\n  );\n  background: linear-gradient(\n    var(--agnosticui-btn-primary-raised-from, var(--agnosticui-primary-from)),\n    var(--agnosticui-btn-primary-raised-to, var(--agnosticui-primary-to))\n  );\n}\n\n.btn-raised.btn-primary:hover,\n.btn-raised.btn-primary:focus {\n  background: linear-gradient(\n    to bottom,\n    var(--agnosticui-btn-primary-raised-hover-from, var(--agnosticui-primary-hover)),\n    var(--agnosticui-btn-primary-raised-to, var(--agnosticui-primary-from))\n  );\n  background: -webkit-gradient(\n    linear,\n    left top,\n    left bottom,\n    from(var(--agnosticui-btn-primary-raised-hover-from, var(--agnosticui-primary-hover))),\n    to(var(--agnosticui-btn-primary-raised-to, var(--agnosticui-primary-from)))\n  );\n  background: linear-gradient(\n    var(--agnosticui-btn-primary-raised-hover-from, var(--agnosticui-primary-hover)),\n    var(--agnosticui-btn-primary-raised-to, var(--agnosticui-primary-from))\n  );\n}\n\n.btn-raised.btn-primary:active,\n.btn-raised.btn-primary.active {\n  opacity: 0.9;\n  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.3);\n}\n\n/*\n* Raised Secondary Buttons\n*/\n.btn-raised.btn-secondary {\n  border-color: var(--agnosticui-btn-secondary-raised-to, var(--agnosticui-secondary-to));\n  background: -webkit-gradient(\n    linear,\n    left top,\n    left bottom,\n    from(var(--agnosticui-btn-secondary-raised-from, var(--agnosticui-secondary-from))),\n    to(var(--agnosticui-btn-secondary-raised-to, var(--agnosticui-secondary-to)))\n  );\n  background: linear-gradient(\n    var(--agnosticui-btn-secondary-raised-from, var(--agnosticui-secondary-from)),\n    var(--agnosticui-btn-secondary-raised-to, var(--agnosticui-secondary-to))\n  );\n}\n\n.btn-raised.btn-secondary:hover,\n.btn-raised.btn-secondary:focus {\n  background: linear-gradient(\n    to bottom,\n    var(--agnosticui-btn-secondary-raised-hover-from, var(--agnosticui-secondary-hover)),\n    var(--agnosticui-btn-secondary-raised-to, var(--agnosticui-secondary-to))\n  );\n  background: -webkit-gradient(\n    linear,\n    left top,\n    left bottom,\n    from(var(--agnosticui-btn-secondary-raised-hover-from, var(--agnosticui-secondary-hover))),\n    to(var(--agnosticui-btn-secondary-raised-to, var(--agnosticui-secondary-to)))\n  );\n  background: linear-gradient(\n    var(--agnosticui-btn-secondary-raised-hover-from, var(--agnosticui-secondary-hover)),\n    var(--agnosticui-btn-secondary-raised-to, var(--agnosticui-secondary-to))\n  );\n}\n\n.btn-raised.btn-secondary:active,\n.btn-raised.btn-secondary.active {\n  opacity: 0.9;\n  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.3);\n}\n\n/**\n  * Border Buttons\n  */\n.btn-bordered {\n  border-width: 1px;\n  background: transparent;\n}\n\n/**\n  * Sizes\n  */\n.btn-large {\n  font-size: calc(var(--agnosticui-btn-font-size, 1rem) + 0.25rem);\n  height: 3rem;\n  line-height: 3rem;\n  padding: 0 3rem;\n}\n\n.btn-small {\n  font-size: calc(var(--agnosticui-btn-font-size, 1rem) - 0.25rem);\n  height: 2rem;\n  line-height: 2rem;\n  padding: 0 2rem;\n}\n\n/**\n  * Rounded\n  */\n.btn-rounded {\n  border-radius: var(--agnosticui-btn-radius, 0.25rem);\n}\n\n.btn-pill {\n  border-radius: 200px;\n}\n\n/*\n  * Size Adjustment for equal height & width buttons\n  *\n  * Remove padding\n  */\n.btn-circle {\n  border-radius: 100%;\n  width: 2.5rem;\n  height: 2.5rem;\n  padding: 0 !important;\n}\n\n.btn-circle-large {\n  font-size: calc(var(--agnosticui-btn-font-size, 1rem) + 0.25rem);\n  width: 3rem;\n  height: 3rem;\n}\n\n.btn-circle-small {\n  font-size: calc(var(--agnosticui-btn-font-size, 1rem) - 0.25rem);\n  width: 2rem;\n  height: 2rem;\n}\n\n/**\n * Button Block (stacked)\n */\n.btn-block {\n  width: 100%;\n}\n/* This is a utility class used if you literally want to stack block buttons one after another.\nApply this class to the nth-of-type(2) onwards to ensure the borders line up properly. */\n.btn-block-following {\n  margin-block-start: -1px;\n}\n\n/**\n * Invisible buttons. Generally used for a Cancel or icon button that behaves like a button,\n * semantically and for a11y, but, does so without all the typical \"button chrome\" behind it.\n */\n.btn-blank {\n  background-color: transparent;\n  border: 0;\n  border-radius: 0;\n  box-shadow: none;\n}\n.btn-blank:hover,\n.btn-blank:active,\n.btn-blank:focus {\n  background: none;\n  outline: 3px solid transparent;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "string",
                        "returnType": "string",
                        "line": 32
                    }
                },
                "getDisabled": {
                    "name": "getDisabled",
                    "getSignature": {
                        "name": "getDisabled",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 58
                    }
                },
                "getType": {
                    "name": "getType",
                    "getSignature": {
                        "name": "getType",
                        "type": "string",
                        "returnType": "string",
                        "line": 62
                    }
                }
            }
        },
        {
            "name": "ButtonGroupComponent",
            "id": "component-ButtonGroupComponent-d8554de81461a3b57e5236edb81e9ab7",
            "file": "src/stories/ag/src/lib/buttongroup.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-button-group",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<div [ngClass]=\"classes\">    <span class=\"screenreader-only\">{{getAriaLabel}}</span>\n    <ng-content></ng-content>\n  </div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string | undefined"
                },
                {
                    "name": "css",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ChangeDetectionStrategy} from '@angular/core';\n\n// .screenreader-only is expected to be globally available via common.min.css\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'ag-button-group',\n  template: `<div [ngClass]=\"classes\">\n    <span class=\"screenreader-only\">{{getAriaLabel}}</span>\n    <ng-content></ng-content>\n  </div>`,\n  styleUrls: ['./button.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport default class ButtonGroupComponent {\n  @Input() css?: string;\n  @Input() ariaLabel: string | undefined;\n\n  public get getAriaLabel(): string {\n    const label = this.ariaLabel ? this.ariaLabel : 'button group element';\n    return label;\n  }\n  \n  public get classes(): string {\n    const cssClass = this.css ? this.css : '';\n    return [\n      'btn-group',\n      cssClass, \n    ].join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/*\n* Base Button Style\n*\n* Please note that we have two versions of this:\n* `.btn` which encompasses both the base and skin styles\n* `.btn-base` and `btn-skin`.\n* The reason we've done this is to provide you with some convenience but\n* also flexibility. Most will just want to apply `.btn`. However, if the\n* base skin of the button does not work for you, another option is to only\n* apply `.btn-base` and then set your own \"button skin\".\n*/\n.btn-base,\n.btn {\n  /* TODO test this fallback override syntax is correct */\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  white-space: nowrap;\n  user-select: none;\n  appearance: none;\n  cursor: pointer;\n  box-sizing: border-box;\n  transition-property: all;\n  transition-duration: var(--agnosticui-timing-medium);\n}\n\n.btn-skin,\n.btn {\n  color: var(--agnosticui-btn-font-color, var(--agnosticui-dark));\n  background-color: var(--agnosticui-btn-bgcolor, var(--agnosticui-gray-light));\n  border-color: var(--agnosticui-btn-bgcolor, var(--agnosticui-gray-light));\n  /* seems like a reasonable default as chrome picks `outset` which results in a weird 3d effect */\n  border-style: solid;\n  border-width: var(--agnosticui-btn-border-size, 1px);\n  font-family: var(--agnosticui-btn-font-family, var(--agnosticui-font-family));\n  font-weight: var(--agnosticui-btn-font-weight, 400);\n  font-size: var(--agnosticui-btn-font-size, 1rem);\n  /* this can be overriden, but it might mess with the balance of the button heights across variants */\n  line-height: var(--agnosticui-line-height, 1.25rem);\n  padding-block-start: var(--agnosticui-vertical-pad, 0.5rem);\n  padding-block-end: var(--agnosticui-vertical-pad, 0.5rem);\n  padding-inline-start: var(--agnosticui-side-padding, 0.75rem);\n  padding-inline-end: var(--agnosticui-side-padding, 0.75rem);\n  text-decoration: none;\n  text-align: center;\n  outline: none;\n}\n\n.btn:visited {\n  color: var(--agnosticui-btn-font-color, var(--agnosticui-dark));\n}\n\n.btn:hover {\n  opacity: 0.85;\n  text-decoration: none;\n}\n\n.btn:active {\n  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.3);\n  text-decoration: none;\n  transition-duration: 0s;\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);\n}\n\n.btn:focus {\n  box-shadow: 0 0 0 3px var(--agnosticui-focus-ring-color);\n  /* Needed for High Contrast mode */\n  outline: 3px solid transparent;\n  transition: box-shadow var(--agnosticui-timing-fast) ease-out;\n}\n\n/*\n* Disabled State\n*\n* The disabled state uses the class .disabled, is-disabled,\n* and the form attribute disabled=\"disabled\".\n* The use of !important is only added because this is a state\n* that must be applied to all buttons when in a disabled state.\n*/\n.btn.disabled,\n.btn:disabled {\n  top: 0 !important;\n  background: var(--agnosticui-btn-disabled-bg, var(--agnosticui-gray-mid-dark)) !important;\n  text-shadow: 0 1px 1px rgba(255, 255, 255, 1) !important;\n  /* primary, secondary, natural, all look same when disabled; and we don't want to\n  have an inadvertant looking blue primary border when disabled so it's transparent */\n  border-color: transparent;\n  color: var(--agnosticui-btn-disabled-color, var(--agnosticui-gray-dark)) !important;\n  cursor: default !important;\n  appearance: none !important;\n  box-shadow: none !important;\n  opacity: 0.8 !important;\n}\n\n.btn-primary {\n  background-color: var(--agnosticui-btn-primary, var(--agnosticui-primary));\n  border-color: var(--agnosticui-btn-primary, var(--agnosticui-primary));\n  color: var(--agnosticui-btn-primary-color, var(--agnosticui-light));\n}\n\n/* Border and font is primary. When hovered, we invert with primary background and white font */\n.btn-primary.btn-bordered {\n  color: var(--agnosticui-btn-primary, var(--agnosticui-primary));\n}\n.btn-primary.btn-bordered:hover,\n.btn-primary.btn-bordered:focus {\n  background-color: var(--agnosticui-btn-primary, var(--agnosticui-primary));\n  color: var(--agnosticui-btn-primary-color, var(--agnosticui-light));\n}\n\n.btn-primary:visited {\n  color: var(--agnosticui-btn-primary-color, var(--agnosticui-light));\n}\n\n.btn-secondary {\n  background-color: var(--agnosticui-btn-secondary, var(--agnosticui-secondary));\n  border-color: var(--agnosticui-btn-secondary, var(--agnosticui-secondary));\n  color: var(--agnosticui-btn-secondary-color, var(--agnosticui-light));\n}\n\n/* Border and font is secondary. When hovered, we invert with secondary background and white font */\n.btn-secondary.btn-bordered {\n  color: var(--agnosticui-btn-secondary, var(--agnosticui-secondary));\n}\n.btn-secondary.btn-bordered:hover,\n.btn-secondary.btn-bordered:focus {\n  background-color: var(--agnosticui-btn-secondary, var(--agnosticui-secondary));\n  color: var(--agnosticui-btn-secondary-color, var(--agnosticui-light));\n}\n\n.btn-secondary:visited {\n  color: var(--agnosticui-btn-secondary-color, var(--agnosticui-light));\n}\n\n/*\n* Raised Buttons\n*\n* A classic looking button that offers\n* great depth and affordance.\n*/\n.btn-raised {\n  border-color: var(--agnosticui-btn-bgcolor, var(--agnosticui-gray-light));\n  border-style: solid;\n  background: -webkit-gradient(linear, left top, left bottom, from(#f6f6f6), to(#e1e1e1));\n  /* Note that while one can customize some of these slightly, we essentially have hard-coded\n  box shadow rgba values so they can't really do so drastically which is probably fine :) */\n  background: linear-gradient(\n    var(--agnosticui-btn-raised-from, var(--agnosticui-gray-mid)),\n    var(--agnosticui-btn-raised-to, var(--agnosticui-gray-extra-light))\n  );\n  -webkit-box-shadow: inset 0px 1px 0px rgba(255, 255, 255, 0.3), 0 1px 2px rgba(0, 0, 0, 0.15);\n  box-shadow: inset 0px 1px 0px rgba(255, 255, 255, 0.3), 0 1px 2px rgba(0, 0, 0, 0.15);\n}\n.btn-raised:hover,\n.btn-raised:focus {\n  background: -webkit-gradient(linear, left top, left bottom, from(white), to(gainsboro));\n  background: linear-gradient(to bottom, white, gainsboro);\n}\n.btn-raised.active {\n  /* TODO -- maybe this shouldn't be hard coded */\n  background: #eeeeee;\n  -webkit-box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.2), 0px 1px 0px white;\n  box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.2), 0px 1px 0px white;\n}\n\n/*\n* Raised Primary Buttons\n*/\n.btn-raised.btn-primary {\n  border-color: var(--agnosticui-btn-primary-raised-to, var(--agnosticui-primary-from));\n  background: -webkit-gradient(\n    linear,\n    left top,\n    left bottom,\n    from(var(--agnosticui-btn-primary-raised-from, var(--agnosticui-primary-from))),\n    to(var(--agnosticui-btn-primary-raised-to, var(--agnosticui-primary-to)))\n  );\n  background: linear-gradient(\n    var(--agnosticui-btn-primary-raised-from, var(--agnosticui-primary-from)),\n    var(--agnosticui-btn-primary-raised-to, var(--agnosticui-primary-to))\n  );\n}\n\n.btn-raised.btn-primary:hover,\n.btn-raised.btn-primary:focus {\n  background: linear-gradient(\n    to bottom,\n    var(--agnosticui-btn-primary-raised-hover-from, var(--agnosticui-primary-hover)),\n    var(--agnosticui-btn-primary-raised-to, var(--agnosticui-primary-from))\n  );\n  background: -webkit-gradient(\n    linear,\n    left top,\n    left bottom,\n    from(var(--agnosticui-btn-primary-raised-hover-from, var(--agnosticui-primary-hover))),\n    to(var(--agnosticui-btn-primary-raised-to, var(--agnosticui-primary-from)))\n  );\n  background: linear-gradient(\n    var(--agnosticui-btn-primary-raised-hover-from, var(--agnosticui-primary-hover)),\n    var(--agnosticui-btn-primary-raised-to, var(--agnosticui-primary-from))\n  );\n}\n\n.btn-raised.btn-primary:active,\n.btn-raised.btn-primary.active {\n  opacity: 0.9;\n  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.3);\n}\n\n/*\n* Raised Secondary Buttons\n*/\n.btn-raised.btn-secondary {\n  border-color: var(--agnosticui-btn-secondary-raised-to, var(--agnosticui-secondary-to));\n  background: -webkit-gradient(\n    linear,\n    left top,\n    left bottom,\n    from(var(--agnosticui-btn-secondary-raised-from, var(--agnosticui-secondary-from))),\n    to(var(--agnosticui-btn-secondary-raised-to, var(--agnosticui-secondary-to)))\n  );\n  background: linear-gradient(\n    var(--agnosticui-btn-secondary-raised-from, var(--agnosticui-secondary-from)),\n    var(--agnosticui-btn-secondary-raised-to, var(--agnosticui-secondary-to))\n  );\n}\n\n.btn-raised.btn-secondary:hover,\n.btn-raised.btn-secondary:focus {\n  background: linear-gradient(\n    to bottom,\n    var(--agnosticui-btn-secondary-raised-hover-from, var(--agnosticui-secondary-hover)),\n    var(--agnosticui-btn-secondary-raised-to, var(--agnosticui-secondary-to))\n  );\n  background: -webkit-gradient(\n    linear,\n    left top,\n    left bottom,\n    from(var(--agnosticui-btn-secondary-raised-hover-from, var(--agnosticui-secondary-hover))),\n    to(var(--agnosticui-btn-secondary-raised-to, var(--agnosticui-secondary-to)))\n  );\n  background: linear-gradient(\n    var(--agnosticui-btn-secondary-raised-hover-from, var(--agnosticui-secondary-hover)),\n    var(--agnosticui-btn-secondary-raised-to, var(--agnosticui-secondary-to))\n  );\n}\n\n.btn-raised.btn-secondary:active,\n.btn-raised.btn-secondary.active {\n  opacity: 0.9;\n  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.3);\n}\n\n/**\n  * Border Buttons\n  */\n.btn-bordered {\n  border-width: 1px;\n  background: transparent;\n}\n\n/**\n  * Sizes\n  */\n.btn-large {\n  font-size: calc(var(--agnosticui-btn-font-size, 1rem) + 0.25rem);\n  height: 3rem;\n  line-height: 3rem;\n  padding: 0 3rem;\n}\n\n.btn-small {\n  font-size: calc(var(--agnosticui-btn-font-size, 1rem) - 0.25rem);\n  height: 2rem;\n  line-height: 2rem;\n  padding: 0 2rem;\n}\n\n/**\n  * Rounded\n  */\n.btn-rounded {\n  border-radius: var(--agnosticui-btn-radius, 0.25rem);\n}\n\n.btn-pill {\n  border-radius: 200px;\n}\n\n/*\n  * Size Adjustment for equal height & width buttons\n  *\n  * Remove padding\n  */\n.btn-circle {\n  border-radius: 100%;\n  width: 2.5rem;\n  height: 2.5rem;\n  padding: 0 !important;\n}\n\n.btn-circle-large {\n  font-size: calc(var(--agnosticui-btn-font-size, 1rem) + 0.25rem);\n  width: 3rem;\n  height: 3rem;\n}\n\n.btn-circle-small {\n  font-size: calc(var(--agnosticui-btn-font-size, 1rem) - 0.25rem);\n  width: 2rem;\n  height: 2rem;\n}\n\n/**\n * Button Block (stacked)\n */\n.btn-block {\n  width: 100%;\n}\n/* This is a utility class used if you literally want to stack block buttons one after another.\nApply this class to the nth-of-type(2) onwards to ensure the borders line up properly. */\n.btn-block-following {\n  margin-block-start: -1px;\n}\n\n/**\n * Invisible buttons. Generally used for a Cancel or icon button that behaves like a button,\n * semantically and for a11y, but, does so without all the typical \"button chrome\" behind it.\n */\n.btn-blank {\n  background-color: transparent;\n  border: 0;\n  border-radius: 0;\n  box-shadow: none;\n}\n.btn-blank:hover,\n.btn-blank:active,\n.btn-blank:focus {\n  background: none;\n  outline: 3px solid transparent;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "getAriaLabel": {
                    "name": "getAriaLabel",
                    "getSignature": {
                        "name": "getAriaLabel",
                        "type": "string",
                        "returnType": "string",
                        "line": 19
                    }
                },
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "string",
                        "returnType": "string",
                        "line": 24
                    }
                }
            }
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-57b8e4b0f617d371706cb36764caf90d",
            "file": "src/stories/ag/src/lib/card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-card",
            "styleUrls": [
                "./card.css"
            ],
            "styles": [],
            "template": "<div [ngClass]=\"classes\">    <ng-content></ng-content>\n  </div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "css",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "isAnimated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "isSkinned",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "isStacked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'ag-card',\n  template: `<div [ngClass]=\"classes\">\n    <ng-content></ng-content>\n  </div>`,\n  styleUrls: ['./card.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport default class CardComponent {\n  @Input() css?: string;\n  @Input() isAnimated?: boolean;\n  @Input() isSkinned?: boolean = true;\n  @Input() isStacked?: boolean;\n  public get classes(): string {\n  // classes() {\n    const baseClass = this.isSkinned ? 'card' : 'card-base';\n    const isAnimatedClass = this.isAnimated ? 'card-animated' : '';\n    const isStackedClass = this.isStacked ? 'card-stacked' : '';\n    const overrides = this.css ? `${this.css}` : '';\n    return [\n      baseClass,\n      isAnimatedClass,\n      isStackedClass,\n      overrides,\n    ].join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/**\n * Cards\n *\n * I drew some inspiration from the article on media-query less cards:\n * https://css-tricks.com/how-to-make-a-media-query-less-card-component/\n */\n.card,\n.card-base {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  position: relative;\n  box-sizing: border-box;\n  width: 100%;\n}\n\n.card,\n.card-skin {\n  box-shadow: var(--agnosticui-card-boxshadow1-offset-x, 2px)\n      var(--agnosticui-card-boxshadow1-offset-y, 6px) var(--agnosticui-card-boxshadow1-blur, 4px)\n      var(--agnosticui-card-boxshadow1-color, rgba(0, 0, 0, 0.25)),\n    var(--agnosticui-card-boxshadow2-offset-x, -2px)\n      var(--agnosticui-card-boxshadow2-offset-y, -1px) var(--agnosticui-card-boxshadow2-blur, 6px)\n      var(--agnosticui-card-boxshadow2-color, rgba(0, 0, 0, 0.15));\n  border-radius: var(--agnosticui-card-border-radius, 4px);\n  overflow: hidden;\n}\n\n.card:hover,\n.card-skin:hover {\n  box-shadow: var(--agnosticui-card-boxshadow1-offset-x, 2px)\n      var(--agnosticui-card-boxshadow1-offset-y, 6px) var(--agnosticui-card-boxshadow1-blur, 4px)\n      var(--agnosticui-card-boxshadow-hover-color-from, rgba(0, 0, 0, 0.35)),\n    var(--agnosticui-card-boxshadow2-offset-x, -2px)\n      var(--agnosticui-card-boxshadow2-offset-y, -1px) var(--agnosticui-card-boxshadow2-blur, 6px)\n      var(--agnosticui-card-boxshadow-hover-color-to, rgba(0, 0, 0, 0.25));\n}\n\n/**\n * Animates the y position and box shadow on hover\n */\n.card-animated {\n  transition: box-shadow ease-out 5s,\n    transform var(--agnosticui-timing-fast)\n      cubic-bezier(\n        var(--agnosticui-card-cubic-1, 0.39),\n        var(--agnosticui-card-cubic-2, 0.575),\n        var(--agnosticui-card-cubic-3, 0.565),\n        var(--agnosticui-card-cubic-4, 1)\n      );\n}\n.card-animated:hover {\n  transform: translateY(var(--agnosticui-card-translateY-hover, -3px));\n  transition: box-shadow ease-out var(--agnosticui-timing-fast),\n    transform var(--agnosticui-timing-slow)\n      cubic-bezier(\n        var(--agnosticui-card-cubic-1, 0.39),\n        var(--agnosticui-card-cubic-2, 0.575),\n        var(--agnosticui-card-cubic-3, 0.565),\n        var(--agnosticui-card-cubic-4, 1)\n      );\n}\n\n.card-stacked {\n  flex-direction: column;\n}\n",
                    "styleUrl": "./card.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "string",
                        "returnType": "string",
                        "line": 17
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-9551138e2f1afa65b2b72e51093516b6",
            "file": "src/stories/ag/src/lib/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header [ngClass]=\"classes\">    <div class=\"header-content\"><ng-content></ng-content></div>\n  </header>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "css",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "string"
                },
                {
                    "name": "isSkinned",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean"
                },
                {
                    "name": "isSticky",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'ag-header-nav',\n  template: `<nav>\n    <div [ngClass]=\"classes\">\n      <ng-content></ng-content>\n    </div>\n  </nav>`,\n  styleUrls: ['./headernav.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class HeaderNavComponent {\n  @Input() css?: string;\n  public get classes(): string {\n    let klasses = ['header-nav', this.css ? `${this.css}` : ''];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ')\n  }\n}\n\n@Component({\n  selector: 'ag-header-nav-item',\n  template: `<div [ngClass]=\"classes\"><ng-content></ng-content></div>`,\n  styleUrls: ['./headernavitem.css'],\n})\n\nexport class HeaderNavItemComponent {\n  @Input() css?: string;\n  public get classes(): string {\n    let klasses = ['header-nav-item', this.css ? `${this.css}` : ''];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n}\n\n@Component({\n  selector: 'ag-header',\n  template: `<header [ngClass]=\"classes\">\n    <div class=\"header-content\"><ng-content></ng-content></div>\n  </header>\n  `,\n  styleUrls: ['./header.css'],\n})\n\nexport default class HeaderComponent {\n  @Input() css?: string;\n  @Input() isSkinned?: boolean = true;\n  @Input() isSticky?: boolean;\n  \n  public get classes(): string {\n    const baseClass = this.isSkinned ? 'header' : 'header-base';\n    const isStickyClass = this.isSticky ? 'header-sticky' : '';\n    const overrides = this.css ? `${this.css}` : '';\n    let klasses = [\n      baseClass,\n      isStickyClass,\n      overrides,\n    ];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".header,\n.header-base {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.header-base img,\n.header img {\n  max-width: 100%;\n  height: auto;\n}\n\n.header,\n.header-skin {\n  background-color: var(--agnosticui-header-background-color, var(--agnosticui-light));\n  box-shadow: var(--agnosticui-header-box-shadow-hor, 0)\n    var(--agnosticui-header-box-shadow-ver, 1px) var(--agnosticui-header-box-shadow-blur, 5px)\n    var(--agnosticui-header-box-shadow-spread, 2px)\n    var(--agnosticui-header-box-shadow-color, rgba(0, 0, 0, 0.1));\n  height: var(--agnosticui-header-mobile-height, 128px);\n  font-family: var(--agnosticui-header-font-family, var(--agnosticui-font-family));\n  border-bottom: 1px solid var(--agnosticui-header-border-color, var(--agnosticui-gray-light));\n}\n\n.header-content {\n  width: var(--agnosticui-header-content-width, 960px);\n  max-width: 100%;\n  margin: 0 auto;\n}\n\n.header .header-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n/**\n * If you make your header sticky, you should likely consider that jump links\n * e.g. <h1 id=\"Jump-Here\">... will tuck underneath the header! Here's a recommendation\n * for how to circumnavigate this issue via scroll-margin-top:\n  h1[id],\n  h2[id],\n  h3[id],\n  h4[id],\n  h5[id],\n  h6[id] {\n    scroll-margin-top: 80px;\n  }\n * In this case I have a 64px tall header so I've added 16px for clearance -- you'll need\n * to curate your own use case, but scroll-margin-top is super useful for this use case.\n */\n\n.header-sticky {\n  position: relative;\n  top: 0;\n  z-index: 10;\n}\n\n@media (min-width: 960px) {\n  .header-sticky {\n    position: sticky;\n  }\n\n  .header .header-content {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n  .header {\n    height: var(--agnosticui-header-height, var(--fluid-64));\n  }\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "string",
                        "returnType": "string",
                        "line": 52
                    }
                }
            }
        },
        {
            "name": "HeaderNavComponent",
            "id": "component-HeaderNavComponent-9551138e2f1afa65b2b72e51093516b6",
            "file": "src/stories/ag/src/lib/header.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-header-nav",
            "styleUrls": [
                "./headernav.css"
            ],
            "styles": [],
            "template": "<nav>    <div [ngClass]=\"classes\">\n      <ng-content></ng-content>\n    </div>\n  </nav>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "css",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'ag-header-nav',\n  template: `<nav>\n    <div [ngClass]=\"classes\">\n      <ng-content></ng-content>\n    </div>\n  </nav>`,\n  styleUrls: ['./headernav.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class HeaderNavComponent {\n  @Input() css?: string;\n  public get classes(): string {\n    let klasses = ['header-nav', this.css ? `${this.css}` : ''];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ')\n  }\n}\n\n@Component({\n  selector: 'ag-header-nav-item',\n  template: `<div [ngClass]=\"classes\"><ng-content></ng-content></div>`,\n  styleUrls: ['./headernavitem.css'],\n})\n\nexport class HeaderNavItemComponent {\n  @Input() css?: string;\n  public get classes(): string {\n    let klasses = ['header-nav-item', this.css ? `${this.css}` : ''];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n}\n\n@Component({\n  selector: 'ag-header',\n  template: `<header [ngClass]=\"classes\">\n    <div class=\"header-content\"><ng-content></ng-content></div>\n  </header>\n  `,\n  styleUrls: ['./header.css'],\n})\n\nexport default class HeaderComponent {\n  @Input() css?: string;\n  @Input() isSkinned?: boolean = true;\n  @Input() isSticky?: boolean;\n  \n  public get classes(): string {\n    const baseClass = this.isSkinned ? 'header' : 'header-base';\n    const isStickyClass = this.isSticky ? 'header-sticky' : '';\n    const overrides = this.css ? `${this.css}` : '';\n    let klasses = [\n      baseClass,\n      isStickyClass,\n      overrides,\n    ];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/* Goes on the <ul> */\n.header-nav {\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n@media (min-width: 960px) {\n  .header-nav {\n    flex-direction: row;\n  }\n}\n",
                    "styleUrl": "./headernav.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "string",
                        "returnType": "string",
                        "line": 16
                    }
                }
            }
        },
        {
            "name": "HeaderNavItemComponent",
            "id": "component-HeaderNavItemComponent-9551138e2f1afa65b2b72e51093516b6",
            "file": "src/stories/ag/src/lib/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-header-nav-item",
            "styleUrls": [
                "./headernavitem.css"
            ],
            "styles": [],
            "template": "<div [ngClass]=\"classes\"><ng-content></ng-content></div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "css",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'ag-header-nav',\n  template: `<nav>\n    <div [ngClass]=\"classes\">\n      <ng-content></ng-content>\n    </div>\n  </nav>`,\n  styleUrls: ['./headernav.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class HeaderNavComponent {\n  @Input() css?: string;\n  public get classes(): string {\n    let klasses = ['header-nav', this.css ? `${this.css}` : ''];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ')\n  }\n}\n\n@Component({\n  selector: 'ag-header-nav-item',\n  template: `<div [ngClass]=\"classes\"><ng-content></ng-content></div>`,\n  styleUrls: ['./headernavitem.css'],\n})\n\nexport class HeaderNavItemComponent {\n  @Input() css?: string;\n  public get classes(): string {\n    let klasses = ['header-nav-item', this.css ? `${this.css}` : ''];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n}\n\n@Component({\n  selector: 'ag-header',\n  template: `<header [ngClass]=\"classes\">\n    <div class=\"header-content\"><ng-content></ng-content></div>\n  </header>\n  `,\n  styleUrls: ['./header.css'],\n})\n\nexport default class HeaderComponent {\n  @Input() css?: string;\n  @Input() isSkinned?: boolean = true;\n  @Input() isSticky?: boolean;\n  \n  public get classes(): string {\n    const baseClass = this.isSkinned ? 'header' : 'header-base';\n    const isStickyClass = this.isSticky ? 'header-sticky' : '';\n    const overrides = this.css ? `${this.css}` : '';\n    let klasses = [\n      baseClass,\n      isStickyClass,\n      overrides,\n    ];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".header-nav-item {\n  display: inline-block;\n}\n.header-nav-item:not(:last-child) {\n  margin-inline-end: initial;\n  margin-block-end: var(--fluid-8);\n}\n\n.header-nav-item a {\n  color: var(--agnosticui-header-color, var(--agnosticui-font-color));\n  text-decoration: none;\n}\n\n@media (min-width: 960px) {\n  .header-nav-item:not(:last-child) {\n    margin-inline-end: var(--agnosticui-header-nav-spacing, var(--fluid-32));\n    margin-block-end: initial;\n  }\n}\n",
                    "styleUrl": "./headernavitem.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "string",
                        "returnType": "string",
                        "line": 31
                    }
                }
            }
        },
        {
            "name": "SvgComponent",
            "id": "component-SvgComponent-8c5c7707cba6a4e6deac4e2e80a360cb",
            "file": "src/stories/ag/src/lib/svg.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-sample-svg",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./svg.component.svg"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ag-sample-svg',\n  templateUrl: './svg.component.svg',\n})\n\nexport default class SvgComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<svg\n  class=\"btn-icon\"\n  role=\"img\"\n  viewBox=\"0 0 16 16\"\n  version=\"1.1\"\n  width=\"16\"\n  height=\"16\"\n  aria-hidden=\"true\"\n>\n  <desc>Example icon graphic</desc>\n  <path\n    fill=\"currentColor\"\n    fillRule=\"evenodd\"\n    d=\"M9 12h2l-3 3-3-3h2V7h2v5zm3-8c0-.44-.91-3-4.5-3C5.08 1 3 2.92 3 5 1.02\n5 0 6.52 0 8c0 1.53 1 3 3 3h3V9.7H3C1.38 9.7 1.3 8.28 1.3 8c0-.17.05-1.7\n1.7-1.7h1.3V5c0-1.39 1.56-2.7 3.2-2.7 2.55 0 3.13 1.55 3.2 1.8v1.2H12c.81\n0 2.7.22 2.7 2.2 0 2.09-2.25 2.2-2.7 2.2h-2V11h2c2.08 0 4-1.16 4-3.5C16\n5.06 14.08 4 12 4z\"\n  />\n</svg>"
        },
        {
            "name": "TabComponent",
            "id": "component-TabComponent-b9e4af8aff31ead5ac5f262f8dc2fefd",
            "file": "src/stories/ag/src/lib/tab.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-tab",
            "styleUrls": [
                "./tabs.css"
            ],
            "styles": [],
            "template": "<div [hidden]=\"!active\" role=\"tabpanel\" [attr.aria-label]=\"title()\" class=\"pane\"><ng-content></ng-content></div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "tabTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "title",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n@Component({\n  selector: 'ag-tab',\n  styleUrls: ['./tabs.css'],\n  template: `<div [hidden]=\"!active\" role=\"tabpanel\" [attr.aria-label]=\"title()\" class=\"pane\"><ng-content></ng-content></div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport default class TabComponent {\n  @Input() tabTitle!: string;\n  @Input() active = false;\n  title() {\n    return this.tabTitle;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".tab-close {\n  color: var(--agnosticui-gray-dark);\n  text-align: right;\n  cursor: pointer;\n}\n\n.tab-list {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  padding-left: 0;\n  margin-bottom: 0;\n  list-style: none;\n  border-bottom: var(--agnosticui-tabs-border-size, 1px) solid\n    var(--agnosticui-tabs-bgcolor, var(--agnosticui-gray-light));\n}\n\n.tab-list.tab-button {\n  margin-bottom: -1px;\n  background: 0 0;\n  border: 1px solid transparent;\n  border-top-left-radius: var(--agnosticui-tabs-radius, 0.25rem);\n  border-top-right-radius: var(--agnosticui-tabs-radius, 0.25rem);\n}\n\n.tab-button {\n  /* Blank out the button */\n  background-color: transparent;\n  border: 0;\n  border-radius: 0;\n  box-shadow: none;\n\n  /* Nav link */\n  display: block;\n  padding: 0.5rem 1rem;\n  color: var(--agnosticui-tabs-primary, var(--agnosticui-primary));\n  text-decoration: none;\n  transition: color var(--agnosticui-timing-fast) ease-in-out,\n    background-color var(--agnosticui-timing-fast) ease-in-out,\n    border-color var(--agnosticui-timing-fast) ease-in-out;\n}\n\n.tab-item.tab-button.active {\n  color: var(--agnosticui-gray-dark);\n  /* TODO -- update these colors to use css properties */\n  background-color: #fff;\n  border-color: #dee2e6 #dee2e6 #fff;\n}\n\n.tab-item:hover,\n.tab-button:focus {\n  border-color: #e9ecef #e9ecef #dee2e6;\n  isolation: isolate;\n  cursor: pointer;\n}\n\n.tab-button:disabled {\n  color: var(--agnosticui-tabas-disabled-bg, var(--agnosticui-gray-mid-dark));\n  background-color: transparent;\n  border-color: transparent;\n  opacity: 0.8;\n}\n\n.pane {\n  padding: 1em;\n}\n",
                    "styleUrl": "./tabs.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "TabsComponent",
            "id": "component-TabsComponent-e8579063c46f4030316ee90c0994d0fa",
            "file": "src/stories/ag/src/lib/tabs.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-tabs",
            "styleUrls": [
                "./tabs.css"
            ],
            "styles": [],
            "template": "<div class=\"tab-list\" role=\"tablist\" aria-label=\"Tabs\">\n  <button *ngFor=\"let tab of tabs\" (click)=\"selectTab(tab)\" class=\"tab-item tab-button\" [class.active]=\"tab.active\" role=\"tab\" [attr.aria-selected]=\"tab.active\">\n    {{tab.tabTitle}}\n  </button>\n</div>\n<ng-content></ng-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<Tab>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "Tab"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectTab",
                    "args": [
                        {
                            "name": "tab",
                            "type": "Tab",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "Tab",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterContentInit, Component, ContentChildren, QueryList, ChangeDetectionStrategy } from '@angular/core';\nimport Tab from './tab.component';\n@Component({\n  selector: 'ag-tabs',\n  template: `\n    <div class=\"tab-list\" role=\"tablist\" aria-label=\"Tabs\">\n      <button *ngFor=\"let tab of tabs\" (click)=\"selectTab(tab)\" class=\"tab-item tab-button\" [class.active]=\"tab.active\" role=\"tab\" [attr.aria-selected]=\"tab.active\">\n        {{tab.tabTitle}}\n      </button>\n    </div>\n    <ng-content></ng-content>\n  `,\n  styleUrls: ['./tabs.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport default class TabsComponent implements AfterContentInit {\n  @ContentChildren(Tab) tabs!: QueryList<Tab>;\n\n  ngAfterContentInit() {\n    let activeTabs = this.tabs.filter((tab) => tab.active);\n    if (activeTabs.length === 0) {\n      this.selectTab(this.tabs.first);\n    }\n  }\n\n  selectTab(tab: Tab) {\n    // First deactivate all tabs, then select passed in tab\n    this.tabs.toArray().forEach(tab => tab.active = false);\n    tab.active = true;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".tab-close {\n  color: var(--agnosticui-gray-dark);\n  text-align: right;\n  cursor: pointer;\n}\n\n.tab-list {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  padding-left: 0;\n  margin-bottom: 0;\n  list-style: none;\n  border-bottom: var(--agnosticui-tabs-border-size, 1px) solid\n    var(--agnosticui-tabs-bgcolor, var(--agnosticui-gray-light));\n}\n\n.tab-list.tab-button {\n  margin-bottom: -1px;\n  background: 0 0;\n  border: 1px solid transparent;\n  border-top-left-radius: var(--agnosticui-tabs-radius, 0.25rem);\n  border-top-right-radius: var(--agnosticui-tabs-radius, 0.25rem);\n}\n\n.tab-button {\n  /* Blank out the button */\n  background-color: transparent;\n  border: 0;\n  border-radius: 0;\n  box-shadow: none;\n\n  /* Nav link */\n  display: block;\n  padding: 0.5rem 1rem;\n  color: var(--agnosticui-tabs-primary, var(--agnosticui-primary));\n  text-decoration: none;\n  transition: color var(--agnosticui-timing-fast) ease-in-out,\n    background-color var(--agnosticui-timing-fast) ease-in-out,\n    border-color var(--agnosticui-timing-fast) ease-in-out;\n}\n\n.tab-item.tab-button.active {\n  color: var(--agnosticui-gray-dark);\n  /* TODO -- update these colors to use css properties */\n  background-color: #fff;\n  border-color: #dee2e6 #dee2e6 #fff;\n}\n\n.tab-item:hover,\n.tab-button:focus {\n  border-color: #e9ecef #e9ecef #dee2e6;\n  isolation: isolate;\n  cursor: pointer;\n}\n\n.tab-button:disabled {\n  color: var(--agnosticui-tabas-disabled-bg, var(--agnosticui-gray-mid-dark));\n  background-color: transparent;\n  border-color: transparent;\n  opacity: 0.8;\n}\n\n.pane {\n  padding: 1em;\n}\n",
                    "styleUrl": "./tabs.css"
                }
            ],
            "stylesData": "",
            "implements": [
                "AfterContentInit"
            ]
        }
    ],
    "modules": [
        {
            "name": "AgModule",
            "id": "module-AgModule-f422911741d669d1ba0610a7d363ca32",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/ag/src/lib/ag.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { AgComponent } from './ag.component';\n\n\n\n@NgModule({\n  declarations: [\n    AgComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    AgComponent\n  ]\n})\nexport class AgModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AgComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AgComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonGroupModule",
            "id": "module-ButtonGroupModule-44954adf44e9359a6bc6005208f261ed",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/ag/src/lib/buttongroup.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport ButtonGroupComponent from './buttongroup.component';\n\n@NgModule({\n   imports: [CommonModule],\n   declarations: [ButtonGroupComponent],\n   exports: [ButtonGroupComponent]\n})\nexport class ButtonGroupModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonGroupComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonGroupComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonModule",
            "id": "module-ButtonModule-692d5667a9c553642722d46068cc1925",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/ag/src/lib/button.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport ButtonComponent from './button.component';\n\n@NgModule({\n   imports: [CommonModule],\n   declarations: [ButtonComponent],\n   exports: [ButtonComponent]\n})\nexport class ButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CardModule",
            "id": "module-CardModule-47a59ab54f71e64f4872a25337beeb0c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/ag/src/lib/card.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport CardComponent from './card.component';\n\n@NgModule({\n   imports: [CommonModule],\n   declarations: [CardComponent],\n   exports: [CardComponent]\n})\nexport class CardModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HeaderModule",
            "id": "module-HeaderModule-15b86f4fb504bc6c12647fceb09ab763",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/ag/src/lib/header.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport HeaderComponent, { HeaderNavComponent, HeaderNavItemComponent } from './header.component';\n@NgModule({\n   imports: [CommonModule],\n   declarations: [HeaderComponent, HeaderNavComponent, HeaderNavItemComponent],\n   exports: [HeaderComponent, HeaderNavComponent, HeaderNavItemComponent]\n})\nexport class HeaderModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "HeaderNavComponent"
                        },
                        {
                            "name": "HeaderNavItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "HeaderNavComponent"
                        },
                        {
                            "name": "HeaderNavItemComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TabModule",
            "id": "module-TabModule-104df4773b2afe8df9fa1c7ad88cae62",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/ag/src/lib/tab.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport TabComponent from './tab.component';\n\n@NgModule({\n   imports: [CommonModule],\n   declarations: [TabComponent],\n   exports: [TabComponent]\n})\nexport class TabModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TabComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TabComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TabsModule",
            "id": "module-TabsModule-eabc141373cfcf011f85f8b4631af871",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/ag/src/lib/tabs.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport TabsComponent from './tabs.component';\n\n@NgModule({\n   imports: [CommonModule],\n   declarations: [TabsComponent],\n   exports: [TabsComponent]\n})\nexport class TabsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TabsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TabsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onClicked: action('onClicked')\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/ButtonIcon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onClicked: action('onClicked')\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/ButtonGroup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onClicked: action('onClicked')\n}"
            },
            {
                "name": "BlankButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BlockButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BlockPrimaryButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BlockSecondaryButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Bordered",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ButtonIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/ButtonIcon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CircleButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "CssAndAria",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/ButtonGroup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CssPropButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DisabledButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HeaderExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoSkin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RaisedButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RaisedPrimaryButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "ResetButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Rounded",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "sampleSvgIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/ButtonIcon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n<svg\n  class=\"btn-icon\"\n  style=\"margin-left: 6px; margin-right: 6px;\"\n  role=\"img\"\n  viewBox=\"0 0 16 16\"\n  version=\"1.1\"\n  width=\"16\"\n  height=\"16\"\n  aria-hidden=\"true\"\n>\n  <desc>Example icon graphic</desc>\n  <path\n    fill=\"currentColor\"\n    fillRule=\"evenodd\"\n    d=\"M9 12h2l-3 3-3-3h2V7h2v5zm3-8c0-.44-.91-3-4.5-3C5.08 1 3 2.92 3 5 1.02\n5 0 6.52 0 8c0 1.53 1 3 3 3h3V9.7H3C1.38 9.7 1.3 8.28 1.3 8c0-.17.05-1.7\n1.7-1.7h1.3V5c0-1.39 1.56-2.7 3.2-2.7 2.55 0 3.13 1.55 3.2 1.8v1.2H12c.81\n0 2.7.22 2.7 2.2 0 2.09-2.25 2.2-2.7 2.2h-2V11h2c2.08 0 4-1.16 4-3.5C16\n5.06 14.08 4 12 4z\"\n  />\n</svg>`"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SubmitButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TabsAll",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TabsExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  props: {\n    propInput: {\n      onClicked: actions.onClicked,\n      type: args.type || \"button\",\n      size: args.size || \"medium\",\n      css: args.css || undefined,\n      mode: args.mode || undefined,\n      isBordered: args.isBordered || false,\n      isBlock: args.isBlock || false,\n      isBlank: args.isBlank || false,\n      isRaised: args.isRaised|| false,\n      isCircle: args.isCircle || false,\n      // Literally look if false otherwise it's true ¯\\_(ツ)_/¯\n      isSkinned: args.isSkinned === false ? args.isSkinned : true,\n      isRounded: args.isRounded || false,\n      isDisabled: args.isDisabled || false,\n    }\n  },\n  template: `<ag-button\n    [mode]=\"propInput.mode\"\n    [isBlank]=\"propInput.isBlank\"\n    [type]=\"propInput.type\"\n    [size]=\"propInput.size\"\n    [css]=\"propInput.css\"\n    [isBordered]=\"propInput.isBordered\"\n    [isRaised]=\"propInput.isRaised\"\n    [isDisabled]=\"propInput.isDisabled\"\n    [isCircle]=\"propInput.isCircle\"\n    [isBlock]=\"propInput.isBlock\"\n    [isSkinned]=\"propInput.isSkinned\"\n    [isRounded]=\"propInput.isRounded\"\n    (handleClick)=\"propInput.onClicked($event)\"\n  >Go</ag-button>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/ButtonIcon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  props: {\n    propInput: {\n      onClicked: actions.onClicked\n    },\n  },\n  template: `<div>\n    <ag-button [mode]=\"primary\" (onClick)=\"propInput.onClicked($event)\">\n    ${sampleSvgIcon} \n    Icon Left</ag-button>\n  </div>\n  <div style=\"margin-top: 32px;\">\n    <ag-button [mode]=\"primary\" (onClick)=\"propInput.onClicked($event)\">\n      Icon Right \n      ${sampleSvgIcon} \n    </ag-button>\n  </div>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/ButtonGroup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonGroupComponent>",
                "defaultValue": "(args: ButtonGroupComponent) => ({\n  props: {\n    propInput: {\n      css: args.css || undefined,\n      ariaLabel: args.ariaLabel || undefined,\n      onClicked: actions.onClicked,\n    }\n  },\n  template: `<ag-button-group [css]=\"propInput.css\" [ariaLabel]=\"propInput.ariaLabel\">\n    <ag-button (onClick)=\"propInput.onClicked($event)\">Button 1</ag-button>\n    <ag-button (onClick)=\"propInput.onClicked($event)\">Button 2</ag-button>\n    <ag-button (onClick)=\"propInput.onClicked($event)\">Button 3</ag-button>\n  </ag-button-group>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Card>",
                "defaultValue": "(args: Card) => ({\n  template: `\n    <ag-card>\n      <div style=\"padding: 24px;\">Default</div>\n      <div style=\"padding: 24px;\">Card</div>\n    </ag-card>\n    <ag-card isStacked=\"true\">\n      <div style=\"padding: 24px;\">Stacked</div>\n      <div style=\"padding: 24px;\">Card</div>\n    </ag-card>\n    <ag-card isStacked=\"true\" isAnimated=\"true\">\n      <div style=\"padding: 24px;\">Stacked & Animated</div>\n      <div style=\"padding: 24px;\">Card</div>\n    </ag-card>\n    <ag-card isSkinned=\"false\">\n      <div style=\"padding: 24px;\">Base Card</div>\n      <div style=\"padding: 24px;\">No Skin</div>\n    </ag-card>\n    <ag-card css=\"addition-classes\">\n      <div style=\"padding: 24px;\">Custom CSS Class Overrides</div>\n      <div style=\"padding: 24px;\">Inspect to see additional-classes</div>\n    </ag-card>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<HeaderComponent>",
                "defaultValue": "(args: HeaderComponent) => ({\n  template: `<ag-header isSticky=\"true\">\n    <ag-header-nav>\n      <ag-header-nav-item style=\"margin-right: 8px;\">\n        <a style=\"color: '#333333'; textDecoration: 'none';\" href=\"#\">\n          Home\n        </a>\n      </ag-header-nav-item>\n      <ag-header-nav-item>\n        <a style=\"color: '#333333'; textDecoration: 'none';\" href=\"#\">\n          Services\n        </a>\n      </ag-header-nav-item>\n    </ag-header-nav>\n  </ag-header>`\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/Tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Tabs>",
                "defaultValue": "(args: Tabs) => ({\n  template: `\n    <ag-tabs>\n      <ag-tab [tabTitle]=\"'Tab 1'\">\n        Tab 1 content\n      </ag-tab>\n      <ag-tab tabTitle=\"Tab 2\">\n        Tab 2 content\n      </ag-tab>\n    </ag-tabs>\n  `,\n})"
            },
            {
                "name": "Triplets",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ag/src/lib/ButtonGroup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/ag/src/lib/Button.stories.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onClicked: action('onClicked')\n}"
                },
                {
                    "name": "BlankButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "BlockButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "BlockPrimaryButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "BlockSecondaryButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Bordered",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CircleButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CssPropButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DisabledButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NoSkin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "RaisedButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "RaisedPrimaryButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ResetButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Rounded",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SubmitButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  props: {\n    propInput: {\n      onClicked: actions.onClicked,\n      type: args.type || \"button\",\n      size: args.size || \"medium\",\n      css: args.css || undefined,\n      mode: args.mode || undefined,\n      isBordered: args.isBordered || false,\n      isBlock: args.isBlock || false,\n      isBlank: args.isBlank || false,\n      isRaised: args.isRaised|| false,\n      isCircle: args.isCircle || false,\n      // Literally look if false otherwise it's true ¯\\_(ツ)_/¯\n      isSkinned: args.isSkinned === false ? args.isSkinned : true,\n      isRounded: args.isRounded || false,\n      isDisabled: args.isDisabled || false,\n    }\n  },\n  template: `<ag-button\n    [mode]=\"propInput.mode\"\n    [isBlank]=\"propInput.isBlank\"\n    [type]=\"propInput.type\"\n    [size]=\"propInput.size\"\n    [css]=\"propInput.css\"\n    [isBordered]=\"propInput.isBordered\"\n    [isRaised]=\"propInput.isRaised\"\n    [isDisabled]=\"propInput.isDisabled\"\n    [isCircle]=\"propInput.isCircle\"\n    [isBlock]=\"propInput.isBlock\"\n    [isSkinned]=\"propInput.isSkinned\"\n    [isRounded]=\"propInput.isRounded\"\n    (handleClick)=\"propInput.onClicked($event)\"\n  >Go</ag-button>`,\n})"
                }
            ],
            "src/stories/ag/src/lib/ButtonIcon.stories.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/ButtonIcon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onClicked: action('onClicked')\n}"
                },
                {
                    "name": "ButtonIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/ButtonIcon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "sampleSvgIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/ButtonIcon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n<svg\n  class=\"btn-icon\"\n  style=\"margin-left: 6px; margin-right: 6px;\"\n  role=\"img\"\n  viewBox=\"0 0 16 16\"\n  version=\"1.1\"\n  width=\"16\"\n  height=\"16\"\n  aria-hidden=\"true\"\n>\n  <desc>Example icon graphic</desc>\n  <path\n    fill=\"currentColor\"\n    fillRule=\"evenodd\"\n    d=\"M9 12h2l-3 3-3-3h2V7h2v5zm3-8c0-.44-.91-3-4.5-3C5.08 1 3 2.92 3 5 1.02\n5 0 6.52 0 8c0 1.53 1 3 3 3h3V9.7H3C1.38 9.7 1.3 8.28 1.3 8c0-.17.05-1.7\n1.7-1.7h1.3V5c0-1.39 1.56-2.7 3.2-2.7 2.55 0 3.13 1.55 3.2 1.8v1.2H12c.81\n0 2.7.22 2.7 2.2 0 2.09-2.25 2.2-2.7 2.2h-2V11h2c2.08 0 4-1.16 4-3.5C16\n5.06 14.08 4 12 4z\"\n  />\n</svg>`"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/ButtonIcon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  props: {\n    propInput: {\n      onClicked: actions.onClicked\n    },\n  },\n  template: `<div>\n    <ag-button [mode]=\"primary\" (onClick)=\"propInput.onClicked($event)\">\n    ${sampleSvgIcon} \n    Icon Left</ag-button>\n  </div>\n  <div style=\"margin-top: 32px;\">\n    <ag-button [mode]=\"primary\" (onClick)=\"propInput.onClicked($event)\">\n      Icon Right \n      ${sampleSvgIcon} \n    </ag-button>\n  </div>`,\n})"
                }
            ],
            "src/stories/ag/src/lib/ButtonGroup.stories.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/ButtonGroup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onClicked: action('onClicked')\n}"
                },
                {
                    "name": "CssAndAria",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/ButtonGroup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/ButtonGroup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonGroupComponent>",
                    "defaultValue": "(args: ButtonGroupComponent) => ({\n  props: {\n    propInput: {\n      css: args.css || undefined,\n      ariaLabel: args.ariaLabel || undefined,\n      onClicked: actions.onClicked,\n    }\n  },\n  template: `<ag-button-group [css]=\"propInput.css\" [ariaLabel]=\"propInput.ariaLabel\">\n    <ag-button (onClick)=\"propInput.onClicked($event)\">Button 1</ag-button>\n    <ag-button (onClick)=\"propInput.onClicked($event)\">Button 2</ag-button>\n    <ag-button (onClick)=\"propInput.onClicked($event)\">Button 3</ag-button>\n  </ag-button-group>`,\n})"
                },
                {
                    "name": "Triplets",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/ButtonGroup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/ag/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/stories/ag/src/lib/Header.stories.ts": [
                {
                    "name": "HeaderExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<HeaderComponent>",
                    "defaultValue": "(args: HeaderComponent) => ({\n  template: `<ag-header isSticky=\"true\">\n    <ag-header-nav>\n      <ag-header-nav-item style=\"margin-right: 8px;\">\n        <a style=\"color: '#333333'; textDecoration: 'none';\" href=\"#\">\n          Home\n        </a>\n      </ag-header-nav-item>\n      <ag-header-nav-item>\n        <a style=\"color: '#333333'; textDecoration: 'none';\" href=\"#\">\n          Services\n        </a>\n      </ag-header-nav-item>\n    </ag-header-nav>\n  </ag-header>`\n})"
                }
            ],
            "src/stories/ag/src/lib/Card.stories.ts": [
                {
                    "name": "TabsAll",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Card>",
                    "defaultValue": "(args: Card) => ({\n  template: `\n    <ag-card>\n      <div style=\"padding: 24px;\">Default</div>\n      <div style=\"padding: 24px;\">Card</div>\n    </ag-card>\n    <ag-card isStacked=\"true\">\n      <div style=\"padding: 24px;\">Stacked</div>\n      <div style=\"padding: 24px;\">Card</div>\n    </ag-card>\n    <ag-card isStacked=\"true\" isAnimated=\"true\">\n      <div style=\"padding: 24px;\">Stacked & Animated</div>\n      <div style=\"padding: 24px;\">Card</div>\n    </ag-card>\n    <ag-card isSkinned=\"false\">\n      <div style=\"padding: 24px;\">Base Card</div>\n      <div style=\"padding: 24px;\">No Skin</div>\n    </ag-card>\n    <ag-card css=\"addition-classes\">\n      <div style=\"padding: 24px;\">Custom CSS Class Overrides</div>\n      <div style=\"padding: 24px;\">Inspect to see additional-classes</div>\n    </ag-card>\n  `,\n})"
                }
            ],
            "src/stories/ag/src/lib/Tabs.stories.ts": [
                {
                    "name": "TabsExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ag/src/lib/Tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Tabs>",
                    "defaultValue": "(args: Tabs) => ({\n  template: `\n    <ag-tabs>\n      <ag-tab [tabTitle]=\"'Tab 1'\">\n        Tab 1 content\n      </ag-tab>\n      <ag-tab tabTitle=\"Tab 2\">\n        Tab 2 content\n      </ag-tab>\n    </ag-tabs>\n  `,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BlankButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BlockButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BlockPrimaryButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BlockSecondaryButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Bordered",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CircleButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CssPropButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoSkin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RaisedButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RaisedPrimaryButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ResetButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Rounded",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SubmitButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/ButtonGroup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/ButtonGroup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CssAndAria",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/ButtonGroup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/ButtonGroup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Triplets",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/ButtonIcon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/ButtonIcon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/ButtonIcon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sampleSvgIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/ButtonIcon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TabsAll",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HeaderExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TabsExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/Tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/ag.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AgComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/ag.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AgService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/buttongroup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderNavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderNavItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/svg.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SvgComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/lib/tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ag/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}
import"./index.56618267.js";import{_ as o,C as i,r as n,o as c,c as l,e as a,w as d,a as s,b as e}from"./app.cef730ef.js";const r={name:"CardExamples",components:{Card:i}},_=s("div",{class:"p16"},"Border Card",-1),h=s("div",{class:"p16 flex-grow-1 flex-shrink-1",style:{"flex-basis":"50ch"}},[e(" The card comes with minimal "),s("span",{class:"quoted"},"skinning css"),e(" and no padding (the padding you see here is from the demo styles). By default Cards have a flex direction of "),s("i",null,"row"),e(", so each child with a "),s("i",null,"flex"),e(" rule will get placed as a sort of column in the row (until the viewport is shrunk below a size that can support the content's flex-basis; under that it will wrap and thus stack). ")],-1),p=s("div",{class:"mbe24"},null,-1),u=s("div",{class:"p16"}," Border & Rounded ",-1),f=s("div",{class:"p16 flex-grow-1 flex-shrink-1",style:{"flex-basis":"50ch"}},[e(" The card comes with minimal "),s("span",{class:"quoted"},"skinning css"),e(" and no padding (the padding you see here is from the demo styles). By default Cards have a flex direction of "),s("i",null,"row"),e(", so each child with a "),s("i",null,"flex"),e(" rule will get placed as a sort of column in the row (until the viewport is shrunk below a size that can support the content's flex-basis; under that it will wrap and thus stack). ")],-1),v=s("div",{class:"mbe24"},null,-1),m=s("div",{class:"p16"}," Stacked & Border ",-1),w=s("div",{style:{padding:"24px"}},[e(" Stacked cards start their lives with flex direction "),s("i",null,"column"),e(", so each child be stacked one on top of the other and continue to grow downward. ")],-1),x=s("div",{class:"mbe24"},null,-1),k=s("div",{class:"p16"}," Stacked & Shadow ",-1),b=s("div",{class:"p16"}," Card ",-1),C=s("div",{class:"mbe24"},null,-1),g=s("div",{class:"p16"}," Stacked, Animated (on hover), & Shadow ",-1),y=s("div",{class:"p16"}," Card ",-1),B=s("div",{class:"mbe24"},null,-1),S=s("div",{class:"p16"}," Success ",-1),E=s("div",{class:"p16"}," Card ",-1),$=s("div",{class:"mbe24"},null,-1),N=s("div",{class:"p16"}," Info ",-1),T=s("div",{class:"p16"}," Card ",-1),V=s("div",{class:"mbe24"},null,-1),q=s("div",{class:"p16"}," Warning ",-1),z=s("div",{class:"p16"}," Card ",-1),A=s("div",{class:"mbe24"},null,-1),I=s("div",{class:"p16"}," Error ",-1),R=s("div",{class:"p16"}," Card ",-1);function W(j,D,F,G,H,J){const t=n("Card");return c(),l("section",null,[a(t,{"is-border":""},{default:d(()=>[_,h]),_:1}),p,a(t,{"is-border":"","is-rounded":""},{default:d(()=>[u,f]),_:1}),v,a(t,{"is-stacked":"","is-border":""},{default:d(()=>[m,w]),_:1}),x,a(t,{"is-stacked":"","is-shadow":""},{default:d(()=>[k,b]),_:1}),C,a(t,{"is-stacked":"","is-shadow":"","is-animated":""},{default:d(()=>[g,y]),_:1}),B,a(t,{type:"success","is-stacked":""},{default:d(()=>[S,E]),_:1}),$,a(t,{type:"info","is-stacked":""},{default:d(()=>[N,T]),_:1}),V,a(t,{type:"warning","is-stacked":""},{default:d(()=>[q,z]),_:1}),A,a(t,{type:"error","is-stacked":""},{default:d(()=>[I,R]),_:1})])}var M=o(r,[["render",W]]);export{M as C};

/* No I'm not going to fucking use 2000 css utilities, and, ahem, they've been around
forever so don't tell me their proliferation is this new thing. I'll introduce these
on an as-needed and pragmatic basis because I know how to write CSS. WTF. Rant over :) */
.width-full {
  width: 100%;
}

.screenreader-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/**
 * Color tokens
 */
:root {
  --agnosticui-primary: #077acb;
  /* from / to are used for gradients and things like raised buttons */
  --agnosticui-primary-from: #0662a2;
  --agnosticui-primary-to: #2087d0;
  --agnosticui-primary-hover: #2087d0;
  --agnosticui-secondary: #c94d2b;
  --agnosticui-secondary-from: #a33e23;
  --agnosticui-secondary-to: #bc583d;
  --agnosticui-secondary-hover: #bc583d;
  --agnosticui-error-color: #e42002;
  --agnosticui-gray-extra-light: #f8f8f8;
  --agnosticui-gray-light: #e9e9e9;
  --agnosticui-gray-mid: #d8d8d8;
  --agnosticui-gray-mid-dark: #cccccc;
  /* gray dark seems to meet a11y contrast requirements for help text on inputs */
  --agnosticui-gray-dark: #757575;
  --agnosticui-dark: #333333;
  --agnosticui-light: #ffffff;
  --agnosticui-disabled-bg: var(--agnosticui-gray-light);
  --agnosticui-disabled-color: var(--agnosticui-gray-dark);
  --agnosticui-focus-ring-color: rgba(55, 149, 225, 0.5);
  /* Caption, Sub-heading, etc., can be added here */
}

/**
 * Space tokens
 *
 * These spacing tokens are, essentially, literals for use on a
 * slightly modified 8pt grid, but also converge conveniently with
 * some common type scale boundaries:
 * 10, 12, 14, 18, 24, 36, 48, 64, 72
 * Note, that we do not prefix these with `agnostic-default-` as
 * they're not meant to be overriden and mainly used:
 * 1. internally within AgnosticUI
 * 2. optionally by your app if you like these and want to
 * import them for example.
 * Feel free to use your spacing scale if you so desire.
 */
:root {
  /* DEPRECATED: We're going to move towards using rem-based units */
  --Space-80: 80px;
  --Space-72: 72px;
  --Space-64: 64px;
  --Space-56: 56px;
  --Space-48: 48px;
  --Space-40: 40px;
  --Space-32: 32px;
  --Space-24: 24px;
  --Space-16: 16px;
  --Space-14: 14px;
  --Space-12: 12px;
  --Space-10: 10px;
  --Space-8: 8px;
  --Space-6: 6px;
  --Space-4: 4px;

  /* Rem-based sizes named by their initial pixel value assuming 1 rem is 16px */
  --fluid-2px: 0.125rem;
  --fluid-4px: 0.25rem;
  --fluid-6px: 0.375rem;
  --fluid-8px: 0.5rem;
  --fluid-10px: 0.625rem;
  --fluid-12px: 0.75rem;
  --fluid-14px: 0.875rem;
  --fluid-16px: 1rem;
  --fluid-18px: 1.125rem;
  --fluid-20px: 1.25rem;
  --fluid-24px: 1.5rem;
  --fluid-32px: 2rem;
  --fluid-36px: 2.25rem;
  --fluid-40px: 2.5rem;
  --fluid-48px: 3rem;
  --fluid-56px: 3.5rem;
  --fluid-64px: 4rem;
  --fluid-72px: 4.5rem;
  --fluid-80px: 5rem;
  
  /* Note this is really for form controls like inputs and buttons */
  --agnosticui-line-height: var(--fluid-20px);
  --agnosticui-side-padding: var(--fluid-12px);
  --agnosticui-vertical-pad: var(--fluid-8px);
}

/**
 * Font size tokens
 * These are perhaps a bit arbitrary but were chosen from both the
 * default point sizes for type in OS X, and the classic typographic
 * scale as provided by The Elements of Typographic Style which are:
 * 9, 10, 11, 12, 13, 14, 18, 24, 36, 48, (alt. 60) 64, 72, 96, 144, 288
 * 
 * You're encouraged to change these setttings to whatever suits your app's needs
 * bestâ€”these are just sensible defaults to get you started.
 */

:root {
  --agnosticui-font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Open Sans", "Ubuntu", "Fira Sans", Helvetica, "Droid Sans", "Helvetica Neue", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  --agnosticui-font-family-serif: Georgia, Cambria, "Times New Roman", Times, serif;
  --agnosticui-font-family-mono: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  --agnosticui-h1: 64px;
  --agnosticui-h2: 48px;
  --agnosticui-h3: 36px;
  --agnosticui-h4: 24px;
  --agnosticui-h5: 18px;
  --agnosticui-h6: 12px;
  --agnosticui-body: 16px;
  --agnosticui-font-weight-bold: 600;
  --agnosticui-font-weight-light: 300;
  --agnosticui-font-color: #333333;
}

:root {
  --agnosticui-timing-fast: 200ms;
  --agnosticui-timing-medium: 300ms;
  --agnosticui-timing-slow: 450ms;
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1vbi5jb25jYXQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzt3RkFFd0Y7QUFDeEY7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLFdBQVc7RUFDWCxVQUFVO0VBQ1YsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLGVBQWU7QUFDakI7O0FBRUE7O0VBRUU7QUFDRjtFQUNFLDZCQUE2QjtFQUM3QixvRUFBb0U7RUFDcEUsa0NBQWtDO0VBQ2xDLGdDQUFnQztFQUNoQyxtQ0FBbUM7RUFDbkMsK0JBQStCO0VBQy9CLG9DQUFvQztFQUNwQyxrQ0FBa0M7RUFDbEMscUNBQXFDO0VBQ3JDLGlDQUFpQztFQUNqQyxzQ0FBc0M7RUFDdEMsZ0NBQWdDO0VBQ2hDLDhCQUE4QjtFQUM5QixtQ0FBbUM7RUFDbkMsK0VBQStFO0VBQy9FLCtCQUErQjtFQUMvQiwwQkFBMEI7RUFDMUIsMkJBQTJCO0VBQzNCLHNEQUFzRDtFQUN0RCx3REFBd0Q7RUFDeEQsc0RBQXNEO0VBQ3RELGtEQUFrRDtBQUNwRDs7QUFFQTs7Ozs7Ozs7Ozs7OztFQWFFO0FBQ0Y7RUFDRSxrRUFBa0U7RUFDbEUsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLGNBQWM7RUFDZCxjQUFjOztFQUVkLDhFQUE4RTtFQUM5RSxxQkFBcUI7RUFDckIsb0JBQW9CO0VBQ3BCLHFCQUFxQjtFQUNyQixtQkFBbUI7RUFDbkIsc0JBQXNCO0VBQ3RCLHFCQUFxQjtFQUNyQixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0QixxQkFBcUI7RUFDckIsb0JBQW9CO0VBQ3BCLGtCQUFrQjtFQUNsQixxQkFBcUI7RUFDckIsb0JBQW9CO0VBQ3BCLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFDcEIsa0JBQWtCO0VBQ2xCLG9CQUFvQjtFQUNwQixrQkFBa0I7O0VBRWxCLGtFQUFrRTtFQUNsRSwyQ0FBMkM7RUFDM0MsNENBQTRDO0VBQzVDLDJDQUEyQztBQUM3Qzs7QUFFQTs7Ozs7Ozs7O0VBU0U7O0FBRUY7RUFDRSw0TkFBNE47RUFDNU4saUZBQWlGO0VBQ2pGLG1IQUFtSDtFQUNuSCxxQkFBcUI7RUFDckIscUJBQXFCO0VBQ3JCLHFCQUFxQjtFQUNyQixxQkFBcUI7RUFDckIscUJBQXFCO0VBQ3JCLHFCQUFxQjtFQUNyQix1QkFBdUI7RUFDdkIsa0NBQWtDO0VBQ2xDLG1DQUFtQztFQUNuQyxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSwrQkFBK0I7RUFDL0IsaUNBQWlDO0VBQ2pDLCtCQUErQjtBQUNqQyIsImZpbGUiOiJjb21tb24ucHJlZml4ZWQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogTm8gSSdtIG5vdCBnb2luZyB0byBmdWNraW5nIHVzZSAyMDAwIGNzcyB1dGlsaXRpZXMsIGFuZCwgYWhlbSwgdGhleSd2ZSBiZWVuIGFyb3VuZFxuZm9yZXZlciBzbyBkb24ndCB0ZWxsIG1lIHRoZWlyIHByb2xpZmVyYXRpb24gaXMgdGhpcyBuZXcgdGhpbmcuIEknbGwgaW50cm9kdWNlIHRoZXNlXG5vbiBhbiBhcy1uZWVkZWQgYW5kIHByYWdtYXRpYyBiYXNpcyBiZWNhdXNlIEkga25vdyBob3cgdG8gd3JpdGUgQ1NTLiBXVEYuIFJhbnQgb3ZlciA6KSAqL1xuLndpZHRoLWZ1bGwge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnNjcmVlbnJlYWRlci1vbmx5IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBib3JkZXItd2lkdGg6IDA7XG59XG5cbi8qKlxuICogQ29sb3IgdG9rZW5zXG4gKi9cbjpyb290IHtcbiAgLS1hZ25vc3RpY3VpLXByaW1hcnk6ICMwNzdhY2I7XG4gIC8qIGZyb20gLyB0byBhcmUgdXNlZCBmb3IgZ3JhZGllbnRzIGFuZCB0aGluZ3MgbGlrZSByYWlzZWQgYnV0dG9ucyAqL1xuICAtLWFnbm9zdGljdWktcHJpbWFyeS1mcm9tOiAjMDY2MmEyO1xuICAtLWFnbm9zdGljdWktcHJpbWFyeS10bzogIzIwODdkMDtcbiAgLS1hZ25vc3RpY3VpLXByaW1hcnktaG92ZXI6ICMyMDg3ZDA7XG4gIC0tYWdub3N0aWN1aS1zZWNvbmRhcnk6ICNjOTRkMmI7XG4gIC0tYWdub3N0aWN1aS1zZWNvbmRhcnktZnJvbTogI2EzM2UyMztcbiAgLS1hZ25vc3RpY3VpLXNlY29uZGFyeS10bzogI2JjNTgzZDtcbiAgLS1hZ25vc3RpY3VpLXNlY29uZGFyeS1ob3ZlcjogI2JjNTgzZDtcbiAgLS1hZ25vc3RpY3VpLWVycm9yLWNvbG9yOiAjZTQyMDAyO1xuICAtLWFnbm9zdGljdWktZ3JheS1leHRyYS1saWdodDogI2Y4ZjhmODtcbiAgLS1hZ25vc3RpY3VpLWdyYXktbGlnaHQ6ICNlOWU5ZTk7XG4gIC0tYWdub3N0aWN1aS1ncmF5LW1pZDogI2Q4ZDhkODtcbiAgLS1hZ25vc3RpY3VpLWdyYXktbWlkLWRhcms6ICNjY2NjY2M7XG4gIC8qIGdyYXkgZGFyayBzZWVtcyB0byBtZWV0IGExMXkgY29udHJhc3QgcmVxdWlyZW1lbnRzIGZvciBoZWxwIHRleHQgb24gaW5wdXRzICovXG4gIC0tYWdub3N0aWN1aS1ncmF5LWRhcms6ICM3NTc1NzU7XG4gIC0tYWdub3N0aWN1aS1kYXJrOiAjMzMzMzMzO1xuICAtLWFnbm9zdGljdWktbGlnaHQ6ICNmZmZmZmY7XG4gIC0tYWdub3N0aWN1aS1kaXNhYmxlZC1iZzogdmFyKC0tYWdub3N0aWN1aS1ncmF5LWxpZ2h0KTtcbiAgLS1hZ25vc3RpY3VpLWRpc2FibGVkLWNvbG9yOiB2YXIoLS1hZ25vc3RpY3VpLWdyYXktZGFyayk7XG4gIC0tYWdub3N0aWN1aS1mb2N1cy1yaW5nLWNvbG9yOiByZ2JhKDU1LCAxNDksIDIyNSwgMC41KTtcbiAgLyogQ2FwdGlvbiwgU3ViLWhlYWRpbmcsIGV0Yy4sIGNhbiBiZSBhZGRlZCBoZXJlICovXG59XG5cbi8qKlxuICogU3BhY2UgdG9rZW5zXG4gKlxuICogVGhlc2Ugc3BhY2luZyB0b2tlbnMgYXJlLCBlc3NlbnRpYWxseSwgbGl0ZXJhbHMgZm9yIHVzZSBvbiBhXG4gKiBzbGlnaHRseSBtb2RpZmllZCA4cHQgZ3JpZCwgYnV0IGFsc28gY29udmVyZ2UgY29udmVuaWVudGx5IHdpdGhcbiAqIHNvbWUgY29tbW9uIHR5cGUgc2NhbGUgYm91bmRhcmllczpcbiAqIDEwLCAxMiwgMTQsIDE4LCAyNCwgMzYsIDQ4LCA2NCwgNzJcbiAqIE5vdGUsIHRoYXQgd2UgZG8gbm90IHByZWZpeCB0aGVzZSB3aXRoIGBhZ25vc3RpYy1kZWZhdWx0LWAgYXNcbiAqIHRoZXkncmUgbm90IG1lYW50IHRvIGJlIG92ZXJyaWRlbiBhbmQgbWFpbmx5IHVzZWQ6XG4gKiAxLiBpbnRlcm5hbGx5IHdpdGhpbiBBZ25vc3RpY1VJXG4gKiAyLiBvcHRpb25hbGx5IGJ5IHlvdXIgYXBwIGlmIHlvdSBsaWtlIHRoZXNlIGFuZCB3YW50IHRvXG4gKiBpbXBvcnQgdGhlbSBmb3IgZXhhbXBsZS5cbiAqIEZlZWwgZnJlZSB0byB1c2UgeW91ciBzcGFjaW5nIHNjYWxlIGlmIHlvdSBzbyBkZXNpcmUuXG4gKi9cbjpyb290IHtcbiAgLyogREVQUkVDQVRFRDogV2UncmUgZ29pbmcgdG8gbW92ZSB0b3dhcmRzIHVzaW5nIHJlbS1iYXNlZCB1bml0cyAqL1xuICAtLVNwYWNlLTgwOiA4MHB4O1xuICAtLVNwYWNlLTcyOiA3MnB4O1xuICAtLVNwYWNlLTY0OiA2NHB4O1xuICAtLVNwYWNlLTU2OiA1NnB4O1xuICAtLVNwYWNlLTQ4OiA0OHB4O1xuICAtLVNwYWNlLTQwOiA0MHB4O1xuICAtLVNwYWNlLTMyOiAzMnB4O1xuICAtLVNwYWNlLTI0OiAyNHB4O1xuICAtLVNwYWNlLTE2OiAxNnB4O1xuICAtLVNwYWNlLTE0OiAxNHB4O1xuICAtLVNwYWNlLTEyOiAxMnB4O1xuICAtLVNwYWNlLTEwOiAxMHB4O1xuICAtLVNwYWNlLTg6IDhweDtcbiAgLS1TcGFjZS02OiA2cHg7XG4gIC0tU3BhY2UtNDogNHB4O1xuXG4gIC8qIFJlbS1iYXNlZCBzaXplcyBuYW1lZCBieSB0aGVpciBpbml0aWFsIHBpeGVsIHZhbHVlIGFzc3VtaW5nIDEgcmVtIGlzIDE2cHggKi9cbiAgLS1mbHVpZC0ycHg6IDAuMTI1cmVtO1xuICAtLWZsdWlkLTRweDogMC4yNXJlbTtcbiAgLS1mbHVpZC02cHg6IDAuMzc1cmVtO1xuICAtLWZsdWlkLThweDogMC41cmVtO1xuICAtLWZsdWlkLTEwcHg6IDAuNjI1cmVtO1xuICAtLWZsdWlkLTEycHg6IDAuNzVyZW07XG4gIC0tZmx1aWQtMTRweDogMC44NzVyZW07XG4gIC0tZmx1aWQtMTZweDogMXJlbTtcbiAgLS1mbHVpZC0xOHB4OiAxLjEyNXJlbTtcbiAgLS1mbHVpZC0yMHB4OiAxLjI1cmVtO1xuICAtLWZsdWlkLTI0cHg6IDEuNXJlbTtcbiAgLS1mbHVpZC0zMnB4OiAycmVtO1xuICAtLWZsdWlkLTM2cHg6IDIuMjVyZW07XG4gIC0tZmx1aWQtNDBweDogMi41cmVtO1xuICAtLWZsdWlkLTQ4cHg6IDNyZW07XG4gIC0tZmx1aWQtNTZweDogMy41cmVtO1xuICAtLWZsdWlkLTY0cHg6IDRyZW07XG4gIC0tZmx1aWQtNzJweDogNC41cmVtO1xuICAtLWZsdWlkLTgwcHg6IDVyZW07XG4gIFxuICAvKiBOb3RlIHRoaXMgaXMgcmVhbGx5IGZvciBmb3JtIGNvbnRyb2xzIGxpa2UgaW5wdXRzIGFuZCBidXR0b25zICovXG4gIC0tYWdub3N0aWN1aS1saW5lLWhlaWdodDogdmFyKC0tZmx1aWQtMjBweCk7XG4gIC0tYWdub3N0aWN1aS1zaWRlLXBhZGRpbmc6IHZhcigtLWZsdWlkLTEycHgpO1xuICAtLWFnbm9zdGljdWktdmVydGljYWwtcGFkOiB2YXIoLS1mbHVpZC04cHgpO1xufVxuXG4vKipcbiAqIEZvbnQgc2l6ZSB0b2tlbnNcbiAqIFRoZXNlIGFyZSBwZXJoYXBzIGEgYml0IGFyYml0cmFyeSBidXQgd2VyZSBjaG9zZW4gZnJvbSBib3RoIHRoZVxuICogZGVmYXVsdCBwb2ludCBzaXplcyBmb3IgdHlwZSBpbiBPUyBYLCBhbmQgdGhlIGNsYXNzaWMgdHlwb2dyYXBoaWNcbiAqIHNjYWxlIGFzIHByb3ZpZGVkIGJ5IFRoZSBFbGVtZW50cyBvZiBUeXBvZ3JhcGhpYyBTdHlsZSB3aGljaCBhcmU6XG4gKiA5LCAxMCwgMTEsIDEyLCAxMywgMTQsIDE4LCAyNCwgMzYsIDQ4LCAoYWx0LiA2MCkgNjQsIDcyLCA5NiwgMTQ0LCAyODhcbiAqIFxuICogWW91J3JlIGVuY291cmFnZWQgdG8gY2hhbmdlIHRoZXNlIHNldHR0aW5ncyB0byB3aGF0ZXZlciBzdWl0cyB5b3VyIGFwcCdzIG5lZWRzXG4gKiBiZXN04oCUdGhlc2UgYXJlIGp1c3Qgc2Vuc2libGUgZGVmYXVsdHMgdG8gZ2V0IHlvdSBzdGFydGVkLlxuICovXG5cbjpyb290IHtcbiAgLS1hZ25vc3RpY3VpLWZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiU2Vnb2UgVUlcIiwgXCJPcGVuIFNhbnNcIiwgXCJVYnVudHVcIiwgXCJGaXJhIFNhbnNcIiwgSGVsdmV0aWNhLCBcIkRyb2lkIFNhbnNcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmLCBcIkFwcGxlIENvbG9yIEVtb2ppXCIsIFwiU2Vnb2UgVUkgRW1vamlcIiwgXCJTZWdvZSBVSSBTeW1ib2xcIjtcbiAgLS1hZ25vc3RpY3VpLWZvbnQtZmFtaWx5LXNlcmlmOiBHZW9yZ2lhLCBDYW1icmlhLCBcIlRpbWVzIE5ldyBSb21hblwiLCBUaW1lcywgc2VyaWY7XG4gIC0tYWdub3N0aWN1aS1mb250LWZhbWlseS1tb25vOiBTRk1vbm8tUmVndWxhciwgTWVubG8sIE1vbmFjbywgQ29uc29sYXMsIFwiTGliZXJhdGlvbiBNb25vXCIsIFwiQ291cmllciBOZXdcIiwgbW9ub3NwYWNlO1xuICAtLWFnbm9zdGljdWktaDE6IDY0cHg7XG4gIC0tYWdub3N0aWN1aS1oMjogNDhweDtcbiAgLS1hZ25vc3RpY3VpLWgzOiAzNnB4O1xuICAtLWFnbm9zdGljdWktaDQ6IDI0cHg7XG4gIC0tYWdub3N0aWN1aS1oNTogMThweDtcbiAgLS1hZ25vc3RpY3VpLWg2OiAxMnB4O1xuICAtLWFnbm9zdGljdWktYm9keTogMTZweDtcbiAgLS1hZ25vc3RpY3VpLWZvbnQtd2VpZ2h0LWJvbGQ6IDYwMDtcbiAgLS1hZ25vc3RpY3VpLWZvbnQtd2VpZ2h0LWxpZ2h0OiAzMDA7XG4gIC0tYWdub3N0aWN1aS1mb250LWNvbG9yOiAjMzMzMzMzO1xufVxuXG46cm9vdCB7XG4gIC0tYWdub3N0aWN1aS10aW1pbmctZmFzdDogMjAwbXM7XG4gIC0tYWdub3N0aWN1aS10aW1pbmctbWVkaXVtOiAzMDBtcztcbiAgLS1hZ25vc3RpY3VpLXRpbWluZy1zbG93OiA0NTBtcztcbn0iXX0= */
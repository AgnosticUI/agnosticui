/*
* Base Button Style
*
* Please note that we have two versions of this:
* `.btn` which encompasses both the base and skin styles
* `.btn-base` and `btn-skin`.
* The reason we've done this is to provide you with some convenience but
* also flexibility. Most will just want to apply `.btn`. However, if the
* base skin of the button does not work for you, another option is to only
* apply `.btn-base` and then set your own "button skin".
*/
.button_btn-base__2gef7,
.button_btn__12vXR {
  /* TODO test this fallback override syntax is correct */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  -webkit-user-select: none;
      -ms-user-select: none;
          user-select: none;
  -webkit-appearance: none;
          appearance: none;
  cursor: pointer;
  box-sizing: border-box;
  transition-property: all;
  transition-duration: var(--agnosticui-timing-medium);
}

.button_btn-skin__1_yt1,
.button_btn__12vXR {
  color: var(--agnosticui-dark);
  color: var(--agnosticui-btn-font-color, var(--agnosticui-dark));
  background-color: var(--agnosticui-gray-light);
  background-color: var(--agnosticui-btn-bgcolor, var(--agnosticui-gray-light));
  border-color: var(--agnosticui-gray-light);
  border-color: var(--agnosticui-btn-bgcolor, var(--agnosticui-gray-light));
  /* seems like a reasonable default as chrome picks `outset` which results in a weird 3d effect */
  border-style: solid;
  border-width: 1px;
  border-width: var(--agnosticui-btn-border-size, 1px);
  font-family: var(--agnosticui-font-family);
  font-family: var(--agnosticui-btn-font-family, var(--agnosticui-font-family));
  font-weight: 400;
  font-weight: var(--agnosticui-btn-font-weight, 400);
  font-size: 1rem;
  font-size: var(--agnosticui-btn-font-size, 1rem);
  /* this can be overriden, but it might mess with the balance of the button heights across variants */
  line-height: 1.25rem;
  line-height: var(--agnosticui-line-height, 1.25rem);
  -webkit-padding-before: 0.5rem;
          padding-block-start: 0.5rem;
  -webkit-padding-before: var(--agnosticui-vertical-pad, 0.5rem);
          padding-block-start: var(--agnosticui-vertical-pad, 0.5rem);
  -webkit-padding-after: 0.5rem;
          padding-block-end: 0.5rem;
  -webkit-padding-after: var(--agnosticui-vertical-pad, 0.5rem);
          padding-block-end: var(--agnosticui-vertical-pad, 0.5rem);
  -webkit-padding-start: 0.75rem;
          padding-inline-start: 0.75rem;
  -webkit-padding-start: var(--agnosticui-side-padding, 0.75rem);
          padding-inline-start: var(--agnosticui-side-padding, 0.75rem);
  -webkit-padding-end: 0.75rem;
          padding-inline-end: 0.75rem;
  -webkit-padding-end: var(--agnosticui-side-padding, 0.75rem);
          padding-inline-end: var(--agnosticui-side-padding, 0.75rem);
  text-decoration: none;
  text-align: center;
  outline: none;
}

.button_btn__12vXR:visited {
  color: var(--agnosticui-dark);
  color: var(--agnosticui-btn-font-color, var(--agnosticui-dark));
}

.button_btn__12vXR:hover {
  opacity: 0.85;
  text-decoration: none;
}

.button_btn__12vXR:active {
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.3);
  text-decoration: none;
  transition-duration: 0s;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
}

.button_btn__12vXR:focus {
  box-shadow: 0 0 0 3px var(--agnosticui-focus-ring-color);
  /* Needed for High Contrast mode */
  outline: 3px solid transparent;
  transition: box-shadow var(--agnosticui-timing-fast) ease-out;
}

/*
* Disabled State
*
* The disabled state uses the class .disabled, is-disabled,
* and the form attribute disabled="disabled".
* The use of !important is only added because this is a state
* that must be applied to all buttons when in a disabled state.
*/
.button_btn__12vXR.button_disabled__1Mlxp,
.button_btn__12vXR:disabled {
  top: 0 !important;
  background: var(--agnosticui-gray-mid-dark) !important;
  background: var(--agnosticui-btn-disabled-bg, var(--agnosticui-gray-mid-dark)) !important;
  text-shadow: 0 1px 1px rgba(255, 255, 255, 1) !important;
  /* primary, secondary, natural, all look same when disabled; and we don't want to
  have an inadvertant looking blue primary border when disabled so it's transparent */
  border-color: transparent;
  color: var(--agnosticui-gray-dark) !important;
  color: var(--agnosticui-btn-disabled-color, var(--agnosticui-gray-dark)) !important;
  cursor: default !important;
  -webkit-appearance: none !important;
          appearance: none !important;
  box-shadow: none !important;
  opacity: 0.8 !important;
}

.button_btn-primary__1ilWA {
  background-color: var(--agnosticui-primary);
  background-color: var(--agnosticui-btn-primary, var(--agnosticui-primary));
  border-color: var(--agnosticui-primary);
  border-color: var(--agnosticui-btn-primary, var(--agnosticui-primary));
  color: var(--agnosticui-light);
  color: var(--agnosticui-btn-primary-color, var(--agnosticui-light));
}

/* Border and font is primary. When hovered, we invert with primary background and white font */
.button_btn-primary__1ilWA.button_btn-bordered__26B08 {
  color: var(--agnosticui-primary);
  color: var(--agnosticui-btn-primary, var(--agnosticui-primary));
}
.button_btn-primary__1ilWA.button_btn-bordered__26B08:hover,
.button_btn-primary__1ilWA.button_btn-bordered__26B08:focus {
  background-color: var(--agnosticui-primary);
  background-color: var(--agnosticui-btn-primary, var(--agnosticui-primary));
  color: var(--agnosticui-light);
  color: var(--agnosticui-btn-primary-color, var(--agnosticui-light));
}

.button_btn-primary__1ilWA:visited {
  color: var(--agnosticui-light);
  color: var(--agnosticui-btn-primary-color, var(--agnosticui-light));
}

.button_btn-secondary__5rmkD {
  background-color: var(--agnosticui-secondary);
  background-color: var(--agnosticui-btn-secondary, var(--agnosticui-secondary));
  border-color: var(--agnosticui-secondary);
  border-color: var(--agnosticui-btn-secondary, var(--agnosticui-secondary));
  color: var(--agnosticui-light);
  color: var(--agnosticui-btn-secondary-color, var(--agnosticui-light));
}

/* Border and font is secondary. When hovered, we invert with secondary background and white font */
.button_btn-secondary__5rmkD.button_btn-bordered__26B08 {
  color: var(--agnosticui-secondary);
  color: var(--agnosticui-btn-secondary, var(--agnosticui-secondary));
}
.button_btn-secondary__5rmkD.button_btn-bordered__26B08:hover,
.button_btn-secondary__5rmkD.button_btn-bordered__26B08:focus {
  background-color: var(--agnosticui-secondary);
  background-color: var(--agnosticui-btn-secondary, var(--agnosticui-secondary));
  color: var(--agnosticui-light);
  color: var(--agnosticui-btn-secondary-color, var(--agnosticui-light));
}

.button_btn-secondary__5rmkD:visited {
  color: var(--agnosticui-light);
  color: var(--agnosticui-btn-secondary-color, var(--agnosticui-light));
}

/*
* Raised Buttons
*
* A classic looking button that offers
* great depth and affordance.
*/
.button_btn-raised__3tcN1 {
  border-color: var(--agnosticui-gray-light);
  border-color: var(--agnosticui-btn-bgcolor, var(--agnosticui-gray-light));
  border-style: solid;
  /* Note that while one can customize some of these slightly, we essentially have hard-coded
  box shadow rgba values so they can't really do so drastically which is probably fine :) */
  background: linear-gradient(
    var(--agnosticui-gray-mid),
    var(--agnosticui-gray-extra-light));
  background: linear-gradient(
    var(--agnosticui-btn-raised-from, var(--agnosticui-gray-mid)),
    var(--agnosticui-btn-raised-to, var(--agnosticui-gray-extra-light))
  );
  box-shadow: inset 0px 1px 0px rgba(255, 255, 255, 0.3), 0 1px 2px rgba(0, 0, 0, 0.15);
}
.button_btn-raised__3tcN1:hover,
.button_btn-raised__3tcN1:focus {
  background: linear-gradient(to bottom, white, gainsboro);
}
.button_btn-raised__3tcN1.button_active__1R8rO {
  /* TODO -- maybe this shouldn't be hard coded */
  background: #eeeeee;
  box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.2), 0px 1px 0px white;
}

/*
* Raised Primary Buttons
*/
.button_btn-raised__3tcN1.button_btn-primary__1ilWA {
  border-color: var(--agnosticui-primary-from);
  border-color: var(--agnosticui-btn-primary-raised-to, var(--agnosticui-primary-from));
  background: linear-gradient(
    var(--agnosticui-primary-from),
    var(--agnosticui-primary-to));
  background: linear-gradient(
    var(--agnosticui-btn-primary-raised-from, var(--agnosticui-primary-from)),
    var(--agnosticui-btn-primary-raised-to, var(--agnosticui-primary-to))
  );
}

.button_btn-raised__3tcN1.button_btn-primary__1ilWA:hover,
.button_btn-raised__3tcN1.button_btn-primary__1ilWA:focus {
  background: linear-gradient(
    to bottom,
    var(--agnosticui-primary-hover),
    var(--agnosticui-primary-from));
  background: linear-gradient(
    to bottom,
    var(--agnosticui-btn-primary-raised-hover-from, var(--agnosticui-primary-hover)),
    var(--agnosticui-btn-primary-raised-to, var(--agnosticui-primary-from))
  );
  background: linear-gradient(
    var(--agnosticui-primary-hover),
    var(--agnosticui-primary-from));
  background: linear-gradient(
    var(--agnosticui-btn-primary-raised-hover-from, var(--agnosticui-primary-hover)),
    var(--agnosticui-btn-primary-raised-to, var(--agnosticui-primary-from))
  );
}

.button_btn-raised__3tcN1.button_btn-primary__1ilWA:active,
.button_btn-raised__3tcN1.button_btn-primary__1ilWA.button_active__1R8rO {
  opacity: 0.9;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.3);
}

/*
* Raised Secondary Buttons
*/
.button_btn-raised__3tcN1.button_btn-secondary__5rmkD {
  border-color: var(--agnosticui-secondary-to);
  border-color: var(--agnosticui-btn-secondary-raised-to, var(--agnosticui-secondary-to));
  background: linear-gradient(
    var(--agnosticui-secondary-from),
    var(--agnosticui-secondary-to));
  background: linear-gradient(
    var(--agnosticui-btn-secondary-raised-from, var(--agnosticui-secondary-from)),
    var(--agnosticui-btn-secondary-raised-to, var(--agnosticui-secondary-to))
  );
}

.button_btn-raised__3tcN1.button_btn-secondary__5rmkD:hover,
.button_btn-raised__3tcN1.button_btn-secondary__5rmkD:focus {
  background: linear-gradient(
    to bottom,
    var(--agnosticui-secondary-hover),
    var(--agnosticui-secondary-to));
  background: linear-gradient(
    to bottom,
    var(--agnosticui-btn-secondary-raised-hover-from, var(--agnosticui-secondary-hover)),
    var(--agnosticui-btn-secondary-raised-to, var(--agnosticui-secondary-to))
  );
  background: linear-gradient(
    var(--agnosticui-secondary-hover),
    var(--agnosticui-secondary-to));
  background: linear-gradient(
    var(--agnosticui-btn-secondary-raised-hover-from, var(--agnosticui-secondary-hover)),
    var(--agnosticui-btn-secondary-raised-to, var(--agnosticui-secondary-to))
  );
}

.button_btn-raised__3tcN1.button_btn-secondary__5rmkD:active,
.button_btn-raised__3tcN1.button_btn-secondary__5rmkD.button_active__1R8rO {
  opacity: 0.9;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.3);
}

/**
  * Border Buttons
  */
.button_btn-bordered__26B08 {
  border-width: 1px;
  background: transparent;
}

/**
  * Sizes
  */
.button_btn-large__2oAa4 {
  font-size: calc(1rem + 0.25rem);
  font-size: calc(var(--agnosticui-btn-font-size, 1rem) + 0.25rem);
  height: 3rem;
  line-height: 3rem;
  padding: 0 3rem;
}

.button_btn-small__MuEla {
  font-size: calc(1rem - 0.25rem);
  font-size: calc(var(--agnosticui-btn-font-size, 1rem) - 0.25rem);
  height: 2rem;
  line-height: 2rem;
  padding: 0 2rem;
}

/**
  * Rounded
  */
.button_btn-rounded__3QRkw {
  border-radius: 0.25rem;
  border-radius: var(--agnosticui-btn-radius, 0.25rem);
}

.button_btn-pill__2yBwN {
  border-radius: 200px;
}

/*
  * Size Adjustment for equal height & width buttons
  *
  * Remove padding
  */
.button_btn-circle__3WNmC {
  border-radius: 100%;
  width: 2.5rem;
  height: 2.5rem;
  padding: 0 !important;
}

.button_btn-circle-large__2i1Rp {
  font-size: calc(1rem + 0.25rem);
  font-size: calc(var(--agnosticui-btn-font-size, 1rem) + 0.25rem);
  width: 3rem;
  height: 3rem;
}

.button_btn-circle-small__1gGHo {
  font-size: calc(1rem - 0.25rem);
  font-size: calc(var(--agnosticui-btn-font-size, 1rem) - 0.25rem);
  width: 2rem;
  height: 2rem;
}

/**
 * Button Block (stacked)
 */
.button_btn-block__3_EQz {
  width: 100%;
}
/* This is a utility class used if you literally want to stack block buttons one after another.
Apply this class to the nth-of-type(2) onwards to ensure the borders line up properly. */
.button_btn-block-following__3I4zr {
  -webkit-margin-before: -1px;
          margin-block-start: -1px;
}

/**
 * Invisible buttons. Generally used for a Cancel or icon button that behaves like a button,
 * semantically and for a11y, but, does so without all the typical "button chrome" behind it.
 */
.button_btn-blank__3berd {
  background-color: transparent;
  border: 0;
  border-radius: 0;
  box-shadow: none;
}
.button_btn-blank__3berd:hover,
.button_btn-blank__3berd:active,
.button_btn-blank__3berd:focus {
  background: none;
  outline: 3px solid transparent;
}

/**
 * Button Groups
 */
.button-group_btn-group__1L49p {
  display: inline-flex;
  flex-direction: row;
}

.button-group_btn-group__1L49p > button {
  border-radius: var(--fluid-4);
  border-radius: var(--agnosticui-btn-radius, var(--fluid-4));
}
.button-group_btn-group__1L49p > button:not(:last-child) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  -webkit-margin-end: -1px;
          margin-inline-end: -1px;
}
.button-group_btn-group__1L49p > button:not(:first-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.button_btn__3CldF {
}
.button_btnBase__1sFNH {
  /* Note: .btn is same as .btn-base + .btn-skin -- so this is a means for
  folks to "opt-out" of skinned buttons should they want full skinning control. */
}
.button_primary__2B_L8 {
}
.button_secondary__3sHXN {
}
.button_block__fv-MD {
}
.button_group__3BFeX {
}
.button_raised__2rQvj {
}
.button_circle__16jtj {
}
.button_rounded__3_wFE {
}
.button_bordered__tEl55 {
}
.button_small__1Hlf_ {
}
.button_large__36fkD {
}
.button_blank__xzrsz {
}
.button_iconLeft__2iWnm {
}
.button_iconRight__b8UDn {
}
.button_disabled__1oNEb {
}

/**
 * Cards
 *
 * I drew some inspiration from the article on media-query less cards:
 * https://css-tricks.com/how-to-make-a-media-query-less-card-component/
 */
.card_card__1GFrT,
.card_card-base__2zZTl {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  position: relative;
  box-sizing: border-box;
  width: 100%;
}

.card_card__1GFrT,
.card_card-skin__2mkbX {
  box-shadow: 2px
      6px 4px
      rgba(0, 0, 0, 0.25),
    -2px
      -1px 6px
      rgba(0, 0, 0, 0.15);
  box-shadow: var(--agnosticui-card-boxshadow1-offset-x, 2px)
      var(--agnosticui-card-boxshadow1-offset-y, 6px) var(--agnosticui-card-boxshadow1-blur, 4px)
      var(--agnosticui-card-boxshadow1-color, rgba(0, 0, 0, 0.25)),
    var(--agnosticui-card-boxshadow2-offset-x, -2px)
      var(--agnosticui-card-boxshadow2-offset-y, -1px) var(--agnosticui-card-boxshadow2-blur, 6px)
      var(--agnosticui-card-boxshadow2-color, rgba(0, 0, 0, 0.15));
  border-radius: 4px;
  border-radius: var(--agnosticui-card-border-radius, 4px);
  overflow: hidden;
}

.card_card__1GFrT:hover,
.card_card-skin__2mkbX:hover {
  box-shadow: 2px
      6px 4px
      rgba(0, 0, 0, 0.35),
    -2px
      -1px 6px
      rgba(0, 0, 0, 0.25);
  box-shadow: var(--agnosticui-card-boxshadow1-offset-x, 2px)
      var(--agnosticui-card-boxshadow1-offset-y, 6px) var(--agnosticui-card-boxshadow1-blur, 4px)
      var(--agnosticui-card-boxshadow-hover-color-from, rgba(0, 0, 0, 0.35)),
    var(--agnosticui-card-boxshadow2-offset-x, -2px)
      var(--agnosticui-card-boxshadow2-offset-y, -1px) var(--agnosticui-card-boxshadow2-blur, 6px)
      var(--agnosticui-card-boxshadow-hover-color-to, rgba(0, 0, 0, 0.25));
}

/**
 * Animates the y position and box shadow on hover
 */
.card_card-animated__3il6t {
  transition: box-shadow ease-out 5s,
    -webkit-transform var(--agnosticui-timing-fast)
      cubic-bezier(
        0.39,
        0.575,
        0.565,
        1);
  transition: box-shadow ease-out 5s,
    transform var(--agnosticui-timing-fast)
      cubic-bezier(
        0.39,
        0.575,
        0.565,
        1);
  transition: box-shadow ease-out 5s,
    transform var(--agnosticui-timing-fast)
      cubic-bezier(
        0.39,
        0.575,
        0.565,
        1),
    -webkit-transform var(--agnosticui-timing-fast)
      cubic-bezier(
        0.39,
        0.575,
        0.565,
        1);
  transition: box-shadow ease-out 5s,
    -webkit-transform var(--agnosticui-timing-fast)
      cubic-bezier(
        var(--agnosticui-card-cubic-1, 0.39),
        var(--agnosticui-card-cubic-2, 0.575),
        var(--agnosticui-card-cubic-3, 0.565),
        var(--agnosticui-card-cubic-4, 1)
      );
  transition: box-shadow ease-out 5s,
    transform var(--agnosticui-timing-fast)
      cubic-bezier(
        var(--agnosticui-card-cubic-1, 0.39),
        var(--agnosticui-card-cubic-2, 0.575),
        var(--agnosticui-card-cubic-3, 0.565),
        var(--agnosticui-card-cubic-4, 1)
      );
  transition: box-shadow ease-out 5s,
    transform var(--agnosticui-timing-fast)
      cubic-bezier(
        var(--agnosticui-card-cubic-1, 0.39),
        var(--agnosticui-card-cubic-2, 0.575),
        var(--agnosticui-card-cubic-3, 0.565),
        var(--agnosticui-card-cubic-4, 1)
      ),
    -webkit-transform var(--agnosticui-timing-fast)
      cubic-bezier(
        var(--agnosticui-card-cubic-1, 0.39),
        var(--agnosticui-card-cubic-2, 0.575),
        var(--agnosticui-card-cubic-3, 0.565),
        var(--agnosticui-card-cubic-4, 1)
      );
}
.card_card-animated__3il6t:hover {
  -webkit-transform: translateY(-3px);
          transform: translateY(-3px);
  -webkit-transform: translateY(var(--agnosticui-card-translateY-hover, -3px));
          transform: translateY(var(--agnosticui-card-translateY-hover, -3px));
  transition: box-shadow ease-out var(--agnosticui-timing-fast),
    -webkit-transform var(--agnosticui-timing-slow)
      cubic-bezier(
        0.39,
        0.575,
        0.565,
        1);
  transition: box-shadow ease-out var(--agnosticui-timing-fast),
    transform var(--agnosticui-timing-slow)
      cubic-bezier(
        0.39,
        0.575,
        0.565,
        1);
  transition: box-shadow ease-out var(--agnosticui-timing-fast),
    transform var(--agnosticui-timing-slow)
      cubic-bezier(
        0.39,
        0.575,
        0.565,
        1),
    -webkit-transform var(--agnosticui-timing-slow)
      cubic-bezier(
        0.39,
        0.575,
        0.565,
        1);
  transition: box-shadow ease-out var(--agnosticui-timing-fast),
    -webkit-transform var(--agnosticui-timing-slow)
      cubic-bezier(
        var(--agnosticui-card-cubic-1, 0.39),
        var(--agnosticui-card-cubic-2, 0.575),
        var(--agnosticui-card-cubic-3, 0.565),
        var(--agnosticui-card-cubic-4, 1)
      );
  transition: box-shadow ease-out var(--agnosticui-timing-fast),
    transform var(--agnosticui-timing-slow)
      cubic-bezier(
        var(--agnosticui-card-cubic-1, 0.39),
        var(--agnosticui-card-cubic-2, 0.575),
        var(--agnosticui-card-cubic-3, 0.565),
        var(--agnosticui-card-cubic-4, 1)
      );
  transition: box-shadow ease-out var(--agnosticui-timing-fast),
    transform var(--agnosticui-timing-slow)
      cubic-bezier(
        var(--agnosticui-card-cubic-1, 0.39),
        var(--agnosticui-card-cubic-2, 0.575),
        var(--agnosticui-card-cubic-3, 0.565),
        var(--agnosticui-card-cubic-4, 1)
      ),
    -webkit-transform var(--agnosticui-timing-slow)
      cubic-bezier(
        var(--agnosticui-card-cubic-1, 0.39),
        var(--agnosticui-card-cubic-2, 0.575),
        var(--agnosticui-card-cubic-3, 0.565),
        var(--agnosticui-card-cubic-4, 1)
      );
}

.card_card-stacked__MHa5G {
  flex-direction: column;
}

.card_card__3m55h {
}

.card_cardAnimated__23RNu {
}

.card_cardStacked__17lie {
}

.card_cardBase__25D3y {
}

/**
 * These radio and checkbox customizations are an amalgamation of various resources I've found on the internets; from Heydon
 * Pickering's radio article (and his Inclusive Components book), to Sara Soueidan, Scott O'Hara, MDO, and Adrian Roselli's
 * research on the matter of inclusive hiding and custom radio/checkbox inputs.
 */

.choice-input_checkbox-group__vbhon,
.choice-input_radio-group__CMLUO {
  --width-28: calc(7 * var(--fluid-4)); /* 1.75rem/28px */
  border: 1px solid var(--agnosticui-gray-light);
  border: 1px solid var(--agnosticui-checkbox-border-color, var(--agnosticui-gray-light));
  padding: var(--fluid-24);
  padding-top: var(--fluid-14);
  border-radius: 0.5rem;
}

.choice-input_checkbox-group-large__3j4Ix,
.choice-input_radio-group-large__2qFnn {
  padding: var(--width-28);
  padding-top: var(--fluid-16);
}

.choice-input_checkbox-legend__1FhCU,
.choice-input_radio-legend__3YsVP {
  padding: var(--fluid-2) var(--fluid-14);
  border-radius: var(--fluid-2);
}

/* Hiding technique from https://www.sarasoueidan.com/blog/inclusively-hiding-and-styling-checkboxes-and-radio-buttons/
*/
.choice-input_checkbox__1UPJv,
.choice-input_radio__aAlDi {
  position: absolute;
  width: var(--fluid-14);
  height: var(--fluid-14);
  opacity: 0;
}

.choice-input_checkbox-small__8KluL,
.choice-input_radio-small__1jThT {
  width: var(--fluid-12);
  height: var(--fluid-12);
}

.choice-input_checkbox-large__-yYeN,
.choice-input_radio-large__1SlyN {
  width: var(--fluid-16);
  height: var(--fluid-16);
}

.choice-input_checkbox-label-wrap__qkbMb,
.choice-input_radio-label-wrap__39c7Q {
  display: block;
  cursor: pointer;
  -webkit-user-select: none;
      -ms-user-select: none;
          user-select: none;
  position: relative;
  line-height: var(--fluid-36);
}

.choice-input_checkbox-label-wrap-inline__JGJpA,
.choice-input_radio-label-wrap-inline__zpMzL {
  display: inline-flex;
}

.choice-input_checkbox-label-wrap-inline__JGJpA:not(:last-child),
.choice-input_radio-label-wrap-inline__zpMzL:not(:last-child) {
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
}

/* These are not actual <label> elements but the <span> label copy elements */
.choice-input_checkbox-label__3gK7F,
.choice-input_radio-label__refva {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
}

/* The checkmark itself */
.choice-input_checkbox-label__3gK7F:after {
  content: '';
  position: absolute;
  left: var(--fluid-6);
  top: var(--fluid-10);
  width: var(--fluid-6);
  height: var(--fluid-12);
  border: solid white;
  border-width: 0 var(--fluid-2) var(--fluid-2) 0;
  -webkit-transform-origin: center center;
          transform-origin: center center;
  -webkit-transform: rotate(40deg) scale(0);
          transform: rotate(40deg) scale(0);
  transition-property: border, background-color, -webkit-transform;
  transition-property: border, background-color, transform;
  transition-property: border, background-color, transform, -webkit-transform;
  transition-duration: var(--agnosticui-timing-fast);
  transition-timing-function: ease-in-out;
}
.choice-input_checkbox-label__3gK7F:before,
.choice-input_radio-label__refva:before {
  content: '';
  display: inline-block;
  -webkit-margin-end: 0.75rem;
          margin-inline-end: 0.75rem;
  -webkit-margin-end: var(--agnosticui-checkbox-spacing-end, 0.75rem);
          margin-inline-end: var(--agnosticui-checkbox-spacing-end, 0.75rem);
  transition: var(--agnosticui-timing-fast) ease-out all;
}

/* Since we build up the radio size outwardly, it's naturally larger then the checkboxes
so we add a multiplyer to even those out initially */
.choice-input_checkbox-label__3gK7F:before {
  border: 2px solid var(--agnosticui-gray-light);
  border: 2px solid var(--agnosticui-checkbox-border-color, var(--agnosticui-gray-light));
  width: var(--fluid-16);
  height: var(--fluid-16);
  transition: box-shadow var(--agnosticui-timing-fast) ease-out;
}

.choice-input_radio-label__refva:before {
  width: var(--fluid-14);
  height: var(--fluid-14);
  vertical-align: calc(-1 * var(--fluid-2));
  border-radius: 50%;
  border: var(--fluid-2) solid var(--agnosticui-light);
  border: var(--fluid-2) solid var(--agnosticui-checkbox-light, var(--agnosticui-light));
  box-shadow: 0 0 0 var(--fluid-2)
    var(--agnosticui-gray-light);
  box-shadow: 0 0 0 var(--fluid-2)
    var(--agnosticui-checkbox-border-color, var(--agnosticui-gray-light));
  transition: box-shadow var(--agnosticui-timing-fast) ease-out;
}

.choice-input_checkbox-label-small__QsWgM:after {
  left: calc(1.25 * var(--fluid-4));
}
.choice-input_checkbox-label-small__QsWgM:before {
  width: var(--fluid-14);
  height: var(--fluid-14);
}

.choice-input_radio-label-small__3sqNB:before {
  width: var(--fluid-12);
  height: var(--fluid-12);
}

.choice-input_checkbox-label-large__3KAhY:after {
  left: calc(1.75 * var(--fluid-4));
}

.choice-input_checkbox-label-large__3KAhY:before {
  width: var(--fluid-18);
  height: var(--fluid-18);
}

.choice-input_radio-label-large__3RfNp:before {
  width: var(--fluid-16);
  height: var(--fluid-16);
}

/* the checked style using the :checked pseudo class */
.choice-input_radio__aAlDi:checked + .choice-input_radio-label__refva:before {
  background: #08a880;
  background: var(--agnosticui-checkbox-fill-color, #08a880);
  box-shadow: 0 0 0 var(--fluid-2)
    var(--agnosticui-gray-light);
  box-shadow: 0 0 0 var(--fluid-2)
    var(--agnosticui-checkbox-border-color, var(--agnosticui-gray-light));
}

.choice-input_radio__aAlDi:focus + .choice-input_radio-label__refva:before {
  box-shadow: 0 0 0 var(--fluid-2)
      var(--agnosticui-gray-light),
    0 0 0 calc(1.5 * var(--fluid-2)) white,
    0 0 0 calc(2.25 * var(--fluid-2)) var(--agnosticui-focus-ring-color);
  box-shadow: 0 0 0 var(--fluid-2)
      var(--agnosticui-checkbox-border-color, var(--agnosticui-gray-light)),
    0 0 0 calc(1.5 * var(--fluid-2)) white,
    0 0 0 calc(2.25 * var(--fluid-2)) var(--agnosticui-focus-ring-color);
}

.choice-input_checkbox__1UPJv:focus + .choice-input_checkbox-label__3gK7F:before {
  box-shadow: 0 0 0 3px var(--agnosticui-focus-ring-color);
  outline: 3px solid transparent;
}

.choice-input_checkbox__1UPJv:checked + .choice-input_checkbox-label__3gK7F:after {
  -webkit-transform: rotate(40deg) scale(1);
          transform: rotate(40deg) scale(1);
}
.choice-input_checkbox__1UPJv:checked + .choice-input_checkbox-label__3gK7F:before {
  background: #08a880;
  background: var(--agnosticui-checkbox-fill-color, #08a880);
  border: 2px solid #08a880;
  border: 2px solid var(--agnosticui-checkbox-fill-color, #08a880);
}

/**
 * Consumer styles <legend> themselves, and can opt to use the .screenreader-only from
 * utilities.css if they're design requires it.
 */
.choice-input_checkbox-group-hidden__TxhYE,
.choice-input_radio-group-hidden__W5NNP {
  border: 0;
  -webkit-margin-before: 0;
          margin-block-start: 0;
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: 0;
          margin-inline-end: 0;
  -webkit-margin-after: 0;
          margin-block-end: 0;
  -webkit-padding-before: 0;
          padding-block-start: 0;
  -webkit-padding-start: 0;
          padding-inline-start: 0;
  -webkit-padding-end: 0;
          padding-inline-end: 0;
  -webkit-padding-after: 0;
          padding-block-end: 0;
}

/* Targets both the label container and the span label that is used
to style the custom radio / checkbox. Note it does NOT target the input
itself. */
.choice-input_checkbox__1UPJv[disabled] + .choice-input_checkbox-label__3gK7F,
.choice-input_radio__aAlDi[disabled] + .choice-input_radio-label__refva,
.choice-input_checkbox-label-wrap__qkbMb.choice-input_disabled__15NTf,
.choice-input_radio-label-wrap__39c7Q.choice-input_disabled__15NTf,
.choice-input_checkbox-label-wrap-inline__JGJpA.choice-input_disabled__15NTf,
.choice-input_radio-label-wrap-inline__zpMzL.choice-input_disabled__15NTf {
  color: var(--agnosticui-disabled-color) !important;
  color: var(--agnosticui-input-disabled-color, var(--agnosticui-disabled-color)) !important;
  -webkit-appearance: none !important;
          appearance: none !important;
  box-shadow: none !important;
  cursor: not-allowed !important;
  opacity: 0.8 !important;
}

@media screen and (-ms-high-contrast: active) {
  /* High contrast mode outline hacks */
  .choice-input_checkbox-label-wrap__qkbMb.choice-input_disabled__15NTf,
  .choice-input_radio-label-wrap__39c7Q.choice-input_disabled__15NTf,
  .choice-input_checkbox-label-wrap-inline__JGJpA.choice-input_disabled__15NTf,
  .choice-input_radio-label-wrap-inline__zpMzL.choice-input_disabled__15NTf {
    outline: 2px solid transparent;
    outline-offset: -2px;
  }
}

.choice-input_checkbox-group__1D0z6 {
}
.choice-input_radio-group__GlW3E {
}
.choice-input_checkbox-group-large__17FYK {
}
.choice-input_radio-group-large__2Altx {
}
.choice-input_checkbox-legend__YHUN4 {
}
.choice-input_radio-legend__KdXLi {
}
.choice-input_radio__2zqVA {
}
.choice-input_checkbox__2k3l9 {
}
.choice-input_checkbox-small__180E5 {
}
.choice-input_radio-small__1TOOp {
}
.choice-input_checkbox-large__ZYeOu {
}
.choice-input_radio-large__2KMw3 {
}
.choice-input_checkbox-label-wrap__2mvoN {
}
.choice-input_radio-label-wrap__mblT- {
}
.choice-input_checkbox-label-wrap-inline__1cbVa {
}
.choice-input_radio-label-wrap-inline__iqnLZ {
}
.choice-input_checkbox-label__2kDzb {
}
.choice-input_radio-label__YW0Vt {
}
.choice-input_checkbox-label-small__ngDne {
}
.choice-input_radio-label-small__1h8gG {
}
.choice-input_checkbox-label-large__1kdf5 {
}
.choice-input_radio-label-large__18Mb6 {
}
.choice-input_checkbox-group-hidden__1j2ZG {
}
.choice-input_radio-group-hidden__1TgUn {
}

.header_header__3vJhF,
.header_header-base__29S3w {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.header_header-base__29S3w img,
.header_header__3vJhF img {
  max-width: 100%;
  height: auto;
}

.header_header__3vJhF,
.header_header-skin__1EOrb {
  background-color: var(--agnosticui-light);
  background-color: var(--agnosticui-header-background-color, var(--agnosticui-light));
  box-shadow: 0
    1px 5px
    2px
    rgba(0, 0, 0, 0.1);
  box-shadow: var(--agnosticui-header-box-shadow-hor, 0)
    var(--agnosticui-header-box-shadow-ver, 1px) var(--agnosticui-header-box-shadow-blur, 5px)
    var(--agnosticui-header-box-shadow-spread, 2px)
    var(--agnosticui-header-box-shadow-color, rgba(0, 0, 0, 0.1));
  height: 128px;
  height: var(--agnosticui-header-mobile-height, 128px);
  font-family: var(--agnosticui-font-family);
  font-family: var(--agnosticui-header-font-family, var(--agnosticui-font-family));
  border-bottom: 1px solid var(--agnosticui-gray-light);
  border-bottom: 1px solid var(--agnosticui-header-border-color, var(--agnosticui-gray-light));
}

.header_header-content__23PLV {
  width: 960px;
  width: var(--agnosticui-header-content-width, 960px);
  max-width: 100%;
  margin: 0 auto;
}

.header_header__3vJhF .header_header-content__23PLV {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
  flex-wrap: wrap;
}

/**
 * If you make your header sticky, you should likely consider that jump links
 * e.g. <h1 id="Jump-Here">... will tuck underneath the header! Here's a recommendation
 * for how to circumnavigate this issue via scroll-margin-top:
  h1[id],
  h2[id],
  h3[id],
  h4[id],
  h5[id],
  h6[id] {
    scroll-margin-top: 80px;
  }
 * In this case I have a 64px tall header so I've added 16px for clearance -- you'll need
 * to curate your own use case, but scroll-margin-top is super useful for this use case.
 */

.header_header-sticky__X_xnH {
  position: relative;
  top: 0;
  z-index: 10;
}

@media (min-width: 960px) {
  .header_header-sticky__X_xnH {
    position: sticky;
  }

  .header_header__3vJhF .header_header-content__23PLV {
    flex-direction: row;
    justify-content: space-between;
  }
  .header_header__3vJhF {
    height: var(--fluid-64);
    height: var(--agnosticui-header-height, var(--fluid-64));
  }
}

/* Goes on the <ul> */
.headernav_header-nav__1uvoP {
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
}

@media (min-width: 960px) {
  .headernav_header-nav__1uvoP {
    flex-direction: row;
  }
}

.headernavitem_header-nav-item__19Ko3 {
  display: inline-block;
}
.headernavitem_header-nav-item__19Ko3:not(:last-child) {
  -webkit-margin-end: initial;
          margin-inline-end: initial;
  -webkit-margin-after: var(--fluid-8);
          margin-block-end: var(--fluid-8);
}

.headernavitem_header-nav-item__19Ko3 a {
  color: var(--agnosticui-font-color);
  color: var(--agnosticui-header-color, var(--agnosticui-font-color));
  text-decoration: none;
}

@media (min-width: 960px) {
  .headernavitem_header-nav-item__19Ko3:not(:last-child) {
    -webkit-margin-end: var(--fluid-32);
            margin-inline-end: var(--fluid-32);
    -webkit-margin-end: var(--agnosticui-header-nav-spacing, var(--fluid-32));
            margin-inline-end: var(--agnosticui-header-nav-spacing, var(--fluid-32));
    -webkit-margin-after: initial;
            margin-block-end: initial;
  }
}

.header_headerBase__1aTZf {
}

.header_header__3ZSjI {
}

.header_headerContent__2CSLo {
}

.header_sticky__SMFdH {
}

.header_headerNav__3JIcB {
}

.header_headerNavItem__144a_ {
}

.input_input-base__15FoB,
.input_input__2dEho {
  /* Note this cannot be user-select: none else mobile safari won't accept input:
  https://stackoverflow.com/questions/49889003/cannot-write-into-input-field-on-safari/49901069
   */
  -webkit-user-select: initial;
      -ms-user-select: initial;
          user-select: initial;
  -webkit-appearance: none;
          appearance: none;
  box-sizing: border-box;
  /* Use the same color for the cursor */
  caret-color: currentColor;
}

.input_label__3oz8i,
.input_label-base__9Y4VH {
  padding: 0;
  border: 0;
  box-sizing: border-box;
  font-family: inherit;
}

/* Electing to scope these as opposed to doing :root level definitions */
.input_field-help__zVMda,
.input_field-help-large__UlxVs,
.input_field-help-small__FY1Jo,
.input_field-error__Bm7iM,
.input_field-error-large__1yzuZ,
.input_field-error-small__3Ts34,
.input_label-skin__2SBmg,
.input_label__3oz8i,
.input_input-addon-container__3xMdZ,
.input_input-small__1QZek,
.input_input-large__2jyu5,
.input_input-skin__1bJtB,
.input_input-underlined__2tg5q,
.input_input-underlined-bg__2oc1p,
.input_input__2dEho {
  color: var(--agnosticui-dark);
  color: var(--agnosticui-font-color, var(--agnosticui-dark));
  font-family: -apple-system,
    BlinkMacSystemFont,
    'Segoe UI',
    'Open Sans',
    'Ubuntu',
    'Fira Sans',
    Helvetica,
    'Droid Sans',
    'Helvetica Neue',
    sans-serif,
    'Apple Color Emoji',
    'Segoe UI Emoji',
    'Segoe UI Symbol'
  ;
  font-family: var(
    --agnosticui-font-family,
    -apple-system,
    BlinkMacSystemFont,
    'Segoe UI',
    'Open Sans',
    'Ubuntu',
    'Fira Sans',
    Helvetica,
    'Droid Sans',
    'Helvetica Neue',
    sans-serif,
    'Apple Color Emoji',
    'Segoe UI Emoji',
    'Segoe UI Symbol'
  );
  font-weight: 300;
  font-weight: var(--agnosticui-font-weight, 300);
  font-size: 1rem;
  font-size: var(--agnosticui-font-size, 1rem);
  line-height: 1.25rem;
  line-height: var(--agnosticui-line-height, 1.25rem);
  width: 100%;
  max-width: 100%;
}

.input_input-skin__1bJtB,
.input_input__2dEho {
  /* seems like a reasonable default as chrome picks `outset` which results in a weird 3d effect */
  border-style: solid;
  /* this can be overriden, but it might mess with the balance of the button heights across variants */
  border-width: 1px;
  border-width: var(--agnosticui-input-border-size, 1px);
  border-color: var(--agnosticui-gray-light);
  border-color: var(--agnosticui-input-border-color, var(--agnosticui-gray-light));
  /* these can be overriden, but it might mess with the balance of the inputheights across variants */
  -webkit-padding-before: 0.5rem;
          padding-block-start: 0.5rem;
  -webkit-padding-before: var(--agnosticui-input-vertical-pad, 0.5rem);
          padding-block-start: var(--agnosticui-input-vertical-pad, 0.5rem);
  -webkit-padding-after: 0.5rem;
          padding-block-end: 0.5rem;
  -webkit-padding-after: var(--agnosticui-input-vertical-pad, 0.5rem);
          padding-block-end: var(--agnosticui-input-vertical-pad, 0.5rem);
  -webkit-padding-start: 0.75rem;
          padding-inline-start: 0.75rem;
  -webkit-padding-start: var(--agnosticui-input-side-padding, 0.75rem);
          padding-inline-start: var(--agnosticui-input-side-padding, 0.75rem);
  -webkit-padding-end: 0.75rem;
          padding-inline-end: 0.75rem;
  -webkit-padding-end: var(--agnosticui-input-side-padding, 0.75rem);
          padding-inline-end: var(--agnosticui-input-side-padding, 0.75rem);

  /* Note we only want to set properties that we actually want
  to transition in. For example, if we transition "all", the
  inputs will "grow in" on page load—not a happy effect :) */
  transition-property: box-shadow;
  transition-duration: var(--agnosticui-timing-medium);
  transition-duration: var(--agnosticui-input-timing, var(--agnosticui-timing-medium));
}

.input_label__3oz8i {
  display: inline-block;
  /* Provided --agnosticui-input-vertical-pad isn't overriden we'll get 20px
  label w/a 6px margin then a 38px input = 64 which is on the 8pt grid */
  -webkit-margin-before: 0;
          margin-block-start: 0;
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: 0;
          margin-inline-end: 0;
  -webkit-margin-after: 0.375rem;
          margin-block-end: 0.375rem;
  -webkit-margin-after: var(--agnosticui-input-label-pad, 0.375rem);
          margin-block-end: var(--agnosticui-input-label-pad, 0.375rem);
  vertical-align: baseline;
  vertical-align: initial;
}

/* Reset labels and field errors to be 2px less then input font size */
.input_field-help__zVMda,
.input_field-error__Bm7iM,
.input_label__3oz8i,
.input_label-skin__2SBmg {
  font-size: calc(1rem - 2px);
  font-size: calc(var(--agnosticui-font-size, 1rem) - 2px);
}

.input_label-inline__1E5i6,
.input_input-inline__1myP9 {
  width: auto;
}

/* When inlined, the margin-block-end will throw the label off-center with adjacent input */
.input_label-inline__1E5i6 {
  -webkit-margin-before: 0;
          margin-block-start: 0;
  -webkit-margin-after: 0;
          margin-block-end: 0;
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: 0.75rem;
          margin-inline-end: 0.75rem;
  -webkit-margin-end: var(--agnosticui-input-side-padding, 0.75rem);
          margin-inline-end: var(--agnosticui-input-side-padding, 0.75rem);
}

/**
* Placeholder
*/
.input_input__2dEho::-webkit-input-placeholder {
  color: currentColor;
  opacity: 0.5;
  -webkit-transition: opacity var(--agnosticui-timing-fast) ease-out;
  transition: opacity var(--agnosticui-timing-fast) ease-out;
}

.input_input__2dEho::-moz-placeholder {
  color: currentColor;
  opacity: 0.5;
  -moz-transition: opacity var(--agnosticui-timing-fast) ease-out;
  transition: opacity var(--agnosticui-timing-fast) ease-out;
}

.input_input__2dEho::-ms-placeholder {
  color: currentColor;
  opacity: 0.5;
  -ms-transition: opacity var(--agnosticui-timing-fast) ease-out;
  transition: opacity var(--agnosticui-timing-fast) ease-out;
}

.input_input__2dEho:-ms-placeholder {
  color: currentColor;
  opacity: 0.5;
  -ms-transition: opacity var(--agnosticui-timing-fast) ease-out;
  transition: opacity var(--agnosticui-timing-fast) ease-out;
}

/**
* Underlined inputs
*/
.input_input-underlined__2tg5q {
  border-top: 0;
  border-left: 0;
  border-right: 0;
  border-color: var(--agnosticui-gray-mid-dark);
  border-color: var(--agnosticui-input-underlined-color, var(--agnosticui-gray-mid-dark));
  background-color: transparent;
}

.input_input-underlined-bg__2oc1p {
  background-color: var(--agnosticui-gray-extra-light);
  background-color: var(--agnosticui-input-underlined-bg-color, var(--agnosticui-gray-extra-light));
}

/**
* Rounded inputs
*/
.input_input-rounded__37_rT {
  border-radius: 0.25rem;
  border-radius: var(--agnosticui-border-radius, 0.25rem);
}

/**
 * Errors
 * We provide a class-based approach to setting errors which means we do
 * not support :invalid, so it requires custom use of html4 validation API
 * (see https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation
 * of the example in corresponding input.html file). The reason I elected to
 * not include :invalid, is it seems to result in "shouting" at the user as
 * I did not find an easy way to only kick in errors after a certain number
 * of characters have been type (blur is actually better but I did not
 * implement that in the contrived example).
 */
.input_label-error__1GiX1 {
  color: var(--agnosticui-error-color);
  color: var(--agnosticui-input-error-color, var(--agnosticui-error-color));
}
.input_input-error__2isdr {
  border-color: var(--agnosticui-error-color);
  border-color: var(--agnosticui-input-error-color, var(--agnosticui-error-color));
}

.input_label-error__1GiX1,
.input_field-error__Bm7iM,
.input_field-error-small__3Ts34,
.input_field-error-large__1yzuZ {
  color: var(--agnosticui-error-color);
  color: var(--agnosticui-input-error-color, var(--agnosticui-error-color));
}

.input_field-help__zVMda,
.input_field-help-small__FY1Jo,
.input_field-help-large__UlxVs {
  color: var(--agnosticui-gray-dark);
  color: var(--agnosticui-input-help-color, var(--agnosticui-gray-dark));
}

.input_field-help__zVMda,
.input_field-help-small__FY1Jo,
.input_field-help-large__UlxVs,
.input_field-error__Bm7iM,
.input_field-error-small__3Ts34,
.input_field-error-large__1yzuZ {
  display: inline-block;
  width: 100%;
  -webkit-margin-before: calc(0.5rem / 2);
          margin-block-start: calc(0.5rem / 2);
  -webkit-margin-before: calc(var(--agnosticui-input-vertical-pad, 0.5rem) / 2);
          margin-block-start: calc(var(--agnosticui-input-vertical-pad, 0.5rem) / 2);
}

/**
  * Sizes
  */
.input_input-large__2jyu5 {
  font-size: calc(1rem + 0.25rem);
  font-size: calc(var(--agnosticui-font-size, 1rem) + 0.25rem);
  line-height: 1.6rem;
}

.input_field-help-large__UlxVs,
.input_field-error-large__1yzuZ,
.input_label-large__1eaYI {
  /* We initially remove -2px from font-size so setting to font-size essentially adds the 2px back */
  font-size: 1rem;
  font-size: var(--agnosticui-font-size, 1rem);
}

.input_input-small__1QZek {
  font-size: calc(1rem - 0.25rem);
  font-size: calc(var(--agnosticui-font-size, 1rem) - 0.25rem);
  line-height: 1rem;
}

.input_field-help-small__FY1Jo,
.input_field-error-small__3Ts34,
.input_label-small__1HU8T {
  font-size: calc(1rem - 0.25rem);
  font-size: calc(var(--agnosticui-font-size, 1rem) - 0.25rem);
}

.input_input__2dEho:focus {
  box-shadow: 0 0 0 3px var(--agnosticui-focus-ring-color);
  /* High contrast mode outline */
  outline: 3px solid transparent;
  transition: box-shadow var(--agnosticui-timing-fast) ease-out;
}
/* Set the focus to transparent when there's an error since we use
borders that visually conflict. */
.input_input-error__2isdr:focus {
  box-shadow: 0 0 0 3px transparent;
}

/*
* Disabled State
*
* The disabled state uses the class .disabled,
* and the form attribute disabled="disabled".
* The use of !important is only added because this is a state
* that must be applied to all inputs when in a disabled state.
*/
.input_input__2dEho.input_disabled__34VuT, 
.input_input__2dEho:disabled {
  background: var(--agnosticui-disabled-bg) !important;
  background: var(--agnosticui-input-disabled-bg, var(--agnosticui-disabled-bg)) !important;
  color: var(--agnosticui-disabled-color) !important;
  color: var(--agnosticui-input-disabled-color, var(--agnosticui-disabled-color)) !important;
  -webkit-appearance: none !important;
          appearance: none !important;
  box-shadow: none !important;
  cursor: not-allowed !important;
  opacity: 0.8 !important;
}

@media screen and (-ms-high-contrast: active) {
  /* High contrast mode outline hacks */
  .input_input__2dEho:disabled {
    outline: 2px solid transparent;
    outline-offset: -2px;
  }
}

/**
 * Input "has addon"
 */

.input_input-addon-container__3xMdZ {
  display: flex;
  position: relative;
  width: 100%;
  /* Maybe I should have defined another css prop for addon adjustments but trying
  to avoid any extra variable explosion there--will need to keep an eye on this */
  --addon-padding: calc(var(--agnosticui-input-side-padding, 0.75rem) * 1.5);
}

.input_input-has-left-addon__3CfHm,
.input_input-has-right-addon__snUpK {
  flex: 1 1;
}

.input_input-has-left-addon__3CfHm {
  -webkit-padding-start: calc(var(--addon-padding) * 2.25);
          padding-inline-start: calc(var(--addon-padding) * 2.25);
}

.input_input-has-right-addon__snUpK {
  -webkit-padding-end: calc(var(--addon-padding) * 2.25);
          padding-inline-end: calc(var(--addon-padding) * 2.25);
}

/*
* Input addons e.g. icons inside the input
*/
.input_input-addon-right__2tj5z,
.input_input-addon-left__3Z4FD {
  /* Maybe I should have defined another css prop for addon adjustments but trying
  to avoid any extra variable explosion there--will need to keep an eye on this */
  --addon-padding: calc(var(--agnosticui-input-side-padding) * 1.5);
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.input_input-addon-left__3Z4FD {
  left: var(--addon-padding);
}

.input_input-addon-right__2tj5z {
  right: var(--addon-padding);
}

.input_inputBase__28GtJ {
}

.input_input__1iomh {
}

.input_rounded__3GpJt {
}

.input_underlined__1hhRc {
}
.input_underlinedWithBackground__1HfW9 {
}

.input_leftAddon__2bnBg {
}

.input_inputHasLeftAddon__2emA9 {
}

.input_rightAddon__3V0l6 {
}

.input_rightHasLeftAddon__gzJXi {
}

.input_inputSmall__G2FvJ {
}

.input_inputLarge__3qKL7 {
}

.input_invalid__3YsWM {
}

.input_label__2ACSJ {
}

.input_labelError__34Krg {
}

.input_labelSmall__27V5q {
}

.input_labelLarge__bc0cS {
}

.input_inputAddonContainer__31Moh {
}

.input_fieldError__lShGo {
}

.input_fieldErrorSmall__1JpDM {
}

.input_fieldErrorLarge__2hNml {
}

.input_fieldHelp__1EtVJ {
}

.input_fieldHelpSmall__11mFA {
}

.input_fieldHelpLarge__1f6fA {
}

.input_disabled__1glh_ {
}

.input_labelInline__2zdZA {
}

.input_inputInline__2RuWD {
}

/* https://stackoverflow.com/questions/45507970/how-can-i-change-the-color-of-a-progress-bar-value-in-html */
/**
 * Most examples show styling directly to the <progress> element itself. However,
 * my tests (chrome, ff, safari on mac mini 2020), showed it's perfectly possibly
 * to use a class selector instead. The reason I'd prefer that here, is that I can
 * then use CSS Modules composes against .progress (e.g. for React/Vue components)
 */
.progress_progress__1PlwV {
  -webkit-appearance: none;
  height: 10px;
  height: var(--agnosticui-progress-height, 10px);
  width: 100%;
  border: none;
  /* Next couple of rules are required to be here for FF (but not chrome) */
  background-color: #ededed;
  background-color: var(--agnosticui-progress-background, #ededed);
  border-radius: 10px;
  border-radius: var(--agnosticui-progress-radius, 10px);
}

.progress_progress__1PlwV[value]::-webkit-progress-bar {
  /* In my tests chrome requires this whereas FF wants it on the progress {} rule */
  background-color: #ededed;
  background-color: var(--agnosticui-progress-background, #ededed);
  border-radius: 10px;
  border-radius: var(--agnosticui-progress-radius, 10px);
}

.progress_progress__1PlwV[value]::-webkit-progress-value {
  background-color: #077acb;
  background-color: var(--agnosticui-progress-fill-color, #077acb);
  border-radius: 10px;
  border-radius: var(--agnosticui-progress-radius, 10px);
}

.progress_progress__1PlwV[value]::-moz-progress-bar {
  background-color: #077acb;
  background-color: var(--agnosticui-progress-fill-color, #077acb);
  border-radius: 10px;
  border-radius: var(--agnosticui-progress-radius, 10px);
}

.progress_progress__1PlwV[value]::-ms-fill {
  background-color: #077acb;
  background-color: var(--agnosticui-progress-fill-color, #077acb);
  border-radius: 10px;
  border-radius: var(--agnosticui-progress-radius, 10px);
}

.progress_progressBar__2Zc_B {
}

/**
 * Switch
 * 
 * This switch is inspired by Scott Ohara's checkbox switch:
 * https://scottaohara.github.io/a11y_styled_form_controls/src/checkbox--switch/
 */
.switch_switch-container__3RwqH {
  display: block;
  /* TODO: Hopefully this doesn't become a problem but since we use absolute
  positioning extensively, we need some way to have adjacent spaced lines */
  min-height: 2.25rem;
  width: 100%;
  padding: 0.5rem;
  position: relative;
}

.switch_switch-container__3RwqH:hover {
  cursor: pointer;
}

/* using the before/after pseudo elements of the span to create the "switch" */
.switch_switch__9ktqH:before,
.switch_switch__9ktqH:after {
  border: 1px solid var(--agnosticui-gray-mid-dark);
  content: '';
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

/* styling specific to the knob of the switch */
.switch_switch__9ktqH:after {
  background: #fff;
  border-radius: 100%;
  width: 1.4rem;
  height: 1.4rem;
  right: 1.4rem;
  transition: right var(--agnosticui-timing-fast) ease-in-out;
}

/* styling specific to the knob "container" */
.switch_switch__9ktqH:before {
  background: #eee;
  border-radius: 1.75rem;
  width: 2.75rem;
  height: 1.75rem;
  right: 0.25rem;
  transition: background var(--agnosticui-timing-medium) ease-in-out;
}

/* Sizes */
.switch_switch-small__2CtU5:after {
  width: 1.25rem;
  height: 1.25rem;
  right: 1.125rem;
}

.switch_switch-small__2CtU5:before {
  width: 2.25rem;
  height: 1.5rem;
}

.switch_switch-large__3rcqW:after {
  width: 1.65rem;
  height: 1.65rem;
  right: 1.65rem;
}

.switch_switch-large__3rcqW:before {
  width: 3.25rem;
  height: 2rem;
}

.switch_switch-border__3bYCh:before {
  border: 1px solid var(--agnosticui-primary);
}

.switch_switch-action__didZp.switch_switch-border__3bYCh:before {
  border: 1px solid var(--agnosticui-action);
}

/* From: https://scottaohara.github.io/a11y_styled_form_controls/src/checkbox--switch/
  hide the actual checkbox from view, but not from keyboards or ATs.
  Instead of standard visually hidden styling, instead set opacity to
  almost 0 (not zero for ChomeVox legacy bug), pointer-events none, and
  then set to full height/width of container element so that VO focus
  ring outlines the component, instead of a tiny box within the component
*/
.switch_switch-input__3WuoX {
  margin: 0;
  opacity: 0.0001;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.switch_switch-input__3WuoX:focus + .switch_switch__9ktqH:before {
  box-shadow: 0 0 0 3px var(--agnosticui-focus-ring-color);
}

/* ---- CHECKED STATE ----- */

/* change the position of the knob to indicate it has been checked*/
.switch_switch-input__3WuoX:checked + .switch_switch__9ktqH:after {
  right: 0.5em;
}
.switch_switch-input__3WuoX:checked + .switch_switch-small__2CtU5:after {
  right: 0.425rem;
}

/* update the color of the "container" to further visually indicate state */
.switch_switch-input__3WuoX:checked + .switch_switch__9ktqH:not(.switch_switch-border__3bYCh):before {
  background: var(--agnosticui-primary);
}

.switch_switch-input__3WuoX:checked + .switch_switch-action__didZp:not(.switch_switch-border__3bYCh):before {
  background: var(--agnosticui-action);
}

/* Border switch on checked the thumb gets primary or action bg respectively */
.switch_switch-input__3WuoX:checked + .switch_switch-border__3bYCh:after {
  background: var(--agnosticui-primary);
}
.switch_switch-input__3WuoX:checked + .switch_switch-action__didZp.switch_switch-border__3bYCh:after {
  background: var(--agnosticui-action);
}

/* Switch label on right */

/* Flips transition target to left to preserve our smooth transitions */
.switch_switch-right__2Tx4l .switch_switch__9ktqH:after {
  transition: left var(--agnosticui-timing-fast) ease-in-out;
}

.switch_switch-right__2Tx4l .switch_switch-input__3WuoX:checked + .switch_switch__9ktqH:after {
  right: auto;
  right: initial;
  left: 0.5em;
}
.switch_switch-right__2Tx4l .switch_switch-input__3WuoX:checked + .switch_switch-small__2CtU5:after {
  right: auto;
  right: initial;
  left: 0.425rem;
}

/* We have to flip the positioning when the label is on the right of switch */
.switch_switch-right__2Tx4l .switch_switch__9ktqH:before {
  right: auto;
  right: initial;
  left: 0.25rem;
}

.switch_switch-right__2Tx4l .switch_switch__9ktqH::after {
  right: auto;
  right: initial;
  left: 1.4rem;
}

.switch_switch-right__2Tx4l .switch_switch-label__35F4z {
  position: absolute;
  top: 0;
  right: 0;
}

/* Switch sizes w/label on right -- I expect SMACSS so .switch .switch-small
classes should both exist so the right: initial was taken care of above :) */
.switch_switch-right__2Tx4l .switch_switch-small__2CtU5:after {
  left: 1.125rem;
}

.switch_switch-right__2Tx4l .switch_switch-large__3rcqW:after {
  left: 1.65rem;
}

/* Disabled aka :disabled is not actually supported for <label>
element so we use attribute selector for that:
https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled#:~:text=The%20disabled%20attribute%20is%20supported,control%20or%20its%20descendant%20controls.
*/
.switch_switch-input__3WuoX[disabled] + .switch_switch__9ktqH,
.switch_switch-input__3WuoX[disabled] + .switch_switch-label__35F4z,
.switch_switch-container__3RwqH.switch_disabled__1al1i {
  color: var(--agnosticui-disabled-color) !important;
  color: var(--agnosticui-input-disabled-color, var(--agnosticui-disabled-color)) !important;
  -webkit-appearance: none !important;
          appearance: none !important;
  box-shadow: none !important;
  cursor: not-allowed !important;
  opacity: 0.8 !important;
}

@media screen and (-ms-high-contrast: active) {
  .switch_switch__9ktqH:after {
    background-color: windowText;
  }

  /* High contrast mode outline hacks */
  .switch_switch-input__3WuoX[disabled] + .switch_switch-label__35F4z,
  .switch_switch-container__3RwqH.switch_disabled__1al1i {
    outline: 2px solid transparent;
    outline-offset: -2px;
  }
}

/**
 * Switch
 * 
 * This switch is inspired by Scott Ohara's checkbox switch:
 * https://scottaohara.github.io/a11y_styled_form_controls/src/checkbox--switch/
 */
.switch_switch-container__1Z8Ws {
}

.switch_switch__FOkcE {
}
.switch_switch-label__2A3r4 {
}

.switch_switch-small__2l7iM {
}

.switch_switch-large__3NVGW {
}

.switch_switch-border__22soc {
}

.switch_switch-action__8RpU4 {
}

.switch_switch-input__2hVrZ {
}

.switch_switch-right__3Bnus {
}

.switch_disabled__1uPV7 {
}

.tabs_tab-close__1_thl {
  color: var(--agnosticui-gray-dark);
  text-align: right;
  cursor: pointer;
}

.tabs_tab-list__1BElH {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  -webkit-padding-start: 0;
          padding-inline-start: 0;
  -webkit-margin-after: 0;
          margin-block-end: 0;
  list-style: none;
  border-bottom: 1px solid
    var(--agnosticui-gray-light);
  border-bottom: var(--agnosticui-tabs-border-size, 1px) solid
    var(--agnosticui-tabs-bgcolor, var(--agnosticui-gray-light));
  transition-property: all;
  transition-duration: var(--agnosticui-timing-medium);
}

/* We can ask for .tab-button which is base and skin combined, or, we can utilize .tab-button-base
if we'd like to only blank out buttons but otherwise skin ourselves. */
.tabs_tab-button__26tAj,
.tabs_tab-button-base__33pDp {
  /* Blank out the button */
  background-color: transparent;
  border: 0;
  border-radius: 0;
  box-shadow: none;
  /* Reset margins/padding; this will get added back if it's a "skinned" tab button. However, we have
  a use case where a tab-button is wrapping a faux button. For that, we don't want margins/padding because
  the faux button provides that. */
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: 0;
          margin-inline-end: 0;
  -webkit-padding-before: 0;
          padding-block-start: 0;
  -webkit-padding-after: 0;
          padding-block-end: 0;
  -webkit-padding-start: 0;
          padding-inline-start: 0;
  -webkit-padding-end: 0;
          padding-inline-end: 0;
}

/* We pull back the 2nd subsequent tabs to remove the double border */
.tabs_tab-button__26tAj:not(:first-of-type),
.tabs_tab-button-base__33pDp:not(:first-of-type) {
  -webkit-margin-start: -1px;
          margin-inline-start: -1px;
}

.tabs_tab-button__26tAj,
.tabs_tab-button-skin__2ukBg {
  display: block;
  /* Since this is a "skinned tab button" we add our padding here to previously "reset" .tab-button-base */
  -webkit-padding-before: 0.5rem;
          padding-block-start: 0.5rem;
  -webkit-padding-before: var(--agnosticui-vertical-pad, 0.5rem);
          padding-block-start: var(--agnosticui-vertical-pad, 0.5rem);
  -webkit-padding-after: 0.5rem;
          padding-block-end: 0.5rem;
  -webkit-padding-after: var(--agnosticui-vertical-pad, 0.5rem);
          padding-block-end: var(--agnosticui-vertical-pad, 0.5rem);
  -webkit-padding-start: 0.75rem;
          padding-inline-start: 0.75rem;
  -webkit-padding-start: var(--agnosticui-side-padding, 0.75rem);
          padding-inline-start: var(--agnosticui-side-padding, 0.75rem);
  -webkit-padding-end: 0.75rem;
          padding-inline-end: 0.75rem;
  -webkit-padding-end: var(--agnosticui-side-padding, 0.75rem);
          padding-inline-end: var(--agnosticui-side-padding, 0.75rem);
  font-family: var(--agnosticui-font-family);
  font-family: var(--agnosticui-btn-font-family, var(--agnosticui-font-family));
  font-weight: 400;
  font-weight: var(--agnosticui-btn-font-weight, 400);
  font-size: 1rem;
  font-size: var(--agnosticui-btn-font-size, 1rem);
  /* this can be overriden, but it might mess with the balance of the button heights across variants */
  line-height: 1.25rem;
  line-height: var(--agnosticui-line-height, 1.25rem);
  color: var(--agnosticui-primary);
  color: var(--agnosticui-tabs-primary, var(--agnosticui-primary));
  text-decoration: none;
  transition: color var(--agnosticui-timing-fast) ease-in-out,
    background-color var(--agnosticui-timing-fast) ease-in-out,
    border-color var(--agnosticui-timing-fast) ease-in-out;
}

.tabs_tab-borderless__3Qry3 {
  border: none !important;
}

.tabs_tab-button-large__3EvkH {
  -webkit-padding-before: calc(var(--agnosticui-input-side-padding) * 1.25);
          padding-block-start: calc(var(--agnosticui-input-side-padding) * 1.25);
  -webkit-padding-after: calc(var(--agnosticui-input-side-padding) * 1.25);
          padding-block-end: calc(var(--agnosticui-input-side-padding) * 1.25);
  -webkit-padding-start: calc(var(--agnosticui-input-side-padding) * 1.75);
          padding-inline-start: calc(var(--agnosticui-input-side-padding) * 1.75);
  -webkit-padding-end: calc(var(--agnosticui-input-side-padding) * 1.75);
          padding-inline-end: calc(var(--agnosticui-input-side-padding) * 1.75);
}

.tabs_tab-button-jumbo__2F--a {
  -webkit-padding-before: calc(var(--agnosticui-input-side-padding) * 2);
          padding-block-start: calc(var(--agnosticui-input-side-padding) * 2);
  -webkit-padding-after: calc(var(--agnosticui-input-side-padding) * 2);
          padding-block-end: calc(var(--agnosticui-input-side-padding) * 2);
  -webkit-padding-start: calc(var(--agnosticui-input-side-padding) * 3);
          padding-inline-start: calc(var(--agnosticui-input-side-padding) * 3);
  -webkit-padding-end: calc(var(--agnosticui-input-side-padding) * 3);
          padding-inline-end: calc(var(--agnosticui-input-side-padding) * 3);
}
.tabs_tab-item__3COFL.tabs_tab-button__26tAj {
  -webkit-margin-after: -1px;
          margin-block-end: -1px;
  background: 0 0;
  border: 1px solid transparent;
  border-top-left-radius: 0.25rem;
  border-top-left-radius: var(--agnosticui-tabs-radius, 0.25rem);
  border-top-right-radius: 0.25rem;
  border-top-right-radius: var(--agnosticui-tabs-radius, 0.25rem);
}

.tabs_tab-item__3COFL.tabs_tab-button__26tAj.tabs_active__3AW1f {
  color: var(--agnosticui-gray-dark);
  /* TODO -- update these colors to use css properties */
  background-color: #fff;
  border-color: #dee2e6 #dee2e6 #fff;
}

.tabs_tab-item__3COFL:hover,
.tabs_tab-button__26tAj:focus {
  border-color: #e9ecef #e9ecef #dee2e6;
  isolation: isolate;
  cursor: pointer;
}

.tabs_tab-button__26tAj:disabled {
  color: var(--agnosticui-gray-mid-dark);
  color: var(--agnosticui-tabas-disabled-bg, var(--agnosticui-gray-mid-dark));
  background-color: transparent;
  border-color: transparent;
  opacity: 0.8;
}

.tabs_pane__1IId9 {
  padding: 1em;
}

.tabs_tabList__2gvhq {
}

.tabs_tabListBorderless__14kkY {
}

.tabs_tabButtonBorderless__38qI_ {
}

.tabs_tabItem__28BKy {
}
.tabs_tabButton__ehx3e {
}

.tabs_tabButtonLarge__2jpOn {
}

.tabs_tabButtonJumbo__2CpfC {
}

.tabs_pane__24yQZ {
}

.tabs_active__1Z0Ff {
}

.TabButtonCustom_customTabButton__2_4DZ {
  opacity: 1;
  transition: opacity 0.2s;
}
.TabButtonCustom_customTabButton__2_4DZ:not(:first-of-type) {
  /* So we don't get a "double border" between tab buttons */
  -webkit-margin-start: -1px;
          margin-inline-start: -1px;
}
.TabButtonCustom_customTabButton__2_4DZ:hover {
  opacity: 0.7;
}
.TabButtonCustom_customTabButton__2_4DZ:hover:focus {
  opacity: 1;
}

.TabButtonCustom_reactButton__1KnLu {
  padding: 1rem 2rem;
}
.TabButtonCustom_vueButton__dPpis {
  padding: 1.75rem 3.25rem;
}
.TabButtonCustom_angularButton__1V6F9 {
  padding: 1.75rem 3rem;
}
.TabButtonCustom_svelteButton__3qo1G {
  padding: 1.75rem 3.5rem;
}


/*# sourceMappingURL=main.a7c45c42.chunk.css.map*/
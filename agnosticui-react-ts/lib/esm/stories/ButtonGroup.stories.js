import { __assign } from "tslib";
import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
// eslint-disable-next-line import/no-extraneous-dependencies
import { action } from '@storybook/addon-actions';
import { Button, ButtonGroup } from '../Button';
var actionsData = {
    click: action('click'),
};
export default {
    title: 'AGâ€”React/ButtonGroups',
    component: ButtonGroup,
    on: __assign({}, actionsData),
};
export var All = function () { return (_jsxs(_Fragment, { children: [_jsxs(ButtonGroup, __assign({ ariaLabel: "Appropriate label for your button group" }, { children: [_jsx(Button, __assign({ onClick: action('click') }, { children: "One" }), void 0), _jsx(Button, __assign({ onClick: action('click') }, { children: "Two" }), void 0), _jsx(Button, __assign({ onClick: action('click') }, { children: "Three" }), void 0)] }), void 0), _jsxs(ButtonGroup, __assign({ ariaLabel: "Appropriate label for your button group" }, { children: [_jsx(Button, __assign({ isRaised: true, onClick: action('click') }, { children: "One" }), void 0), _jsx(Button, __assign({ isRaised: true, onClick: action('click') }, { children: "Two" }), void 0), _jsx(Button, __assign({ isRaised: true, onClick: action('click') }, { children: "Three" }), void 0)] }), void 0), _jsxs(ButtonGroup, __assign({ ariaLabel: "Appropriate label for your button group" }, { children: [_jsx(Button, __assign({ isBordered: true, onClick: action('click') }, { children: "One" }), void 0), _jsx(Button, __assign({ isBordered: true, onClick: action('click') }, { children: "Two" }), void 0), _jsx(Button, __assign({ isBordered: true, onClick: action('click') }, { children: "Three" }), void 0)] }), void 0), _jsxs(ButtonGroup, __assign({ ariaLabel: "Appropriate label for your button group" }, { children: [_jsx(Button, __assign({ mode: "secondary", onClick: action('click') }, { children: "One" }), void 0), _jsx(Button, __assign({ mode: "secondary", onClick: action('click') }, { children: "Two" }), void 0), _jsx(Button, __assign({ mode: "secondary", onClick: action('click') }, { children: "Three" }), void 0)] }), void 0), _jsxs(ButtonGroup, __assign({ ariaLabel: "Appropriate label for your button group" }, { children: [_jsx(Button, __assign({ mode: "secondary", isRaised: true, onClick: action('click') }, { children: "One" }), void 0), _jsx(Button, __assign({ mode: "secondary", isRaised: true, onClick: action('click') }, { children: "Two" }), void 0), _jsx(Button, __assign({ mode: "secondary", isRaised: true, onClick: action('click') }, { children: "Three" }), void 0)] }), void 0), _jsxs(ButtonGroup, __assign({ ariaLabel: "Appropriate label for your button group" }, { children: [_jsx(Button, __assign({ mode: "secondary", isBordered: true, onClick: action('click') }, { children: "One" }), void 0), _jsx(Button, __assign({ mode: "secondary", isBordered: true, onClick: action('click') }, { children: "Two" }), void 0), _jsx(Button, __assign({ mode: "secondary", isBordered: true, onClick: action('click') }, { children: "Three" }), void 0)] }), void 0), _jsxs(ButtonGroup, __assign({ ariaLabel: "Appropriate label for your button group" }, { children: [_jsx(Button, __assign({ mode: "primary", onClick: action('click') }, { children: "One" }), void 0), _jsx(Button, __assign({ mode: "primary", onClick: action('click') }, { children: "Two" }), void 0), _jsx(Button, __assign({ mode: "primary", onClick: action('click') }, { children: "Three" }), void 0)] }), void 0), _jsxs(ButtonGroup, __assign({ ariaLabel: "Appropriate label for your button group" }, { children: [_jsx(Button, __assign({ mode: "primary", isRaised: true, onClick: action('click') }, { children: "One" }), void 0), _jsx(Button, __assign({ mode: "primary", isRaised: true, onClick: action('click') }, { children: "Two" }), void 0), _jsx(Button, __assign({ mode: "primary", isRaised: true, onClick: action('click') }, { children: "Three" }), void 0)] }), void 0), _jsxs(ButtonGroup, __assign({ ariaLabel: "Appropriate label for your button group" }, { children: [_jsx(Button, __assign({ mode: "primary", isBordered: true, onClick: action('click') }, { children: "One" }), void 0), _jsx(Button, __assign({ mode: "primary", isBordered: true, onClick: action('click') }, { children: "Two" }), void 0), _jsx(Button, __assign({ mode: "primary", isBordered: true, onClick: action('click') }, { children: "Three" }), void 0)] }), void 0), _jsxs(ButtonGroup, __assign({ ariaLabel: "Appropriate label for your button group" }, { children: [_jsx(Button, __assign({ mode: "primary", isDisabled: true }, { children: "One" }), void 0), _jsx(Button, __assign({ mode: "primary", onClick: action('click') }, { children: "Two" }), void 0), _jsx(Button, __assign({ mode: "primary", onClick: action('click') }, { children: "Three" }), void 0)] }), void 0), _jsxs(ButtonGroup, __assign({ ariaLabel: "Appropriate label for your button group" }, { children: [_jsx(Button, __assign({ mode: "primary", isDisabled: true }, { children: "One" }), void 0), _jsx(Button, __assign({ mode: "primary", onClick: action('click') }, { children: "Two" }), void 0), _jsx(Button, __assign({ mode: "primary", isDisabled: true }, { children: "Three" }), void 0)] }), void 0), _jsxs(ButtonGroup, __assign({ ariaLabel: "Appropriate label for your button group" }, { children: [_jsx(Button, __assign({ mode: "primary", isDisabled: true }, { children: "One" }), void 0), _jsx(Button, __assign({ mode: "primary", isDisabled: true }, { children: "Two" }), void 0), _jsx(Button, __assign({ mode: "primary", isDisabled: true }, { children: "Three" }), void 0)] }), void 0)] }, void 0)); };
//# sourceMappingURL=ButtonGroup.stories.js.map
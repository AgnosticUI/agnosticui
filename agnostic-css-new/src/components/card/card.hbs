
      <article class="card">
        <div class="card-image-wrap">
          <img
            src="https://via.placeholder.com/2000x1000?text=Really+Big+Image"
            alt="Image placeholder image for testing responsiveness"
          />
        </div>
        <div class="card-content">
          <h1 class="card-title"><a href="#">My Default Card Title</a></h1>

          <p class="card-metadata">
            <span class="card-rating">★★★★<span>☆</span></span>
            <span class="card-votes">(1234 votes)</span>
          </p>

          <p class="card-desc">
            This card is essentially a row-based horizontal layout as the image is on the left and
            the body of the card (where you're reading now!) is on the right. If the viewport
            narrows enough though, it becomes a stacked card at that point. If you want the card to
            always be stacked, see the example below which applies the appropriate stacked card
            class.
          </p>

          <button class="btn btn-primary" type="submit">Do Something</button>
        </div>
      </article>

      <article class="card card-animated">
        <div class="card-image-wrap">
          <img
            src="https://via.placeholder.com/2000x1000?text=Really+Big+Image"
            alt="Image placeholder image for testing responsiveness"
          />
        </div>
        <div class="card-content">
          <h1 class="card-title"><a href="#">Card that is animated on hover</a></h1>

          <p class="card-metadata">
            <span class="card-rating">★★★★<span>☆</span></span>
            <span class="card-votes">(1234 votes)</span>
          </p>

          <p class="card-desc">
            This card is essentially a row-based horizontal layout as the image is on the left and
            the body of the card (where you're reading now!) is on the right. If the viewport
            narrows enough though, it becomes a stacked card at that point. If you want the card to
            always be stacked, see the example below which applies the appropriate stacked card
            class.
          </p>

          <button class="btn btn-primary" type="submit">Do Something</button>
        </div>
      </article>

      <article class="card card-stacked">
        <div class="card-image-wrap">
          <img
            src="https://via.placeholder.com/2000x1000?text=Really+Big+Image"
            alt="Image placeholder image for testing responsiveness"
          />
        </div>
        <div class="card-content">
          <h1 class="card-title"><a href="#">My Stacked Card Title</a></h1>

          <p class="card-metadata">
            <span class="card-rating">★★★★<span>☆</span></span>
            <span class="card-votes">(1234 votes)</span>
          </p>

          <p class="card-desc">
            This card has the stacked card class which produces a single-column or stacked layout.
            This is a popular choice for cards, but make sure you've applied the
            <i>card-stacked</i> class or else you want get this behavior
            <span class="quoted">out-the-box</span>. This particular example has an image whereas
            the one below does not.
          </p>

          <button class="btn btn-primary" type="submit">Do Something</button>
        </div>
      </article>

      <article class="card">
        <div class="card-content">
          <h1 class="card-title"><a href="#">My Imageless Card Title</a></h1>
          <p class="card-metadata">
            <span class="card-rating">★★★★<span>☆</span></span>
            <span class="card-votes">(1234 votes)</span>
          </p>
          <p class="card-desc">
            This card also has the stacked card class which produces a single-column or stacked
            layout.
          </p>

          <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor
            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure
            dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
          </p>

          <button class="btn btn-primary" type="submit">Do Something</button>
        </div>
      </article>

      <article class="cards-demo">
        <div class="card">
          <h1 style="margin: 0">Arbitrary child content with multiple cards per row</h1>
          <p>
            Many frameworks allow you to pass in child markup or views. These are often called
            <span class="quoted">slots</span> or <span class="quoted">outlets</span>. This allows
            for a lot of flexibility and these child views can have their own styling applied. This
            test simply confirms that the general card frame looks good here.
          </p>
          <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor
            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure
            dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
            Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt
            mollit anim id est laborum.
          </p>
          <button class="btn btn-raised btn-rounded btn-primary">Yes</button>
          <button class="btn btn-raised btn-rounded btn-secondary">No</button>
        </div>
        <div class="card">
          <h1 style="margin: 0">Arbitrary child content with multiple cards per row</h1>
          <p>
            Many frameworks allow you to pass in child markup or views. These are often called
            <span class="quoted">slots</span> or <span class="quoted">outlets</span>. This allows
            for a lot of flexibility and these child views can have their own styling applied. This
            test simply confirms that the general card frame looks good here.
          </p>
          <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor
            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure
            dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
            Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt
            mollit anim id est laborum.
          </p>
          <button class="btn btn-raised btn-rounded btn-primary">Yes</button>
          <button class="btn btn-raised btn-rounded btn-secondary">No</button>
        </div>

        <div class="card">
          <h1 style="margin: 0">Arbitrary child content with multiple cards per row</h1>
          <p>
            Many frameworks allow you to pass in child markup or views. These are often called
            <span class="quoted">slots</span> or <span class="quoted">outlets</span>. This allows
            for a lot of flexibility and these child views can have their own styling applied. This
            test simply confirms that the general card frame looks good here.
          </p>
          <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor
            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
            exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure
            dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
            Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt
            mollit anim id est laborum.
          </p>
          <button class="btn btn-raised btn-rounded btn-primary">Yes</button>
          <button class="btn btn-raised btn-rounded btn-secondary">No</button>
        </div>
      </article>

      <article class="card-base" style="border: 1px solid #dddddd">
        <section style="padding: 24px 24px">
          <h1 style="margin: 0">Card Base / No Skin</h1>
          <p>
            If using CSS custom properties theming is not enough customizability for you, this
            approach may help. So, each card's CSS is, essentially, split into two classes between a
            card's base and its skinning styles:
            <i>.card-base</i> and <i>.card-skin</i> with <i>.card</i> combings these two for
            convenience. But, check out how you can leave out the skin…
          </p>
          <p>
            If you inspect this card in devtools, you'll see that we use the
            <i>card-base</i> class. With only the base styles, I can customize the skin exactly to
            my liking. For example, I've elected to use a 1 pixel border on the card itself, and not
            pull in the raised box shadow styles you see on the other examples.
          </p>
          <p>
            Customizing this way is sort of an escape hatch and I would advise first seeing if using
            the CSS custom properties override approach gets you what you need. That said, it's
            available should you need it!
          </p>
        </section>
      </article>

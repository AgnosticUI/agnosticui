import { ElementRef, ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';
import * as i0 from "@angular/core";
export class IconComponent {
    constructor($element) {
        this.$element = $element;
        this.size = 18;
        this.type = '';
        this.isSkinned = true;
    }
    ngOnInit() {
        console.log('in ngOnInit');
        const svg = this.$element.nativeElement.querySelector('svg');
        console.log('ngOnInit -- svg: ', svg);
        svg?.classList.add('icon-svg');
        if (this.size)
            svg?.classList.add(`icon-svg-${this.size}`);
        if (this.type)
            svg?.classList.add(`icon-svg-${this.type}`);
    }
    get iconClasses() {
        return [
            'icon',
            this.isSkinned ? 'icon' : 'icon-base',
            this.size ? `icon-${this.size}` : '',
            this.type ? `icon-${this.type}` : '',
        ]
            .filter((c) => c)
            .join(' ');
    }
}
IconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: IconComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
IconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.3", type: IconComponent, selector: "ag-icon", inputs: { size: "size", type: "type", isSkinned: "isSkinned" }, ngImport: i0, template: `<span [class]="iconClasses"><ng-content></ng-content></span>`, isInline: true, styles: [".icon-base{display:inline-flex;text-align:center;max-width:100%;pointer-events:none;-webkit-user-select:none;user-select:none}.icon,.icon-skin{width:var(--fluid-16);height:var(--fluid-16)}.icon-14{width:var(--fluid-14);height:var(--fluid-14)}.icon-16{width:var(--fluid-16);height:var(--fluid-16)}.icon-18{width:var(--fluid-18);height:var(--fluid-18)}.icon-20{width:var(--fluid-20);height:var(--fluid-20)}.icon-24,.icon-svg-24{width:var(--fluid-24);height:var(--fluid-24)}.icon-32{width:var(--fluid-32);height:var(--fluid-32)}.icon-36{width:var(--fluid-36);height:var(--fluid-36)}.icon-40{width:var(--fluid-40);height:var(--fluid-40)}.icon-48{width:var(--fluid-48);height:var(--fluid-48)}.icon-56{width:var(--fluid-56);height:var(--fluid-56)}.icon-64{width:var(--fluid-64);height:var(--fluid-64)}\n", ".icon-svg{width:var(--fluid-16);height:var(--fluid-16);fill:currentColor}.icon-svg-14{width:var(--fluid-14);height:var(--fluid-14)}.icon-svg-16{width:var(--fluid-16);height:var(--fluid-16)}.icon-svg-18{width:var(--fluid-18);height:var(--fluid-18)}.icon-svg-20{width:var(--fluid-20);height:var(--fluid-20)}.icon-svg-24{width:var(--fluid-24);height:var(--fluid-24)}.icon-svg-32{width:var(--fluid-32);height:var(--fluid-32)}.icon-svg-36{width:var(--fluid-36);height:var(--fluid-36)}.icon-svg-40{width:var(--fluid-40);height:var(--fluid-40)}.icon-svg-48{width:var(--fluid-48);height:var(--fluid-48)}.icon-svg-56{width:var(--fluid-56);height:var(--fluid-56)}.icon-svg-64{width:var(--fluid-64);height:var(--fluid-64)}.icon-svg-info{color:var(--agnostic-primary)}.icon-svg-action,.icon-svg-success{color:var(--agnostic-action)}.icon-svg-warning{color:var(--agnostic-warning-border-accent)}.icon-svg-error{color:var(--agnostic-error)}\n", "ag-icon,ag-icon-svg{display:inline-flex}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: IconComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ag-icon', template: `<span [class]="iconClasses"><ng-content></ng-content></span>`, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [".icon-base{display:inline-flex;text-align:center;max-width:100%;pointer-events:none;-webkit-user-select:none;user-select:none}.icon,.icon-skin{width:var(--fluid-16);height:var(--fluid-16)}.icon-14{width:var(--fluid-14);height:var(--fluid-14)}.icon-16{width:var(--fluid-16);height:var(--fluid-16)}.icon-18{width:var(--fluid-18);height:var(--fluid-18)}.icon-20{width:var(--fluid-20);height:var(--fluid-20)}.icon-24,.icon-svg-24{width:var(--fluid-24);height:var(--fluid-24)}.icon-32{width:var(--fluid-32);height:var(--fluid-32)}.icon-36{width:var(--fluid-36);height:var(--fluid-36)}.icon-40{width:var(--fluid-40);height:var(--fluid-40)}.icon-48{width:var(--fluid-48);height:var(--fluid-48)}.icon-56{width:var(--fluid-56);height:var(--fluid-56)}.icon-64{width:var(--fluid-64);height:var(--fluid-64)}\n", ".icon-svg{width:var(--fluid-16);height:var(--fluid-16);fill:currentColor}.icon-svg-14{width:var(--fluid-14);height:var(--fluid-14)}.icon-svg-16{width:var(--fluid-16);height:var(--fluid-16)}.icon-svg-18{width:var(--fluid-18);height:var(--fluid-18)}.icon-svg-20{width:var(--fluid-20);height:var(--fluid-20)}.icon-svg-24{width:var(--fluid-24);height:var(--fluid-24)}.icon-svg-32{width:var(--fluid-32);height:var(--fluid-32)}.icon-svg-36{width:var(--fluid-36);height:var(--fluid-36)}.icon-svg-40{width:var(--fluid-40);height:var(--fluid-40)}.icon-svg-48{width:var(--fluid-48);height:var(--fluid-48)}.icon-svg-56{width:var(--fluid-56);height:var(--fluid-56)}.icon-svg-64{width:var(--fluid-64);height:var(--fluid-64)}.icon-svg-info{color:var(--agnostic-primary)}.icon-svg-action,.icon-svg-success{color:var(--agnostic-action)}.icon-svg-warning{color:var(--agnostic-warning-border-accent)}.icon-svg-error{color:var(--agnostic-error)}\n", "ag-icon,ag-icon-svg{display:inline-flex}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { size: [{
                type: Input
            }], type: [{
                type: Input
            }], isSkinned: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9saWJzL2FnL3NyYy9saWIvaWNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDOztBQVdqSCxNQUFNLE9BQU8sYUFBYTtJQUt4QixZQUFtQixRQUFxQztRQUFyQyxhQUFRLEdBQVIsUUFBUSxDQUE2QjtRQUovQyxTQUFJLEdBQTBELEVBQUUsQ0FBQztRQUNqRSxTQUFJLEdBQWtELEVBQUUsQ0FBQztRQUN6RCxjQUFTLEdBQWEsSUFBSSxDQUFDO0lBRXdCLENBQUM7SUFFN0QsUUFBUTtRQUNOLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLENBQUE7UUFDMUIsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzdELE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDdEMsR0FBRyxFQUFFLFNBQVMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDL0IsSUFBSSxJQUFJLENBQUMsSUFBSTtZQUFFLEdBQUcsRUFBRSxTQUFTLENBQUMsR0FBRyxDQUFDLFlBQVksSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7UUFDM0QsSUFBSSxJQUFJLENBQUMsSUFBSTtZQUFFLEdBQUcsRUFBRSxTQUFTLENBQUMsR0FBRyxDQUFDLFlBQVksSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7SUFDN0QsQ0FBQztJQUNELElBQUksV0FBVztRQUNiLE9BQU87WUFDTCxNQUFNO1lBQ04sSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxXQUFXO1lBQ3JDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFFBQVEsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ3BDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFFBQVEsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFO1NBQ3JDO2FBQ0UsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7YUFDaEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2YsQ0FBQzs7MEdBeEJVLGFBQWE7OEZBQWIsYUFBYSwrR0FQZCw4REFBOEQ7MkZBTzdELGFBQWE7a0JBVHpCLFNBQVM7K0JBQ0UsU0FBUyxZQUNULDhEQUE4RCxtQkFFdkQsdUJBQXVCLENBQUMsTUFBTSxpQkFHaEMsaUJBQWlCLENBQUMsSUFBSTtpR0FHNUIsSUFBSTtzQkFBWixLQUFLO2dCQUNHLElBQUk7c0JBQVosS0FBSztnQkFDRyxTQUFTO3NCQUFqQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYWctaWNvbicsXG4gIHRlbXBsYXRlOiBgPHNwYW4gW2NsYXNzXT1cImljb25DbGFzc2VzXCI+PG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50Pjwvc3Bhbj5gLFxuICBzdHlsZVVybHM6IFsnLi9pY29uLmNzcycsICdpY29uLXN2Zy5jc3MnLCAnLi9pY29uLmhvc3QuY3NzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAvLyBXZSByZWNlaXZlIFNWRyBhcyBTbG90LiBCdXQsIHdlIG5lZWQgd2lkdGggQ1NTIGFwcGxpZWQgdG8gdGhlIFNWRyBpdHNlbGZcbiAgLy8gaW4gU2FmYXJpOyBzbyB3ZSBuZWVkIHRvIGVuYWJsZSBnbG9iYWwgQ1NTIGUuZy4gYC5pY29uLTI0ID4gc3ZnIHsgd2lkdGg6IDI0cHggfWBcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbn0pXG5leHBvcnQgY2xhc3MgSWNvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIHNpemU/OiAxNCB8IDE2IHwgMTggfCAyMCB8IDI0IHwgMzIgfCAzNiB8IDQwIHwgNDggfCA1NiB8IDY0ID0gMTg7XG4gIEBJbnB1dCgpIHR5cGU6ICd3YXJuaW5nJyB8ICdlcnJvcicgfCAnc3VjY2VzcycgfCAnaW5mbycgfCAnJyA9ICcnO1xuICBASW5wdXQoKSBpc1NraW5uZWQ/OiBib29sZWFuID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgJGVsZW1lbnQ6IEVsZW1lbnRSZWY8SFRNTFNwYW5FbGVtZW50PikgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgY29uc29sZS5sb2coJ2luIG5nT25Jbml0JylcbiAgICBjb25zdCBzdmcgPSB0aGlzLiRlbGVtZW50Lm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3Rvcignc3ZnJyk7XG4gICAgY29uc29sZS5sb2coJ25nT25Jbml0IC0tIHN2ZzogJywgc3ZnKTtcbiAgICBzdmc/LmNsYXNzTGlzdC5hZGQoJ2ljb24tc3ZnJyk7XG4gICAgaWYgKHRoaXMuc2l6ZSkgc3ZnPy5jbGFzc0xpc3QuYWRkKGBpY29uLXN2Zy0ke3RoaXMuc2l6ZX1gKTtcbiAgICBpZiAodGhpcy50eXBlKSBzdmc/LmNsYXNzTGlzdC5hZGQoYGljb24tc3ZnLSR7dGhpcy50eXBlfWApO1xuICB9XG4gIGdldCBpY29uQ2xhc3NlcygpIHtcbiAgICByZXR1cm4gW1xuICAgICAgJ2ljb24nLFxuICAgICAgdGhpcy5pc1NraW5uZWQgPyAnaWNvbicgOiAnaWNvbi1iYXNlJyxcbiAgICAgIHRoaXMuc2l6ZSA/IGBpY29uLSR7dGhpcy5zaXplfWAgOiAnJyxcbiAgICAgIHRoaXMudHlwZSA/IGBpY29uLSR7dGhpcy50eXBlfWAgOiAnJyxcbiAgICBdXG4gICAgICAuZmlsdGVyKChjKSA9PiBjKVxuICAgICAgLmpvaW4oJyAnKTtcbiAgfVxufVxuIl19
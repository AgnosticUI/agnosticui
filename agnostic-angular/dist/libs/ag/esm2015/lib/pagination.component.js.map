{"version":3,"file":"pagination.component.js","sourceRoot":"","sources":["../../../../../libs/ag/src/lib/pagination.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  Component,\n} from '@angular/core';\n\nexport interface NavigationLabels {\n  first: string;\n  previous: string;\n  next: string;\n  last: string;\n}\n\n@Component({\n  selector: 'ag-pagination',\n  template: `<nav\n    [class]=\"paginationContainerClasses\"\n    [attr.aria-label]=\"ariaLabel\"\n  >\n    <ul [class]=\"paginationClasses\">\n      <li *ngIf=\"isFirstLast\" [class]=\"paginationItemFirstClasses\">\n        <button\n          type=\"button\"\n          [class]=\"paginationButtonClass\"\n          (click)=\"onFirst()\"\n          [disabled]=\"isOnFirst()\"\n          [attr.aria-disabled]=\"isOnFirst()\"\n          aria-label=\"Goto page 1\"\n        >\n          {{ firstLabel() }}\n        </button>\n      </li>\n      <li [class]=\"paginationItemFirstClasses\">\n        <button\n          type=\"button\"\n          [class]=\"paginationButtonClass\"\n          (click)=\"onPrevious()\"\n          aria-label=\"Goto previous page\"\n          [attr.aria-disabled]=\"isOnFirst()\"\n          [disabled]=\"isOnFirst()\"\n        >\n          {{ previousLabel() }}\n        </button>\n      </li>\n      <li\n        *ngFor=\"let page of pages; index as i\"\n        [class]=\"paginationItemClassesForPage(page)\"\n      >\n        <button\n          *ngIf=\"page === current\"\n          type=\"button\"\n          [class]=\"paginationButtonClass\"\n          (click)=\"handleClick(page)\"\n          aria-current=\"page\"\n          [attr.aria-label]=\"ariaForCurrentPage(page)\"\n        >\n          {{ page }}\n        </button>\n        <span *ngIf=\"page === '...'; else notGap\">{{ page }}</span>\n        <ng-template #notGap>\n          <button\n            *ngIf=\"page !== current\"\n            type=\"button\"\n            [class]=\"paginationButtonClass\"\n            (click)=\"handleClick(page)\"\n            [attr.aria-label]=\"'Goto page ' + page\"\n          >\n            {{ page }}\n          </button>\n        </ng-template>\n      </li>\n      <li [class]=\"paginationItemLastClasses\">\n        <button\n          type=\"button\"\n          [class]=\"paginationButtonClass\"\n          aria-label=\"Goto next page\"\n          [disabled]=\"isOnLast()\"\n          [attr.aria-disabled]=\"isOnLast()\"\n          (click)=\"onNext()\"\n        >\n          {{ nextLabel() }}\n        </button>\n      </li>\n      <li [class]=\"paginationItemLastClasses\">\n        <button\n          type=\"button\"\n          [class]=\"paginationButtonClass\"\n          (click)=\"onLast()\"\n          [disabled]=\"isOnLast()\"\n          [attr.aria-disabled]=\"isOnLast()\"\n          aria-label=\"Goto last page\"\n        >\n          {{ lastLabel() }}\n        </button>\n      </li>\n    </ul>\n  </nav> `,\n  styleUrls: ['./pagination.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent {\n  @Input() justify?: 'start' | 'center' | 'end' | '' = '';\n  @Input() ariaLabel?: string = 'Pagination';\n  @Input() current: number = 1;\n  @Input() pages: any[] = [];\n  @Input() isBordered?: boolean = false;\n  @Input() isFirstLast?: boolean = true;\n  @Input() navigationLabels?: NavigationLabels = {\n    first: 'First',\n    last: 'Last',\n    previous: 'Previous',\n    next: 'Next',\n  };\n\n  @Output() onPageChange: EventEmitter<number> = new EventEmitter<number>();\n\n  public onFirst(): void {\n    this.onPageChange.emit(1);\n  }\n  public onPrevious(): void {\n    this.onPageChange.emit(this.current - 1);\n  }\n  public onNext(): void {\n    this.onPageChange.emit(this.current + 1);\n  }\n  public onLast(): void {\n    this.onPageChange.emit(this.getLastPageNumber());\n  }\n\n  handleClick(page: number): void {\n    this.onPageChange.emit(page);\n  }\n\n  isOnFirst() {\n    return this.current === 1;\n  }\n\n  getLastPageNumber() {\n    return this.pages[this.pages.length - 1];\n  }\n\n  isOnLast() {\n    return this.current === this.getLastPageNumber();\n  }\n\n  get paginationContainerClasses() {\n    return [\n      'pagination-container',\n      !!this.justify ? `pagination-${this.justify}` : '',\n    ]\n      .filter((cl) => cl)\n      .join(' ');\n  }\n  get paginationClasses() {\n    return ['pagination', !!this.isBordered ? 'pagination-bordered' : '']\n      .filter((cl) => cl)\n      .join(' ');\n  }\n  get paginationItemFirstClasses() {\n    return [\n      'pagination-item',\n      this.isOnFirst() ? 'pagination-item-disabled' : '',\n    ]\n      .filter((cl) => cl)\n      .join(' ');\n  }\n  get paginationItemLastClasses() {\n    return [\n      'pagination-item',\n      this.isOnLast() ? 'pagination-item-disabled' : '',\n    ]\n      .filter((cl) => cl)\n      .join(' ');\n  }\n  get paginationButtonClass() {\n    return 'pagination-button';\n  }\n\n  paginationItemClassesForPage(page: number | string) {\n    return [\n      'pagination-item',\n      page === this.current ? 'pagination-item-active' : '',\n      page === '...' ? 'pagination-item-gap' : '',\n    ]\n      .filter((cl) => cl)\n      .join(' ');\n  }\n\n  ariaForCurrentPage(page: number) {\n    return `Page ${page},  current page`;\n  }\n  firstLabel() {\n    return `${String.fromCharCode(171)} ${this.navigationLabels?.first}`;\n  }\n  previousLabel() {\n    return `${String.fromCharCode(8249)} ${this.navigationLabels?.previous}`;\n  }\n  nextLabel() {\n    return `${this.navigationLabels?.next} ${String.fromCharCode(8250)}`;\n  }\n  lastLabel() {\n    return `${this.navigationLabels?.last} ${String.fromCharCode(187)}`;\n  }\n}\n"]}
{"version":3,"file":"divider.component.js","sourceRoot":"","sources":["../../../../../libs/ag/src/lib/divider.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,uBAAuB,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;;;AAYvF,MAAM,OAAO,gBAAgB;IAV7B;QAWW,eAAU,GAAa,KAAK,CAAC;QAQF,eAAU,GAAa,KAAK,CAAC;KAelE;IAXC,IAAI,cAAc;QAChB,OAAO;YACL,SAAS;YACT,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE;YACzC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;YACvC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;YACvC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,mBAAmB,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE;SACtD;aACE,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;aAChB,IAAI,CAAC,GAAG,CAAC,CAAC;IACf,CAAC;;8GAvBU,gBAAgB;kGAAhB,gBAAgB,6NARjB;;;;SAIH;4FAII,gBAAgB;kBAV5B,SAAS;mBAAC;oBACT,QAAQ,EAAE,YAAY;oBACtB,QAAQ,EAAE;;;;SAIH;oBACP,SAAS,EAAE,CAAC,eAAe,CAAC;oBAC5B,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;8BAEU,UAAU;sBAAlB,KAAK;gBAQ8B,UAAU;sBAA7C,WAAW;uBAAC,YAAY;;sBAAG,KAAK;gBACxB,OAAO;sBAAf,KAAK;gBACG,IAAI;sBAAZ,KAAK;gBACG,IAAI;sBAAZ,KAAK","sourcesContent":["import { Input, ChangeDetectionStrategy, HostBinding, Component } from '@angular/core';\n\n@Component({\n  selector: 'ag-divider',\n  template: `<div [class]=\"dividerClasses\">\n    <div *ngIf=\"hasContent\" class=\"divider-content\">\n      <ng-content></ng-content>\n    </div>\n  </div>`,\n  styleUrls: ['./divider.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DividerComponent {\n  @Input() hasContent?: boolean = false;\n  /**\n   * For Angular, we need to conditionally add the .flex class to the host\n   * if we're in vertical orientation so that our .divider-vertical classes\n   * are direct children of a flex container since .direct-vertical has:\n   * height: auto; flex-direction: column; align-self: stretch;\n   * https://stackoverflow.com/a/39161705\n   */\n  @HostBinding('class.flex') @Input() isVertical?: boolean = false;\n  @Input() justify?: 'start' | 'end' | '';\n  @Input() type?: 'info' | 'success' | 'error' | 'warning' | '';\n  @Input() size?: 'small' | 'large' | 'xlarge' | '';\n  get dividerClasses() {\n    return [\n      'divider',\n      this.isVertical ? 'divider-vertical' : '',\n      this.type ? `divider-${this.type}` : '',\n      this.size ? `divider-${this.size}` : '',\n      this.justify ? `divider-justify-${this.justify}` : '',\n    ]\n      .filter((c) => c)\n      .join(' ');\n  }\n}\n"]}
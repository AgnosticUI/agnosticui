{"version":3,"file":"tabs.component.js","sourceRoot":"","sources":["../../../../../libs/ag/src/lib/tabs.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  QueryList,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  TemplateRef,\n  ViewChildren\n} from '@angular/core';\nimport { TabPanelComponent } from './tab-panel.component';\n@Component({\n  selector: 'ag-tabs',\n  template: `\n    <div class=\"tabs\" [class.tabs-vertical]=\"isVerticalOrientation === true\">\n      <div\n        [class.tab-list]=\"isSkinned === true\"\n        [class.tab-list-base]=\"isSkinned === false\"\n        [class.tab-borderless]=\"isBorderless === true\"\n        role=\"tablist\"\n        aria-label=\"Tabs\"\n      >\n        <div *ngFor=\"let panel of tabPanels; index as i\"\n          (click)=\"selectPanel(panel)\"\n          (keydown)=\"handleKeyDown($event, i)\"\n        >\n          <ng-template #defaultTabButton>\n            <button\n              #tabButton\n              role=\"tab\"\n              class=\"tab-item tab-button\"\n              [class.active]=\"panel.isActive\"\n              [attr.disabled]=\"\n                isDisabled || disabledOptions?.includes(panel.tabButtonTitle)\n                  ? true\n                  : null\n              \"\n              [class.tab-button-large]=\"size === 'large'\"\n              [class.tab-button-xlarge]=\"size === 'xlarge'\"\n              [attr.aria-controls]=\"panel.panelId\"\n              [attr.aria-selected]=\"panel.isActive\"\n              [attr.tab-index]=\"panel.isActive ? 0 : -1\"\n            >\n              {{ panel.tabButtonTitle }}\n            </button>\n          </ng-template>\n          <ng-container\n            [ngTemplateOutlet]=\"tabButtonTemplate ? tabButtonTemplate : defaultTabButton\"\n            [ngTemplateOutletContext]=\"{ $implicit: panel, index: i }\"\n          >\n          </ng-container>\n        </div>\n      </div>\n      <ng-content></ng-content>\n    </div>\n  `,\n  styleUrls: ['./tabs.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TabsComponent implements AfterContentInit {\n  @ContentChildren(TabPanelComponent) tabPanels!: QueryList<TabPanelComponent>;\n\n  // See https://blog.angular-university.io/angular-ng-template-ng-container-ngtemplateoutlet/#configurablecomponentswithtemplatepartialinputs\n  @Input()\n  public tabButtonTemplate?: TemplateRef<any>;\n\n  @Input() size?: string = '';\n  @Input() disabledOptions?: string[];\n  @Input() isDisabled?: boolean = false;\n  @Input() isSkinned?: boolean = true;\n  @Input() isBorderless?: boolean = false;\n  @Input() isVerticalOrientation?: boolean = false;\n\n  /**\n   * This is used to allow consumer to provide their own custom tab buttons like:\n   * <ng-template #tabButtonTemplate let-panel let-idx=\"index\">\n      <div style=\"{{idx > 0 ? 'margin-left: -1px' : undefined}}\">\n        <ag-button\n          type=\"faux\"\n          [isBordered]=\"true\"\n          mode=\"primary\"\n          role=\"tab\"\n          [attr.aria-selected]=\"panel.isActive\"\n          [attr.disabled]=\"\n            isDisabled || disabledOptions?.includes(panel.tabButtonTitle)\n              ? true\n              : null\n          \"\n          [class.active]=\"panel.isActive\"\n          [attr.aria-controls]=\"panel.panelId\"\n          [attr.aria-selected]=\"panel.isActive\"\n          [attr.tab-index]=\"panel.isActive ? 0 : -1\"\n        >\n          {{ panel.tabButtonTitle }}\n        </ag-button>\n      </div>\n    </ng-template>\n  */\n  @ViewChildren('tabButton') tabButtonRefs!: QueryList<ElementRef>;\n\n  @Output()\n  selectionChanged = new EventEmitter();\n\n  ngAfterContentInit() {\n    const activeTabs = this.tabPanels.filter((tab) => tab.isActive);\n    if (activeTabs.length === 0) {\n      this.selectPanel(this.tabPanels.first);\n    }\n  }\n\n  selectPanel(tabPanel: TabPanelComponent) {\n    // First deactivate all tabs, then select passed in tab\n    this.tabPanels.toArray().forEach((tab) => {\n      tab.isActive = false;\n    });\n    tabPanel.isActive = true;\n    this.selectionChanged.emit(tabPanel);\n  }\n\n  focusTab(index: number, direction?: string) {\n    console.log('focusTab called with index: ', index, ' and direction: ', direction);\n    let i = index;\n    if (direction === \"asc\") {\n      i += 1;\n    } else if (direction === \"desc\") {\n      i -= 1;\n    }\n    const tabPanelsArray = this.tabPanels.toArray();\n    // Circular navigation\n    //\n    // If we've went beyond \"start\" circle around to last\n    if (i < 0) {\n      i = tabPanelsArray.length - 1;\n    } else if (i >= tabPanelsArray.length) {\n      // We've went beyond \"last\" so circle around to first\n      i = 0;\n    }\n\n    const buttons = this.tabButtonRefs.toArray();\n    const nextTabRef = buttons[i];\n    const nextTab = nextTabRef ? nextTabRef.nativeElement : null;\n    if (nextTab) {\n      // Edge case: We hit a tab button that's been disabled. If so, we recurse, but\n      // only if we've been supplied a `direction`. Otherwise, nothing left to do.\n      if (nextTab.disabled && direction) {\n        // Retry with new `i` index going in same direction\n        this.focusTab(i, direction);\n      } else {\n        // Nominal case is to just focs next tab :)\n        nextTab.focus();\n      }\n    }\n  }\n\n  handleKeyDown(ev: KeyboardEvent, index: number): void {\n    switch (ev.key) {\n      case \"Up\": // These first cases are IEEdge :(\n      case \"ArrowUp\":\n        if (this.isVerticalOrientation) {\n          this.focusTab(index, \"desc\");\n        }\n        break;\n      case \"Down\":\n      case \"ArrowDown\":\n        if (this.isVerticalOrientation) {\n          this.focusTab(index, \"asc\");\n        }\n        break;\n      case \"Left\":\n      case \"ArrowLeft\":\n        if (!this.isVerticalOrientation) {\n          this.focusTab(index, \"desc\");\n        }\n        break;\n      case \"Right\":\n      case \"ArrowRight\":\n        if (!this.isVerticalOrientation) {\n          this.focusTab(index, \"asc\");\n        }\n        break;\n      case \"Home\":\n      case \"ArrowHome\":\n        this.focusTab(0);\n        break;\n      case \"End\":\n      case \"ArrowEnd\":\n        this.focusTab(this.tabPanels.toArray().length - 1);\n        break;\n      case \"Enter\":\n      case \"Space\":\n        this.focusTab(index);\n        this.selectPanel(this.tabPanels.toArray()[index]);\n        break;\n      default:\n        return;\n    }\n    ev.preventDefault();\n  }\n}\n"]}
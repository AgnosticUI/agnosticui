{"version":3,"file":"card.component.js","sourceRoot":"","sources":["../../../../../libs/ag/src/lib/card.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,uBAAuB,EAAE,MAAM,eAAe,CAAC;;;AAU1E,MAAM,OAAO,aAAa;IAR1B;QAYW,cAAS,GAAa,IAAI,CAAC;KA4BrC;IAtBC,IAAW,OAAO;QAEhB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC;QACxD,MAAM,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/D,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5D,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC;QACzD,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5D,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC;QACzD,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAEvD,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAChD,OAAO;YACL,SAAS;YACT,SAAS;YACT,eAAe;YACf,cAAc;YACd,aAAa;YACb,cAAc;YACd,aAAa;YACb,SAAS;SACV,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACd,CAAC;;2GA/BU,aAAa;+FAAb,aAAa,mOANd;;SAEH;4FAII,aAAa;kBARzB,SAAS;mBAAC;oBACT,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE;;SAEH;oBACP,SAAS,EAAE,CAAC,YAAY,CAAC;oBACzB,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;8BAEU,GAAG;sBAAX,KAAK;gBACG,IAAI;sBAAZ,KAAK;gBACG,UAAU;sBAAlB,KAAK;gBACG,SAAS;sBAAjB,KAAK;gBACG,SAAS;sBAAjB,KAAK;gBACG,QAAQ;sBAAhB,KAAK;gBACG,SAAS;sBAAjB,KAAK;gBACG,QAAQ;sBAAhB,KAAK","sourcesContent":["import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'ag-card',\n  template: `<div [ngClass]=\"classes\">\n    <ng-content></ng-content>\n  </div>`,\n  styleUrls: ['./card.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CardComponent {\n  @Input() css?: string;\n  @Input() type?: \"success\" | \"info\" | \"warning\" | \"error\";\n  @Input() isAnimated?: boolean;\n  @Input() isSkinned?: boolean = true;\n  @Input() isStacked?: boolean;\n  @Input() isShadow?: boolean;\n  @Input() isRounded?: boolean;\n  @Input() isBorder?: boolean;\n\n  public get classes(): string {\n    // classes() {\n    const baseClass = this.isSkinned ? 'card' : 'card-base';\n    const isAnimatedClass = this.isAnimated ? 'card-animated' : '';\n    const isStackedClass = this.isStacked ? 'card-stacked' : '';\n    const isShadowClass = this.isShadow ? 'card-shadow' : '';\n    const isRoundedClass = this.isRounded ? 'card-rounded' : '';\n    const isBorderClass = this.isBorder ? 'card-border' : '';\n    const typeClass = this.type ? `card-${this.type}` : '';\n\n    const overrides = this.css ? `${this.css}` : '';\n    return [\n      baseClass,\n      typeClass,\n      isAnimatedClass,\n      isStackedClass,\n      isShadowClass,\n      isRoundedClass,\n      isBorderClass,\n      overrides,\n    ].join(' ');\n  }\n}\n"]}
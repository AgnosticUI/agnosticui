{"version":3,"file":"switch.component.js","sourceRoot":"","sources":["../../../../../libs/ag/src/lib/switch.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,uBAAuB,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;;;AAwBhG,MAAM,OAAO,eAAe;IAtB5B;QAyBW,kBAAa,GAAG,MAAM,CAAC;QACvB,eAAU,GAAa,KAAK,CAAC;QAC7B,aAAQ,GAAa,KAAK,CAAC;QAC3B,eAAU,GAAa,KAAK,CAAC;QAC7B,SAAI,GAAI,EAAE,CAAC;QAYV,aAAQ,GAAG,IAAI,YAAY,EAAW,CAAC;KAiClD;IA1CC,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,IACI,SAAS,CAAC,GAAY;QACxB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;IAC3B,CAAC;IAID,aAAa,CAAC,EAAS;QACrB,MAAM,EAAE,GAAG,EAAE,CAAC,MAA0B,CAAC;QACzC,IAAI,EAAE,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,MAAM,EAAE;YAC7C,EAAE,CAAC,YAAY,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;YACzC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;aAAM;YACL,EAAE,CAAC,YAAY,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;YACxC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACzC,CAAC;IACD,eAAe;QACb,IAAI,OAAO,GAAG;YACZ,kBAAkB;YAClB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YACxB,IAAI,CAAC,aAAa,KAAK,OAAO,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;YACpD,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;SAClC,CAAC;QACF,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAClD,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IACD,UAAU;QACR,IAAI,OAAO,GAAG;YACZ,QAAQ;YACR,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE;YACtC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE;YACpC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;SACvC,CAAC;QACF,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAClD,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;;4GAnDU,eAAe;gGAAf,eAAe,4QApBhB;;;;;;;;;;;;;;;;WAgBD;2FAIE,eAAe;kBAtB3B,SAAS;mBAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE;;;;;;;;;;;;;;;;WAgBD;oBACT,SAAS,EAAE,CAAC,cAAc,CAAC;oBAC3B,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;8BAEU,KAAK;sBAAb,KAAK;gBACG,GAAG;sBAAX,KAAK;gBACG,aAAa;sBAArB,KAAK;gBACG,UAAU;sBAAlB,KAAK;gBACG,QAAQ;sBAAhB,KAAK;gBACG,UAAU;sBAAlB,KAAK;gBACG,IAAI;sBAAZ,KAAK;gBAQF,SAAS;sBADZ,KAAK;gBAKI,QAAQ;sBAAjB,MAAM","sourcesContent":["import { Component, EventEmitter, Input, ChangeDetectionStrategy, Output } from '@angular/core';\n\n@Component({\n  selector: 'ag-switch',\n  template: `<label [ngClass]=\"switchContainer()\">\n    <span *ngIf=\"labelPosition === 'left'\" class=\"switch-label\">{{\n      label\n    }}</span>\n    <input\n      type=\"checkbox\"\n      [checked]=\"isChecked\"\n      class=\"switch-input\"\n      [disabled]=\"isDisabled\"\n      role=\"switch\"\n      (change)=\"toggleChecked($event)\"\n    />\n    <span [ngClass]=\"switchSpan()\" aria-hidden=\"true\"></span>\n    <span *ngIf=\"labelPosition === 'right'\" class=\"switch-label\">{{\n      label\n    }}</span>\n  </label>`,\n  styleUrls: ['./switch.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SwitchComponent {\n  @Input() label!: string;\n  @Input() css?: string;\n  @Input() labelPosition = 'left';\n  @Input() isDisabled?: boolean = false;\n  @Input() isAction?: boolean = false;\n  @Input() isBordered?: boolean = false;\n  @Input() size? = '';\n\n  private switchChecked!: boolean;\n  get isChecked(): boolean {\n    return this.switchChecked;\n  }\n\n  @Input()\n  set isChecked(val: boolean) {\n    this.switchChecked = val;\n  }\n\n  @Output() selected = new EventEmitter<boolean>();\n\n  toggleChecked(ev: Event) {\n    const el = ev.target as HTMLInputElement;\n    if (el.getAttribute('aria-checked') == 'true') {\n      el.setAttribute('aria-checked', 'false');\n      this.switchChecked = false;\n    } else {\n      el.setAttribute('aria-checked', 'true');\n      this.switchChecked = true;\n    }\n    this.selected.emit(this.switchChecked);\n  }\n  switchContainer() {\n    let klasses = [\n      'switch-container',\n      this.css ? this.css : '',\n      this.labelPosition === 'right' ? 'switch-right' : '',\n      this.isDisabled ? 'disabled' : '',\n    ];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n  switchSpan() {\n    let klasses = [\n      'switch',\n      this.isBordered ? 'switch-border' : '',\n      this.isAction ? 'switch-action' : '',\n      this.size ? `switch-${this.size}` : '',\n    ];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n}\n"]}
{"version":3,"file":"select.component.js","sourceRoot":"","sources":["../../../../../libs/ag/src/lib/select.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,uBAAuB,EAAE,SAAS,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;;;AA0BhG,MAAM,OAAO,eAAe;IApB5B;QAqBU,aAAQ,GAAG,EAAE,CAAC;QAIb,uBAAkB,GAAY,yBAAyB,CAAC;QAGxD,eAAU,GAAa,KAAK,CAAC;QAC7B,eAAU,GAAa,KAAK,CAAC;QAC7B,iBAAY,GAAY,CAAC,CAAC;QAC1B,SAAI,GAA4B,EAAE,CAAC;QAG5C,YAAO,GAAG,IAAI,YAAY,EAAE,CAAC;KAkB9B;IAhBC,iBAAiB;QACf,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC;IAC1B,CAAC;IAED,eAAe,CAAC,EAAS;QACvB,MAAM,MAAM,GAAG,EAAE,CAAC,MAA2B,CAAC;QAC9C,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAED,aAAa;QACX,OAAO;YACL,QAAQ;YACR,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;SACvC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;;6GA/BU,eAAe;iGAAf,eAAe,wTAlBhB;;;;;;;;;;;;;;YAcA;4FAIC,eAAe;kBApB3B,SAAS;mBAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE;;;;;;;;;;;;;;YAcA;oBACV,SAAS,EAAE,CAAC,cAAc,CAAC;oBAC3B,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;8BAIU,QAAQ;sBAAhB,KAAK;gBACG,SAAS;sBAAjB,KAAK;gBACG,kBAAkB;sBAA1B,KAAK;gBACG,IAAI;sBAAZ,KAAK;gBACG,OAAO;sBAAf,KAAK;gBACG,UAAU;sBAAlB,KAAK;gBACG,UAAU;sBAAlB,KAAK;gBACG,YAAY;sBAApB,KAAK;gBACG,IAAI;sBAAZ,KAAK;gBAGN,OAAO;sBADN,MAAM","sourcesContent":["import { Input, Output, ChangeDetectionStrategy, Component, EventEmitter } from '@angular/core';\nexport interface SelectOptions {\n  value: string,\n  label: string,\n}\n\n@Component({\n  selector: 'ag-select',\n  template: `<label class=\"screenreader-only\" [attr.for]=\"uniqueId\">{{labelCopy}}</label>\n  <select\n    [id]=\"uniqueId\"\n    [name]=\"name\"\n    [ngClass]=\"selectClasses()\"\n    [disabled]=\"isDisabled\"\n    [multiple]=\"isMultiple\"\n    [size]=\"isMultiple && multipleSize\"\n    (change)=\"changeSelection($event)\"\n  >\n    <option *ngIf=\"showDefaultOption()\" [value]=\"null\" disabled selected> {{ defaultOptionLabel }}</option>\n    <option *ngFor=\"let option of options\" [value]=\"option.value\">\n      {{ option.label }}\n    </option>\n  </select>`,\n  styleUrls: ['./select.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectComponent {\n  private selected = '';\n\n  @Input() uniqueId!: string;\n  @Input() labelCopy!: string;\n  @Input() defaultOptionLabel?: string = \"Please select an option\";\n  @Input() name!: string;\n  @Input() options!: SelectOptions[];\n  @Input() isDisabled?: boolean = false;\n  @Input() isMultiple?: boolean = false;\n  @Input() multipleSize?: number = 1;\n  @Input() size?: 'small' | 'large' | '' = '';\n\n  @Output()\n  changed = new EventEmitter();\n\n  showDefaultOption() {\n    return !this.isMultiple;\n  }\n\n  changeSelection(ev: Event) {\n    const option = ev.target as HTMLOptionElement;\n    this.selected = option.value;\n    this.changed.emit(this.selected);\n  }\n\n  selectClasses() {\n    return [\n      'select',\n      this.size ? `select-${this.size}` : ''\n    ].filter(c => c).join(' ');\n  }\n}\n"]}
{"version":3,"file":"agnostic-angular.mjs","sources":["../../../../libs/ag/src/lib/alert.component.ts","../../../../libs/ag/src/lib/avatar.component.ts","../../../../libs/ag/src/lib/breadcrumb.component.ts","../../../../libs/ag/src/lib/button.component.ts","../../../../libs/ag/src/lib/buttongroup.component.ts","../../../../libs/ag/src/lib/card.component.ts","../../../../libs/ag/src/lib/close.component.ts","../../../../libs/ag/src/lib/choice-input.component.ts","../../../../libs/ag/src/lib/dialog.component.ts","../../../../libs/ag/src/lib/disclose.component.ts","../../../../libs/ag/src/lib/divider.component.ts","../../../../libs/ag/src/lib/empty-state.component.ts","../../../../libs/ag/src/lib/header.component.ts","../../../../libs/ag/src/lib/icon.component.ts","../../../../libs/ag/src/lib/input.component.ts","../../../../libs/ag/src/lib/loader.component.ts","../../../../libs/ag/src/lib/pagination.component.ts","../../../../libs/ag/src/lib/progress.component.ts","../../../../libs/ag/src/lib/select.component.ts","../../../../libs/ag/src/lib/spinner.component.ts","../../../../libs/ag/src/lib/switch.component.ts","../../../../libs/ag/src/lib/tag.component.ts","../../../../libs/ag/src/lib/tab-panel.component.ts","../../../../libs/ag/src/lib/tabs.component.ts","../../../../libs/ag/src/lib/table.component.ts","../../../../libs/ag/src/lib/ag.module.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'ag-alert',\n  template: `<div [ngClass]=\"alertClasses\" role=\"alert\">\n    <svg\n      class=\"alert-icon\"\n      [ngClass]=\"svgModifierClass\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n    >\n      <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n      <path\n        fill=\"currentColor\"\n        d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n      ></path>\n    </svg>\n    <ng-content></ng-content>\n  </div>`,\n  styleUrls: ['./alert.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AlertComponent {\n  @Input() isRounded = false;\n  @Input() isBorderAll = false;\n  @Input() isBorderLeft = false;\n  @Input() isBorderRight = false;\n  @Input() isBorderTop = false;\n  @Input() isBorderBottom = false;\n  @Input() isBlockEnd = false;\n  @Input() type: 'warning' | 'error' | 'info' | 'success' | '' = '';\n\n  public get alertClasses(): string {\n    const classes = [\n      'alert',\n      this.type ? `alert-${this.type}` : '',\n      this.isBorderAll ? 'alert-border-all' : '',\n      this.isBorderLeft ? 'alert-border-left' : '',\n      this.isBorderRight ? 'alert-border-right' : '',\n      this.isBorderTop ? 'alert-border-top' : '',\n      this.isBorderBottom ? 'alert-border-bottom' : '',\n      this.isBlockEnd ? 'alert-end' : '',\n      this.isRounded ? 'alert-rounded' : '',\n    ].filter(c => c.length).join(' ');\n    return classes;\n  }\n\n  public get svgModifierClass(): string {\n    return this.type ? `alert-${this.type}-icon` : '';\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\n@Component({\n  selector: 'ag-avatar-group',\n  template: `<div class=\"avatar-group\"><ng-content></ng-content></div>`,\n  styleUrls: ['./avatar.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // We need to go to globals for the group because we have some positional styles\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AvatarGroupComponent {}\n\n@Component({\n  selector: 'ag-avatar',\n  template: `<span [ngClass]=\"avatarClasses\" [attr.data-text]=\"text\"\n    ><ng-content></ng-content\n  ></span>`,\n  styleUrls: ['./avatar.css', './avatar.shame.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AvatarComponent {\n  @Input() isRounded = false;\n  @Input() isSquare = false;\n  @Input() isTransparent = false;\n  @Input() type: 'warning' | 'error' | 'info' | 'success' | '' = '';\n  @Input() size: 'small' | 'large' | 'xlarge' | '' = '';\n  @Input() text: string = '';\n\n  public get avatarClasses(): string {\n    return [\n      'avatar',\n      this.size ? `avatar-${this.size}` : '',\n      this.type ? `avatar-${this.type}` : '',\n      this.isRounded ? 'avatar-rounded' : '',\n      this.isTransparent ? 'avatar-transparent' : '',\n      this.isSquare ? 'avatar-square' : '',\n    ]\n      .filter((c) => c.length)\n      .join(' ');\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nexport interface BreadcrumbRoute {\n  label: string;\n  url?: string;\n}\n\n@Component({\n  selector: 'ag-breadcrumb-item',\n  template: `<li class=\"breadcrumb-item\" [class.active]=\"isLast\" [attr.aria-current]=\"isLast ? 'page' : null\">\n    <a *ngIf=\"!isLast && route.url; else linklessLabel\" [href]=\"route.url\">{{route.label}}</a>\n    <ng-template #linklessLabel>\n      {{route.label}}\n    </ng-template>\n  </li>`,\n  styleUrls: ['./breadcrumb.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BreadcrumbItemComponent {\n  @Input() route!: BreadcrumbRoute;\n  @Input() isLast?: boolean = false;\n}\n// <ag-breadcrumb-item *ngFor=\"let route of routes; last as isLast\" [isLast]=\"isLast\" [route]=\"route\"></ag-breadcrumb-item>\n@Component({\n  selector: 'ag-breadcrumb',\n  template: `<nav aria-label=\"breadcrumbs\">\n  <ol [class]=\"breadcrumbClasses\">\n    <li *ngFor=\"let route of routes; last as isLast\" class=\"breadcrumb-item\" [class.active]=\"isLast\" [attr.aria-current]=\"isLast ? 'page' : null\">\n      <a *ngIf=\"!isLast && route.url; else linklessLabel\" [href]=\"route.url\">{{route.label}}</a>\n      <ng-template #linklessLabel>{{route.label}}</ng-template>\n    </li>\n  </ol>\n</nav>`,\n  styleUrls: ['./breadcrumb.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BreadcrumbComponent {\n  @Input() type: 'arrow' | 'slash' | 'bullet' = 'slash';\n  @Input() routes!: BreadcrumbRoute[];\n\n  public get breadcrumbClasses(): string {\n    return [\n      'breadcrumb',\n      this.type ? `breadcrumb-${this.type}` : '',\n    ]\n      .filter((c) => c.length)\n      .join(' ');\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\n@Component({\n  selector: 'ag-button',\n  template: ` <button\n      div\n      *ngIf=\"getType !== 'faux'; else useFauxDiv\"\n      [type]=\"getType\"\n      (click)=\"handleClick.emit($event)\"\n      [disabled]=\"getDisabled\"\n      [class]=\"classes\"\n    >\n      <ng-container *ngTemplateOutlet=\"contentTpl\"></ng-container>\n    </button>\n    <ng-template #useFauxDiv>\n      <div [class]=\"classes\">\n        <ng-container *ngTemplateOutlet=\"contentTpl\"></ng-container>\n      </div>\n    </ng-template>\n    <!-- We have to grab projected ng-content and put in this template.\n      Then, we can reference it from the template outlets above -->\n    <ng-template #contentTpl>\n      <ng-content></ng-content>\n    </ng-template>`,\n  styleUrls: ['./button.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ButtonComponent {\n  @Input() mode: 'primary' | 'secondary' | undefined = undefined;\n  // Type `faux` will result in a div that \"looks like\" a button. Useful for tab buttons\n  // or similar that may be descendents of a focusable <li role=\"button\"... where it would\n  // throw an a11y error like: Ensure interactive controls are not nested\n  @Input() type?: 'button' | 'reset' | 'submit' | 'faux' = 'button';\n  @Input() size?: 'small' | 'medium' | 'large' = 'medium';\n  @Input() css?: string;\n  @Input() isDisabled?: true | false = false;\n  @Input() isSkinned?: boolean;\n  @Input() isBlank?: boolean;\n  @Input() isLink?: boolean;\n  @Input() isRaised?: boolean;\n  @Input() isCircle?: boolean;\n  @Input() isBlock?: boolean;\n  @Input() isBordered?: boolean;\n  @Input() isRounded?: boolean;\n  @Output() handleClick = new EventEmitter<MouseEvent>();\n\n  public get classes(): string {\n    const baseClass = this.isSkinned !== false ? `btn` : `btn-base`;\n    const modeClass = this.mode ? `btn-${this.mode}` : '';\n    const isBlankClass = this.isBlank === true ? 'btn-blank' : '';\n    const isLinkClass = this.isLink === true ? 'btn-link' : '';\n    const isBorderedClass = this.isBordered === true ? 'btn-bordered' : '';\n    const isRaisedClass = this.isRaised === true ? 'btn-raised' : '';\n    const isCircleClass = this.isCircle === true ? 'btn-circle' : '';\n    const isBlockClass = this.isBlock === true ? 'btn-block' : '';\n    const isRoundedClass = this.isRounded === true ? 'btn-rounded' : '';\n    const overrides = this.css ? `${this.css}` : '';\n    const sizeClass = this.size ? `btn-${this.size}` : 'btn-medium';\n\n    return [\n      baseClass,\n      modeClass,\n      sizeClass,\n      isBorderedClass,\n      isCircleClass,\n      isRoundedClass,\n      isRaisedClass,\n      isBlockClass,\n      isBlankClass,\n      isLinkClass,\n      overrides,\n    ].join(' ');\n  }\n\n  public get getDisabled(): boolean {\n    return this.isDisabled || false;\n  }\n\n  public get getType(): string {\n    return this.type ? this.type : 'button';\n  }\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ContentChildren,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ButtonComponent } from './button.component';\n\n// .screenreader-only is expected to be globally available via common.min.css\n@Component({\n  selector: 'ag-button-group',\n  template: `<div [ngClass]=\"classes\">\n    <span class=\"screenreader-only\">{{ getAriaLabel }}</span>\n    <ng-content></ng-content>\n  </div>`,\n  styleUrls: ['./button-group.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ButtonGroupComponent {\n  @ContentChildren(ButtonComponent) buttons!: QueryList<ButtonComponent>;\n  @Input() css?: string;\n  @Input() ariaLabel: string | undefined;\n\n  public get getAriaLabel(): string {\n    const label = this.ariaLabel ? this.ariaLabel : 'button group element';\n    return label;\n  }\n\n  public get classes(): string {\n    const cssClass = this.css ? this.css : '';\n    return ['btn-group', cssClass].join(' ');\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'ag-card',\n  template: `<div [ngClass]=\"classes\">\n    <ng-content></ng-content>\n  </div>`,\n  styleUrls: ['./card.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CardComponent {\n  @Input() css?: string;\n  @Input() type?: \"success\" | \"info\" | \"warning\" | \"error\";\n  @Input() isAnimated?: boolean;\n  @Input() isSkinned?: boolean = true;\n  @Input() isStacked?: boolean;\n  @Input() isShadow?: boolean;\n  @Input() isRounded?: boolean;\n  @Input() isBorder?: boolean;\n\n  public get classes(): string {\n    // classes() {\n    const baseClass = this.isSkinned ? 'card' : 'card-base';\n    const isAnimatedClass = this.isAnimated ? 'card-animated' : '';\n    const isStackedClass = this.isStacked ? 'card-stacked' : '';\n    const isShadowClass = this.isShadow ? 'card-shadow' : '';\n    const isRoundedClass = this.isRounded ? 'card-rounded' : '';\n    const isBorderClass = this.isBorder ? 'card-border' : '';\n    const typeClass = this.type ? `card-${this.type}` : '';\n\n    const overrides = this.css ? `${this.css}` : '';\n    return [\n      baseClass,\n      typeClass,\n      isAnimatedClass,\n      isStackedClass,\n      isShadowClass,\n      isRoundedClass,\n      isBorderClass,\n      overrides,\n    ].join(' ');\n  }\n}\n","import { Input, ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'ag-close',\n  template: `\n    <div\n      class=\"close-button\"\n      [class.close-button-small]=\"size === 'small'\"\n      [class.close-button-large]=\"size === 'large'\"\n      [class.close-button-xlarge]=\"size === 'xlarge'\"\n    >\n    <svg *ngIf=\"isFaux; else withButton\" class=\"close\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n      <path\n        fill=\"currentColor\"\n        d=\"M.439 21.44a1.5 1.5 0 0 0 2.122 2.121l9.262-9.261a.25.25 0 0 1 .354 0l9.262 9.263a1.5 1.5 0 1 0 2.122-2.121L14.3 12.177a.25.25 0 0 1 0-.354l9.263-9.262A1.5 1.5 0 0 0 21.439.44L12.177 9.7a.25.25 0 0 1-.354 0L2.561.44A1.5 1.5 0 0 0 .439 2.561L9.7 11.823a.25.25 0 0 1 0 .354Z\"\n      />\n    </svg>\n  </div>\n  <ng-template #withButton> \n    <button\n      class=\"close-button\"\n      aria-label=\"Close\"\n      [class.close-button-small]=\"size === 'small'\"\n      [class.close-button-large]=\"size === 'large'\"\n      [class.close-button-xlarge]=\"size === 'xlarge'\"\n    >\n      <svg class=\"close\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n        <path\n          fill=\"currentColor\"\n          d=\"M.439 21.44a1.5 1.5 0 0 0 2.122 2.121l9.262-9.261a.25.25 0 0 1 .354 0l9.262 9.263a1.5 1.5 0 1 0 2.122-2.121L14.3 12.177a.25.25 0 0 1 0-.354l9.263-9.262A1.5 1.5 0 0 0 21.439.44L12.177 9.7a.25.25 0 0 1-.354 0L2.561.44A1.5 1.5 0 0 0 .439 2.561L9.7 11.823a.25.25 0 0 1 0 .354Z\"\n        />\n      </svg>\n    </button>\n  </ng-template>`,\n  styleUrls: ['./close.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloseComponent {\n  @Input() size: 'small' | 'large' | 'xlarge' | '' = '';\n  @Input() isFaux: boolean = false;\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  Output,\n  EventEmitter,\n} from '@angular/core';\n\n@Component({\n  selector: 'ag-choice-input',\n  template: `<fieldset [ngClass]=\"fieldsetClass()\">\n    <legend [ngClass]=\"legendClasses()\">{{ legendLabel }}</legend>\n    <ng-container *ngFor=\"let option of options\">\n      <label\n        [attr.disabled]=\"isDisabled || disabledOptions?.includes(option.value)\"\n        [ngClass]=\"labelClasses()\"\n      >\n        <input\n          [ngClass]=\"inputClasses()\"\n          [type]=\"type\"\n          [name]=\"option.name\"\n          [value]=\"option.value\"\n          [disabled]=\"isDisabled || disabledOptions?.includes(option.value)\"\n          [checked]=\"checkedOptions?.includes(option.value) || false\"\n          (change)=\"this.handleChange($event)\"\n        />\n        <span [ngClass]=\"labelSpanClasses()\">{{ option.label }}</span>\n      </label>\n    </ng-container>\n  </fieldset>`,\n  styleUrls: ['./choice-input.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ChoiceInputComponent {\n  @Input() isInline?: boolean = false;\n  @Input() isFieldset?: boolean = true;\n  @Input() isSkinned?: boolean = true;\n  @Input() isDisabled?: boolean = false;\n  @Input() options?: any[] = [];\n  @Input() disabledOptions?: string[];\n\n  private _checkedOptions: any[] = [];\n  get checkedOptions(): any[] {\n    return this._checkedOptions;\n  }\n  @Input()\n  set checkedOptions(val: any[]) {\n    this._checkedOptions = val;\n  }\n\n  @Input() css?: string;\n  @Input() legendLabel = '';\n  @Input() type: 'radio' | 'checkbox' = 'checkbox';\n  // Medium is default so we just use empty string\n  @Input() size: 'small' | 'large' | '' = '';\n  // TODO type this\n  @Output() selected = new EventEmitter<any>();\n\n  labelSpanClasses() {\n    let klasses = [\n      this.type ? `${this.type}-label` : '',\n      this.size ? `${this.type}-label-${this.size}` : '',\n    ];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n  handleChange(ev: Event) {\n    const el = ev.target as HTMLInputElement;\n    const value = el.value;\n    if (this.type === 'checkbox') {\n      let checkedItemsUpdated;\n      if (this.checkedOptions?.includes(value)) {\n        checkedItemsUpdated = this.checkedOptions?.filter(\n          (item) => item !== value\n        );\n        this.checkedOptions = checkedItemsUpdated;\n      } else {\n        checkedItemsUpdated = [...this.checkedOptions, value];\n        this.checkedOptions = checkedItemsUpdated;\n      }\n      this.selected.emit(checkedItemsUpdated);\n    } else {\n      // Type is radio. We ignore if they're trying to check the currently checked\n      if (this.checkedOptions?.includes(value)) {\n        // Since you can only have one checked radio at a time, we simply\n        // set to the new radio to be checked\n        this.checkedOptions = [value];\n        this.selected.emit(this.checkedOptions);\n      }\n    }\n  }\n  inputClasses() {\n    let inputKlasses = [\n      `${this.type}`,\n      this.size ? `${this.size}` : '',\n      this.isDisabled ? 'disabled' : '',\n    ];\n    inputKlasses = inputKlasses.filter((klass) => klass.length);\n    return inputKlasses.join(' ');\n  }\n  fieldsetClass() {\n    // If consumer sets is skinned to false we don't style the fieldset\n    const skin = this.isSkinned ? `${this.type}-group` : '';\n\n    // we only add the fieldset class for large (not small) e.g. radio|checkbox-group-large\n    const sizeSkin =\n      this.isSkinned && this.size === 'large'\n        ? `${this.type}-group-${this.size}`\n        : '';\n\n    const overrides = this.css ? `${this.css}` : '';\n    const klasses = [\n      overrides ? overrides : '',\n      skin,\n      sizeSkin,\n      this.isFieldset === false ? `${this.type}-group-hidden` : '',\n    ];\n    return klasses.filter((klass) => klass.length);\n  }\n  legendClasses() {\n    const skin = this.isSkinned ? `${this.type}-legend` : '';\n    const klasses = [\n      skin,\n      // .screenreader-only is expected to be globally available via common.min.css\n      this.isFieldset === false ? 'screenreader-only' : null,\n    ];\n    return klasses.join(' ');\n  }\n  labelClasses() {\n    let klasses = [\n      this.type ? `${this.type}-label-wrap` : '',\n      this.isInline ? `${this.type}-label-wrap-inline` : '',\n    ];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n}\n","import { TemplateRef, ContentChild, Input, ChangeDetectionStrategy, Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ClassNamesShape, closeButtonPositionType, roleType } from 'angular-a11y-dialog';\n\n@Component({\n  selector: 'ag-dialog',\n  template: `<angular-a11y-dialog\n    *ngIf=\"mounted | async\"\n    [id]=\"id\"\n    [appRoot]=\"appRoot\"\n    [dialogRoot]=\"dialogRoot\"\n    [classNames]=\"classNames\"\n    [role]=\"role\"\n    [titleId]=\"titleId\"\n    [closeButtonLabel]=\"closeButtonLabel\"\n    [closeButtonPosition]=\"closeButtonPosition\"\n  >\n    <ng-template #closeButtonContentFirst>\n      <ng-container *ngTemplateOutlet=\"closeButtonFirstTemplate\"></ng-container>\n    </ng-template>\n    <ng-template #title>\n      <ng-container *ngTemplateOutlet=\"titleTemplate\"></ng-container>\n    </ng-template>\n    <ng-template #mainContent>\n      <ng-container *ngTemplateOutlet=\"mainTemplate\"></ng-container>\n    </ng-template>\n    <ng-template #closeButtonContentLast>\n      <ng-container *ngTemplateOutlet=\"closeButtonLastTemplate\"></ng-container>\n    </ng-template>\n  </angular-a11y-dialog>`,\n  styleUrls: ['./dialog.css', './close.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DialogComponent implements OnInit {\n  mounted = new BehaviorSubject<boolean>(false)\n\n  @Input() titleTemplate!: TemplateRef<HTMLElement>;\n  @ContentChild('title')\n  public titleContent: any;\n\n  @ContentChild('mainContent', { read: TemplateRef }) public main: any;\n  @Input() mainTemplate!: TemplateRef<HTMLElement>;\n\n  @Input() closeButtonFirstTemplate!: TemplateRef<HTMLElement>;\n  @ContentChild('closeButtonContentFirst')\n  public closeButtonFirst: any;\n\n  @Input() closeButtonLastTemplate!: TemplateRef<HTMLElement>;\n  @ContentChild('closeButtonContentLast')\n  public closeButtonLast: any;\n\n  @Input() id!: string;\n  @Input() appRoot?: string;\n  @Input() dialogRoot?: string;\n  @Input() role: roleType = 'dialog';\n  @Input() titleId?: string;\n  @Input() closeButtonLabel = 'Close button';\n  @Input() closeButtonPosition: closeButtonPositionType = 'first';\n  /**\n   * Default dialog global css classes to apply. Note this currently requires\n   * ViewEncapsulation.none as a11y-dialog is outside of Angular once classes\n   * are applied to the component.\n   * \n   * Otherwise, these are fully overridable by the consumer; just be aware that\n   * since a11y-dialog applies these classes they'll need to be in global scope.\n   */\n  @Input() classNames: ClassNamesShape = {\n    container: 'dialog',\n    document: 'dialog-content',\n    overlay: 'dialog-overlay',\n    title: 'h3 mbe16',\n    // Borrows .close-button (from close.css) as it gives us the transparent\n    // style plus the a11y focus ring we want applied to dialog's close button\n    closeButton: 'dialog-close close-button',\n  };\n\n  /**\n   * Animates the dialog content by fading in. Set to false to disable.\n   */\n  @Input() isAnimationFadeIn?: boolean;\n\n  /**\n  * Animates the dialog content by sliding up. Set to false to disable.\n  */\n  @Input() isAnimationSlideUp?: boolean;\n\n  ngOnInit() {\n    let dialogDocumentClasses = this.classNames.document ? [this.classNames.document] : [];\n    if (this.isAnimationFadeIn && this.isAnimationSlideUp) {\n      // Cannot use two separate CSS classes with animation: foo, bar\n      // as the later class will overwrite the first one (so here we've combined)\n      dialogDocumentClasses.push('dialog-slide-up-fade-in');\n    } else if (this.isAnimationFadeIn) {\n      dialogDocumentClasses.push('dialog-fade-in');\n    } else if (this.isAnimationSlideUp) {\n      dialogDocumentClasses.push('dialog-slide-up');\n    }\n    this.classNames.document = dialogDocumentClasses.filter((cls) => cls).join(' ');\n    this.mounted.next(true);\n  }\n}\n","import { Input, ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'ag-disclose',\n  template: `<details class=\"disclose\" [class.disclose-bg]=\"isBackground\" [attr.open]=\"isOpen || null\">\n    <summary class=\"disclose-title\">{{title}}</summary>\n    <div class=\"disclose-panel\">\n      <ng-content></ng-content>\n    </div>\n  </details>`,\n  styleUrls: ['./disclose.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DiscloseComponent {\n\n  @Input() title = \"\";\n  // The <details> open attribute indicates whether the details content will be\n  // displayed on page load or not.\n  @Input() isOpen = false;\n  @Input() isBackground = false;\n}\n","import { Input, ChangeDetectionStrategy, HostBinding, Component } from '@angular/core';\n\n@Component({\n  selector: 'ag-divider',\n  template: `<div [class]=\"dividerClasses\">\n    <div *ngIf=\"hasContent\" class=\"divider-content\">\n      <ng-content></ng-content>\n    </div>\n  </div>`,\n  styleUrls: ['./divider.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DividerComponent {\n  @Input() hasContent?: boolean = false;\n  /**\n   * For Angular, we need to conditionally add the .flex class to the host\n   * if we're in vertical orientation so that our .divider-vertical classes\n   * are direct children of a flex container since .direct-vertical has:\n   * height: auto; flex-direction: column; align-self: stretch;\n   * https://stackoverflow.com/a/39161705\n   */\n  @HostBinding('class.flex') @Input() isVertical?: boolean = false;\n  @Input() justify?: 'start' | 'end' | '';\n  @Input() type?: 'info' | 'success' | 'error' | 'warning' | '';\n  @Input() size?: 'small' | 'large' | 'xlarge' | '';\n  get dividerClasses() {\n    return [\n      'divider',\n      this.isVertical ? 'divider-vertical' : '',\n      this.type ? `divider-${this.type}` : '',\n      this.size ? `divider-${this.size}` : '',\n      this.justify ? `divider-justify-${this.justify}` : '',\n    ]\n      .filter((c) => c)\n      .join(' ');\n  }\n}\n","import { Input, ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'ag-empty-state-header',\n  template: `<ng-content></ng-content>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EmptyStateHeaderComponent { }\n\n@Component({\n  selector: 'ag-empty-state-body',\n  template: `<ng-content></ng-content>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EmptyStateBodyComponent { }\n\n@Component({\n  selector: 'ag-empty-state-footer',\n  template: `<div class=\"empty-action\">\n    <ng-content></ng-content>\n  </div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EmptyStateFooterComponent { }\n\n@Component({\n  selector: 'ag-empty-state',\n  template: `<div [class]=\"emptyClasses\">\n    <ng-content></ng-content>\n  </div>`,\n  styleUrls: ['./empty-state.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EmptyStateComponent {\n  @Input() isBordered?: boolean;\n  @Input() isRounded?: boolean;\n  get emptyClasses() {\n    return [\n      'empty',\n      this.isRounded ? 'empty-rounded' : '',\n      this.isBordered ? 'empty-bordered' : '',\n    ]\n      .filter((c) => c)\n      .join(' ');\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'ag-header-nav',\n  template: `<nav>\n    <div [ngClass]=\"classes\">\n      <ng-content></ng-content>\n    </div>\n  </nav>`,\n  styleUrls: ['./headernav.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeaderNavComponent {\n  @Input() css?: string;\n\n  public get classes(): string {\n    return ['header-nav', this.css ? `${this.css}` : '']\n      .filter((cl) => cl.length)\n      .join(' ');\n  }\n}\n\n@Component({\n  selector: 'ag-header-nav-item',\n  template: `<div [ngClass]=\"classes\"><ng-content></ng-content></div>`,\n  styleUrls: ['./headernavitem.css'],\n})\nexport class HeaderNavItemComponent {\n  @Input() css?: string;\n  public get classes(): string {\n    let klasses = ['header-nav-item', this.css ? `${this.css}` : ''];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n}\n\n@Component({\n  selector: 'ag-header',\n  template: `<header [ngClass]=\"classes\">\n    <div [ngClass]=\"headerContentClasses\"><ng-content></ng-content></div>\n  </header> `,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input() css?: string;\n  @Input() isSkinned?: boolean = true;\n  @Input() isHeaderContentStart?: boolean = false;\n  @Input() isHeaderContentEnd?: boolean = false;\n  @Input() isSticky?: boolean;\n\n  public get classes(): string {\n    const baseClass = this.isSkinned ? 'header' : 'header-base';\n    const isStickyClass = this.isSticky ? 'header-sticky' : '';\n    const overrides = this.css ? `${this.css}` : '';\n    return [baseClass, isStickyClass, overrides]\n      .filter((c) => c.length)\n      .join(' ');\n  }\n\n  public get headerContentClasses(): string {\n    const baseClass = 'header-content';\n    const headerContentStart = this.isHeaderContentStart\n      ? 'header-content-start'\n      : '';\n    const headerContentEnd = this.isHeaderContentEnd\n      ? 'header-content-end'\n      : '';\n    return [baseClass, headerContentStart, headerContentEnd]\n      .filter((c) => c.length)\n      .join(' ');\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'ag-icon',\n  template: `<span [class]=\"iconClasses\"><ng-content></ng-content></span>`,\n  styleUrls: ['./icon.css', './icon.host.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // We receive SVG as Slot. But, we need width CSS applied to the SVG itself\n  // in Safari; so we need to enable global CSS e.g. `.icon-24 > svg { width: 24px }`\n  encapsulation: ViewEncapsulation.None,\n})\nexport class IconComponent {\n  @Input() size?: 14 | 16 | 18 | 20 | 24 | 32 | 36 | 40 | 48 | 56 | 64 = 18;\n  @Input() type: 'warning' | 'error' | 'success' | 'info' | '' = '';\n  @Input() isSkinned?: boolean = true;\n\n  get iconClasses() {\n    return [\n      'icon',\n      this.isSkinned ? 'icon' : 'icon-base',\n      this.size ? `icon-${this.size}` : '',\n      this.type ? `icon-${this.type}` : '',\n    ]\n      .filter((c) => c)\n      .join(' ');\n  }\n}\n","import {\n  Component,\n  HostBinding,\n  Input,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\n@Component({\n  selector: 'ag-input',\n  template: `<div className=\"w-100\">\n    <label [class]=\"labelClasses()\" [for]=\"id\">\n      {{ label }}\n    </label>\n    <ng-container *ngIf=\"type === 'textarea'; else noTextarea\">\n      <textarea\n        *ngIf=\"type === 'textarea'\"\n        [id]=\"id\"\n        [attr.name]=\"name ? name : null\"\n        [value]=\"defaultValue || ''\"\n        [disabled]=\"isDisabled\"\n        [class]=\"inputClasses()\"\n        [placeholder]=\"placeholder ? placeholder : ''\"\n        [attr.rows]=\"rows\"\n        [attr.cols]=\"cols\"\n        (change)=\"(handleChange)\"\n        (focus)=\"(handleFocus)\"\n        (blur)=\"(handleBlur)\"\n      ></textarea>\n    </ng-container>\n    <ng-template #noTextarea>\n      <div\n        class=\"input-addon-container\"\n        *ngIf=\"hasLeftAddon || hasRightAddon; else inputOnly\"\n      >\n        <ng-content select=\"[addOnLeft]\"></ng-content>\n        <input\n          [id]=\"id\"\n          [attr.name]=\"name ? name : null\"\n          [value]=\"defaultValue || ''\"\n          [type]=\"type\"\n          [disabled]=\"isDisabled\"\n          [class]=\"inputClasses()\"\n          [placeholder]=\"placeholder ? placeholder : ''\"\n          (change)=\"(handleChange)\"\n          (focus)=\"(handleFocus)\"\n          (blur)=\"(handleBlur)\"\n        />\n        <ng-content select=\"[addOnRight]\"></ng-content>\n      </div>\n      <ng-template #inputOnly>\n        <input\n          [id]=\"id\"\n          [attr.name]=\"name ? name : null\"\n          [value]=\"defaultValue || ''\"\n          [type]=\"type\"\n          [disabled]=\"isDisabled\"\n          [class]=\"inputClasses()\"\n          [placeholder]=\"placeholder ? placeholder : ''\"\n          (change)=\"(handleChange)\"\n          (focus)=\"(handleFocus)\"\n          (blur)=\"(handleBlur)\"\n        />\n      </ng-template>\n    </ng-template>\n    <span\n      *ngIf=\"isInvalid; else helpHint\"\n      [class]=\"invalidClasses()\"\n      role=\"status\"\n      aria-live=\"polite\"\n    >\n      {{ invalidText }}\n    </span>\n    <ng-template #helpHint>\n      <span [class]=\"helpClasses()\" role=\"status\" aria-live=\"polite\">\n        {{ helpText }}\n      </span>\n    </ng-template>\n  </div>`,\n  styleUrls: ['./input.css', './inputaddon-hack.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InputComponent {\n  // a11y duplicate ID unless we bind the host to externalId and delete\n  // that value before it's added to the DOM. Maybe there's a better way?\n  // https://coryrylan.com/blog/prevent-attribute-reflection-in-angular\n  @HostBinding('attr.id') externalId: string | null = '';\n  @Input()\n  set id(value: string) {\n    this._ID = value;\n    this.externalId = null;\n  }\n  get id() {\n    return this._ID;\n  }\n  private _ID: string = '';\n\n  @Input() helpText?: string = '';\n  @Input() invalidText?: string = '';\n  @Input() isInvalid?: boolean = false;\n  @Input() isSkinned?: boolean = true;\n  @Input() isRounded?: boolean = false;\n  @Input() isUnderlined?: boolean = false;\n  @Input() isInline?: boolean = false;\n  @Input() isDisabled?: boolean = false;\n  @Input() hasLeftAddon?: boolean = false;\n  @Input() hasRightAddon?: boolean = false;\n  @Input() isUnderlinedWithBackground?: boolean = false;\n  @Input() name?: string;\n  @Input() label!: string;\n  @Input() labelCss?: string;\n  @Input() css?: string;\n  @Input() placeholder?: string;\n  @Input() defaultValue?: string;\n  @Input() size?: 'small' | 'large' | '' = '';\n  @Input() type!:\n    | 'text'\n    | 'password'\n    | 'email'\n    | 'number'\n    | 'url'\n    | 'tel'\n    | 'search'\n    | 'textarea';\n  // It appears we can't have arbitrary props in Angular and they all have to be defined\n  // as an @Input. React has ...rest, Vue has v-bind=\"$attrs\", Svelte has  {...$$restProps} ¯\\_(ツ)_/¯\n  // https://github.com/angular/angular/issues/14545\n  @Input() rows?: number;\n  @Input() cols?: number;\n\n  helpClasses() {\n    const klasses = [\n      !this.size ? 'field-help' : '',\n      this.size ? `field-help-${this.size}` : '',\n    ];\n    return klasses.filter((klass) => klass.length).join(' ');\n  }\n  invalidClasses() {\n    const klasses = [\n      !this.size ? 'field-error' : '',\n      this.size ? `field-error-${this.size}` : '',\n    ];\n    return klasses.filter((klass) => klass.length).join(' ');\n  }\n  labelClasses() {\n    const labelKlasses = [\n      'label',\n      this.isInvalid ? 'label-error' : '',\n      this.isInline ? 'label-inline' : '',\n      this.size ? `label-${this.size}` : '',\n      this.labelCss ? this.labelCss : '',\n    ];\n    return labelKlasses.filter((klass) => klass.length).join(' ');\n  }\n  inputClasses() {\n    let klasses = [\n      this.isSkinned ? 'input' : 'input-base',\n      this.isRounded ? 'input-rounded' : '',\n      this.isUnderlined ? 'input-underlined' : '',\n      this.isDisabled ? 'disabled' : '',\n      this.isInline ? 'input-inline' : '',\n      this.hasLeftAddon ? 'input-has-left-addon' : '',\n      this.hasRightAddon ? 'input-has-right-addon' : '',\n      this.isInvalid ? 'input-error' : '',\n      this.isUnderlinedWithBackground ? 'input-underlined-bg' : '',\n      this.css ? `${this.css}` : '',\n      this.size ? `input-${this.size}` : '',\n    ];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n  handleChange(ev: Event) {\n    console.log('handleChange not yet implemented...');\n  }\n  handleFocus(ev: Event) {\n    console.log('handleFocus not yet implemented...');\n  }\n  handleBlur(ev: Event) {\n    console.log('handleBlur not yet implemented...');\n  }\n}\n","import { Input, ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'ag-loader',\n  template: `<div [class]=\"loaderClasses\" role=\"status\" attr.aria-live=\"polite\" [attr.aria-busy]=\"true\">\n    <span class=\"screenreader-only\">{{ariaLabel}}</span>\n  </div>`,\n  styleUrls: ['./loader.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoaderComponent {\n  @Input() size: 'small' | 'large' | '' = '';\n  @Input() ariaLabel: string = 'Loading…';\n\n  public get loaderClasses() {\n    return [\n      'loader',\n      `loader-${this.size}`,\n    ].filter((cl) => cl).join(' ');\n  }\n}\n","import {\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  Component,\n} from '@angular/core';\n\nexport interface NavigationLabels {\n  first: string;\n  previous: string;\n  next: string;\n  last: string;\n}\n\n@Component({\n  selector: 'ag-pagination',\n  template: `<nav\n    [class]=\"paginationContainerClasses\"\n    [attr.aria-label]=\"ariaLabel\"\n  >\n    <ul [class]=\"paginationClasses\">\n      <li *ngIf=\"isFirstLast\" [class]=\"paginationItemFirstClasses\">\n        <button\n          type=\"button\"\n          [class]=\"paginationButtonClass\"\n          (click)=\"onFirst()\"\n          [disabled]=\"isOnFirst()\"\n          [attr.aria-disabled]=\"isOnFirst()\"\n          aria-label=\"Goto page 1\"\n        >\n          {{ firstLabel() }}\n        </button>\n      </li>\n      <li [class]=\"paginationItemFirstClasses\">\n        <button\n          type=\"button\"\n          [class]=\"paginationButtonClass\"\n          (click)=\"onPrevious()\"\n          aria-label=\"Goto previous page\"\n          [attr.aria-disabled]=\"isOnFirst()\"\n          [disabled]=\"isOnFirst()\"\n        >\n          {{ previousLabel() }}\n        </button>\n      </li>\n      <li\n        *ngFor=\"let page of pages; index as i\"\n        [class]=\"paginationItemClassesForPage(page)\"\n      >\n        <button\n          *ngIf=\"page === current\"\n          type=\"button\"\n          [class]=\"paginationButtonClass\"\n          (click)=\"handleClick(page)\"\n          aria-current=\"page\"\n          [attr.aria-label]=\"ariaForCurrentPage(page)\"\n        >\n          {{ page }}\n        </button>\n        <span *ngIf=\"page === '...'; else notGap\">{{ page }}</span>\n        <ng-template #notGap>\n          <button\n            *ngIf=\"page !== current\"\n            type=\"button\"\n            [class]=\"paginationButtonClass\"\n            (click)=\"handleClick(page)\"\n            [attr.aria-label]=\"'Goto page ' + page\"\n          >\n            {{ page }}\n          </button>\n        </ng-template>\n      </li>\n      <li [class]=\"paginationItemLastClasses\">\n        <button\n          type=\"button\"\n          [class]=\"paginationButtonClass\"\n          aria-label=\"Goto next page\"\n          [disabled]=\"isOnLast()\"\n          [attr.aria-disabled]=\"isOnLast()\"\n          (click)=\"onNext()\"\n        >\n          {{ nextLabel() }}\n        </button>\n      </li>\n      <li [class]=\"paginationItemLastClasses\">\n        <button\n          type=\"button\"\n          [class]=\"paginationButtonClass\"\n          (click)=\"onLast()\"\n          [disabled]=\"isOnLast()\"\n          [attr.aria-disabled]=\"isOnLast()\"\n          aria-label=\"Goto last page\"\n        >\n          {{ lastLabel() }}\n        </button>\n      </li>\n    </ul>\n  </nav> `,\n  styleUrls: ['./pagination.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent {\n  @Input() justify?: 'start' | 'center' | 'end' | '' = '';\n  @Input() ariaLabel?: string = 'Pagination';\n  @Input() current: number = 1;\n  @Input() pages: any[] = [];\n  @Input() isBordered?: boolean = false;\n  @Input() isFirstLast?: boolean = true;\n  @Input() navigationLabels?: NavigationLabels = {\n    first: 'First',\n    last: 'Last',\n    previous: 'Previous',\n    next: 'Next',\n  };\n\n  @Output() onPageChange: EventEmitter<number> = new EventEmitter<number>();\n\n  public onFirst(): void {\n    this.onPageChange.emit(1);\n  }\n  public onPrevious(): void {\n    this.onPageChange.emit(this.current - 1);\n  }\n  public onNext(): void {\n    this.onPageChange.emit(this.current + 1);\n  }\n  public onLast(): void {\n    this.onPageChange.emit(this.getLastPageNumber());\n  }\n\n  handleClick(page: number): void {\n    this.onPageChange.emit(page);\n  }\n\n  isOnFirst() {\n    return this.current === 1;\n  }\n\n  getLastPageNumber() {\n    return this.pages[this.pages.length - 1];\n  }\n\n  isOnLast() {\n    return this.current === this.getLastPageNumber();\n  }\n\n  get paginationContainerClasses() {\n    return [\n      'pagination-container',\n      !!this.justify ? `pagination-${this.justify}` : '',\n    ]\n      .filter((cl) => cl)\n      .join(' ');\n  }\n  get paginationClasses() {\n    return ['pagination', !!this.isBordered ? 'pagination-bordered' : '']\n      .filter((cl) => cl)\n      .join(' ');\n  }\n  get paginationItemFirstClasses() {\n    return [\n      'pagination-item',\n      this.isOnFirst() ? 'pagination-item-disabled' : '',\n    ]\n      .filter((cl) => cl)\n      .join(' ');\n  }\n  get paginationItemLastClasses() {\n    return [\n      'pagination-item',\n      this.isOnLast() ? 'pagination-item-disabled' : '',\n    ]\n      .filter((cl) => cl)\n      .join(' ');\n  }\n  get paginationButtonClass() {\n    return 'pagination-button';\n  }\n\n  paginationItemClassesForPage(page: number | string) {\n    return [\n      'pagination-item',\n      page === this.current ? 'pagination-item-active' : '',\n      page === '...' ? 'pagination-item-gap' : '',\n    ]\n      .filter((cl) => cl)\n      .join(' ');\n  }\n\n  ariaForCurrentPage(page: number) {\n    return `Page ${page},  current page`;\n  }\n  firstLabel() {\n    return `${String.fromCharCode(171)} ${this.navigationLabels?.first}`;\n  }\n  previousLabel() {\n    return `${String.fromCharCode(8249)} ${this.navigationLabels?.previous}`;\n  }\n  nextLabel() {\n    return `${this.navigationLabels?.next} ${String.fromCharCode(8250)}`;\n  }\n  lastLabel() {\n    return `${this.navigationLabels?.last} ${String.fromCharCode(187)}`;\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n@Component({\n  selector: 'ag-progress',\n  template: `<progress [ngClass]=\"classes\" [attr.value]=\"value\" [attr.max]=\"max\"></progress>`,\n  styleUrls: ['./progress.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class ProgressComponent {\n  @Input() value: number = 0;\n  @Input() max: number = 100;\n  @Input() css?: string;\n  public get classes(): string {\n    console.log(this)\n    let klasses = ['progress', this.css?.length ? `${this.css}` : '']\n    klasses = klasses.filter((klass) => klass.length)\n    return klasses.join(' ')\n  }\n}\n","import { Input, Output, ChangeDetectionStrategy, Component, EventEmitter } from '@angular/core';\nexport interface SelectOptions {\n  value: string,\n  label: string,\n}\n\n@Component({\n  selector: 'ag-select',\n  template: `<label class=\"screenreader-only\" [attr.for]=\"uniqueId\">{{labelCopy}}</label>\n  <select\n    [id]=\"uniqueId\"\n    [name]=\"name\"\n    [ngClass]=\"selectClasses()\"\n    [disabled]=\"isDisabled\"\n    [multiple]=\"isMultiple\"\n    [size]=\"isMultiple && multipleSize\"\n    (change)=\"changeSelection($event)\"\n  >\n    <option *ngIf=\"showDefaultOption()\" [value]=\"null\" disabled selected> {{ defaultOptionLabel }}</option>\n    <option *ngFor=\"let option of options\" [value]=\"option.value\">\n      {{ option.label }}\n    </option>\n  </select>`,\n  styleUrls: ['./select.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectComponent {\n  private selected = '';\n\n  @Input() uniqueId!: string;\n  @Input() labelCopy!: string;\n  @Input() defaultOptionLabel?: string = \"Please select an option\";\n  @Input() name!: string;\n  @Input() options!: SelectOptions[];\n  @Input() isDisabled?: boolean = false;\n  @Input() isMultiple?: boolean = false;\n  @Input() multipleSize?: number = 1;\n  @Input() size?: 'small' | 'large' | '' = '';\n\n  @Output()\n  changed = new EventEmitter();\n\n  showDefaultOption() {\n    return !this.isMultiple;\n  }\n\n  changeSelection(ev: Event) {\n    const option = ev.target as HTMLOptionElement;\n    this.selected = option.value;\n    this.changed.emit(this.selected);\n  }\n\n  selectClasses() {\n    return [\n      'select',\n      this.size ? `select-${this.size}` : ''\n    ].filter(c => c).join(' ');\n  }\n}\n","import { Input, ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'ag-spinner',\n  template: `<div [class]=\"spinnerClasses\" role=\"status\" attr.aria-live=\"polite\" [attr.aria-busy]=\"true\">\n    <span class=\"screenreader-only\">{{ariaLabel}}</span>\n  </div>`,\n  styleUrls: ['./spinner.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SpinnerComponent {\n  @Input() size: 'small' | 'large' | 'xlarge' | '' = '';\n  @Input() ariaLabel: string = 'Loading…';\n\n  public get spinnerClasses() {\n    return [\n      'spinner',\n      `spinner-${this.size}`,\n    ].filter((cl) => cl).join(' ');\n  }\n}\n","import { Component, EventEmitter, Input, ChangeDetectionStrategy, Output } from '@angular/core';\n\n@Component({\n  selector: 'ag-switch',\n  template: `<label [ngClass]=\"switchContainer()\">\n    <span *ngIf=\"labelPosition === 'left'\" class=\"switch-label\">{{\n      label\n    }}</span>\n    <input\n      type=\"checkbox\"\n      [checked]=\"isChecked\"\n      class=\"switch-input\"\n      [disabled]=\"isDisabled\"\n      role=\"switch\"\n      (change)=\"toggleChecked($event)\"\n    />\n    <span [ngClass]=\"switchSpan()\" aria-hidden=\"true\"></span>\n    <span *ngIf=\"labelPosition === 'right'\" class=\"switch-label\">{{\n      label\n    }}</span>\n  </label>`,\n  styleUrls: ['./switch.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SwitchComponent {\n  @Input() label!: string;\n  @Input() css?: string;\n  @Input() labelPosition = 'left';\n  @Input() isDisabled?: boolean = false;\n  @Input() isAction?: boolean = false;\n  @Input() isBordered?: boolean = false;\n  @Input() size? = '';\n\n  private switchChecked!: boolean;\n  get isChecked(): boolean {\n    return this.switchChecked;\n  }\n\n  @Input()\n  set isChecked(val: boolean) {\n    this.switchChecked = val;\n  }\n\n  @Output() selected = new EventEmitter<boolean>();\n\n  toggleChecked(ev: Event) {\n    const el = ev.target as HTMLInputElement;\n    if (el.getAttribute('aria-checked') == 'true') {\n      el.setAttribute('aria-checked', 'false');\n      this.switchChecked = false;\n    } else {\n      el.setAttribute('aria-checked', 'true');\n      this.switchChecked = true;\n    }\n    this.selected.emit(this.switchChecked);\n  }\n  switchContainer() {\n    let klasses = [\n      'switch-container',\n      this.css ? this.css : '',\n      this.labelPosition === 'right' ? 'switch-right' : '',\n      this.isDisabled ? 'disabled' : '',\n    ];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n  switchSpan() {\n    let klasses = [\n      'switch',\n      this.isBordered ? 'switch-border' : '',\n      this.isAction ? 'switch-action' : '',\n      this.size ? `switch-${this.size}` : '',\n    ];\n    klasses = klasses.filter((klass) => klass.length);\n    return klasses.join(' ');\n  }\n}\n","import { Input, ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'ag-tag',\n  template: `<span [class]=\"tagClasses\"><ng-content></ng-content></span>`,\n  styleUrls: ['./tag.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TagComponent {\n  @Input() type: 'warning' | 'error' | 'info' | 'success' | '' = '';\n  @Input() shape: 'pill' | 'round' | 'circle' | '' = '';\n  @Input() isUppercase?: boolean = false;\n\n  get tagClasses() {\n    return [\n      'tag',\n      this.type ? `tag-${this.type}` : '',\n      this.shape ? `tag-${this.shape}` : '',\n      this.isUppercase ? 'tag-upper' : '',\n    ]\n      .filter((c) => c)\n      .join(' ');\n  }\n}\n","import { Component, Input } from '@angular/core';\n@Component({\n  selector: 'ag-tab-panel',\n  styleUrls: ['./tabs.css'],\n  template: `<div [id]=\"panelId\" [hidden]=\"!isActive\" role=\"tabpanel\">\n    <ng-content></ng-content>\n  </div>`,\n})\nexport class TabPanelComponent {\n  private _tabButtonTitle = '';\n  @Input()\n  set tabButtonTitle(t: string) {\n    this._tabButtonTitle = t;\n  }\n  get tabButtonTitle() {\n    return this._tabButtonTitle;\n  }\n  @Input() isActive = false;\n  @Input() panelId!: string;\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  QueryList,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  TemplateRef,\n  ViewChildren\n} from '@angular/core';\nimport { TabPanelComponent } from './tab-panel.component';\n@Component({\n  selector: 'ag-tabs',\n  template: `\n    <div class=\"tabs\" [class.tabs-vertical]=\"isVerticalOrientation === true\">\n      <div\n        [class.tab-list]=\"isSkinned === true\"\n        [class.tab-list-base]=\"isSkinned === false\"\n        [class.tab-borderless]=\"isBorderless === true\"\n        role=\"tablist\"\n        aria-label=\"Tabs\"\n      >\n        <div *ngFor=\"let panel of tabPanels; index as i\"\n          (click)=\"selectPanel(panel)\"\n          (keydown)=\"handleKeyDown($event, i)\"\n        >\n          <ng-template #defaultTabButton>\n            <button\n              #tabButton\n              role=\"tab\"\n              class=\"tab-item tab-button\"\n              [class.active]=\"panel.isActive\"\n              [attr.disabled]=\"\n                isDisabled || disabledOptions?.includes(panel.tabButtonTitle)\n                  ? true\n                  : null\n              \"\n              [class.tab-button-large]=\"size === 'large'\"\n              [class.tab-button-xlarge]=\"size === 'xlarge'\"\n              [attr.aria-controls]=\"panel.panelId\"\n              [attr.aria-selected]=\"panel.isActive\"\n              [attr.tab-index]=\"panel.isActive ? 0 : -1\"\n            >\n              {{ panel.tabButtonTitle }}\n            </button>\n          </ng-template>\n          <ng-container\n            [ngTemplateOutlet]=\"tabButtonTemplate ? tabButtonTemplate : defaultTabButton\"\n            [ngTemplateOutletContext]=\"{ $implicit: panel, index: i }\"\n          >\n          </ng-container>\n        </div>\n      </div>\n      <ng-content></ng-content>\n    </div>\n  `,\n  styleUrls: ['./tabs.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TabsComponent implements AfterContentInit {\n  @ContentChildren(TabPanelComponent) tabPanels!: QueryList<TabPanelComponent>;\n\n  // See https://blog.angular-university.io/angular-ng-template-ng-container-ngtemplateoutlet/#configurablecomponentswithtemplatepartialinputs\n  @Input()\n  public tabButtonTemplate?: TemplateRef<any>;\n\n  @Input() size?: string = '';\n  @Input() disabledOptions?: string[];\n  @Input() isDisabled?: boolean = false;\n  @Input() isSkinned?: boolean = true;\n  @Input() isBorderless?: boolean = false;\n  @Input() isVerticalOrientation?: boolean = false;\n\n  /**\n   * This is used to allow consumer to provide their own custom tab buttons like:\n   * <ng-template #tabButtonTemplate let-panel let-idx=\"index\">\n      <div style=\"{{idx > 0 ? 'margin-left: -1px' : undefined}}\">\n        <ag-button\n          type=\"faux\"\n          [isBordered]=\"true\"\n          mode=\"primary\"\n          role=\"tab\"\n          [attr.aria-selected]=\"panel.isActive\"\n          [attr.disabled]=\"\n            isDisabled || disabledOptions?.includes(panel.tabButtonTitle)\n              ? true\n              : null\n          \"\n          [class.active]=\"panel.isActive\"\n          [attr.aria-controls]=\"panel.panelId\"\n          [attr.aria-selected]=\"panel.isActive\"\n          [attr.tab-index]=\"panel.isActive ? 0 : -1\"\n        >\n          {{ panel.tabButtonTitle }}\n        </ag-button>\n      </div>\n    </ng-template>\n  */\n  @ViewChildren('tabButton') tabButtonRefs!: QueryList<ElementRef>;\n\n  @Output()\n  selectionChanged = new EventEmitter();\n\n  ngAfterContentInit() {\n    const activeTabs = this.tabPanels.filter((tab) => tab.isActive);\n    if (activeTabs.length === 0) {\n      this.selectPanel(this.tabPanels.first);\n    }\n  }\n\n  selectPanel(tabPanel: TabPanelComponent) {\n    // First deactivate all tabs, then select passed in tab\n    this.tabPanels.toArray().forEach((tab) => {\n      tab.isActive = false;\n    });\n    tabPanel.isActive = true;\n    this.selectionChanged.emit(tabPanel);\n  }\n\n  focusTab(index: number, direction?: string) {\n    console.log('focusTab called with index: ', index, ' and direction: ', direction);\n    let i = index;\n    if (direction === \"asc\") {\n      i += 1;\n    } else if (direction === \"desc\") {\n      i -= 1;\n    }\n    const tabPanelsArray = this.tabPanels.toArray();\n    // Circular navigation\n    //\n    // If we've went beyond \"start\" circle around to last\n    if (i < 0) {\n      i = tabPanelsArray.length - 1;\n    } else if (i >= tabPanelsArray.length) {\n      // We've went beyond \"last\" so circle around to first\n      i = 0;\n    }\n\n    const buttons = this.tabButtonRefs.toArray();\n    const nextTabRef = buttons[i];\n    const nextTab = nextTabRef ? nextTabRef.nativeElement : null;\n    if (nextTab) {\n      // Edge case: We hit a tab button that's been disabled. If so, we recurse, but\n      // only if we've been supplied a `direction`. Otherwise, nothing left to do.\n      if (nextTab.disabled && direction) {\n        // Retry with new `i` index going in same direction\n        this.focusTab(i, direction);\n      } else {\n        // Nominal case is to just focs next tab :)\n        nextTab.focus();\n      }\n    }\n  }\n\n  handleKeyDown(ev: KeyboardEvent, index: number): void {\n    switch (ev.key) {\n      case \"Up\": // These first cases are IEEdge :(\n      case \"ArrowUp\":\n        if (this.isVerticalOrientation) {\n          this.focusTab(index, \"desc\");\n        }\n        break;\n      case \"Down\":\n      case \"ArrowDown\":\n        if (this.isVerticalOrientation) {\n          this.focusTab(index, \"asc\");\n        }\n        break;\n      case \"Left\":\n      case \"ArrowLeft\":\n        if (!this.isVerticalOrientation) {\n          this.focusTab(index, \"desc\");\n        }\n        break;\n      case \"Right\":\n      case \"ArrowRight\":\n        if (!this.isVerticalOrientation) {\n          this.focusTab(index, \"asc\");\n        }\n        break;\n      case \"Home\":\n      case \"ArrowHome\":\n        this.focusTab(0);\n        break;\n      case \"End\":\n      case \"ArrowEnd\":\n        this.focusTab(this.tabPanels.toArray().length - 1);\n        break;\n      case \"Enter\":\n      case \"Space\":\n        this.focusTab(index);\n        this.selectPanel(this.tabPanels.toArray()[index]);\n        break;\n      default:\n        return;\n    }\n    ev.preventDefault();\n  }\n}\n","import {\n  Input,\n  ChangeDetectionStrategy,\n  Component,\n  TemplateRef,\n  OnInit,\n} from '@angular/core';\nimport { combineLatest, BehaviorSubject } from 'rxjs';\n\nexport interface TableHeaderCell {\n  label: string;\n  key: string;\n  sortable?: boolean;\n  width?: string;\n  /**\n   * Custom sorting `compareFunction` which will take the values from the\n   * two respective row cells being compared.\n   * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#description\n   */\n  sortFn?: (cellLeft: any, cellRight: any) => -1 | 0 | 1;\n}\n\n@Component({\n  selector: 'ag-table',\n  template: `<div [class]=\"tableResponsiveClasses\">\n    <table [class]=\"tableClasses\">\n      <caption [class]=\"captionClasses\">\n        {{\n          caption\n        }}\n      </caption>\n      <thead>\n        <tr>\n          <th\n            *ngFor=\"let headerCol of headers\"\n            [attr.aria-sort]=\"getSortDirectionFor(headerCol.key)\"\n            scope=\"col\"\n            [style.width]=\"headerCol.width ? headerCol.width : 'auto'\"\n          >\n            <div\n              class=\"table-header-container\"\n              *ngIf=\"headerCol.sortable; else unsortable\"\n            >\n              <span class=\"table-sort-label\">{{ headerCol.label }}</span>\n              <button\n                type=\"button\"\n                class=\"table-sort\"\n                (click)=\"handleSortClicked(headerCol.key)\"\n              >\n                <span class=\"screenreader-only\">{{ headerCol.label }}</span>\n                <span [class]=\"getSortingClassesFor(headerCol.key)\"></span>\n              </button>\n            </div>\n            <ng-template #unsortable>\n              {{ headerCol.label }}\n            </ng-template>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let row of rows$ | async; index as i\">\n          <td\n            *ngFor=\"\n              let col of row | keyvalue: preserveOriginalOrder;\n              index as cIndex\n            \"\n          >\n            <ng-template #defaultRow>\n              {{ getColByName(row, col.key) }}\n            </ng-template>\n            <ng-container\n              [ngTemplateOutlet]=\"\n                rowRenderTemplate ? rowRenderTemplate : defaultRow\n              \"\n              [ngTemplateOutletContext]=\"{\n                $implicit: getColByName(row, col.key),\n                index: cIndex\n              }\"\n            >\n            </ng-container>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>`,\n  styleUrls: ['./table.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableComponent implements OnInit {\n  /**\n   * If consumer passes rowRenderTemplate, we project into td cell's template outlet.\n   */\n  @Input()\n  public rowRenderTemplate?: TemplateRef<any>;\n\n  @Input() headers!: TableHeaderCell[];\n  @Input() rows!: any[];\n  @Input() caption!: string;\n  @Input() captionPosition?: 'top' | 'bottom' | 'end' | 'hidden' = 'hidden';\n  @Input() isUppercasedHeaders?: boolean = false;\n  @Input() isBordered?: boolean = false;\n  @Input() isBorderless?: boolean = false;\n  @Input() isStriped?: boolean = false;\n  @Input() isHoverable?: boolean = false;\n  @Input() isStacked?: boolean = false;\n  @Input() tableSize?: '' | 'small' | 'large' | 'xlarge' = '';\n  @Input() responsiveSize?: '' | 'small' | 'medium' | 'large' | 'xlarge';\n\n  /**\n   * This keeps our reactively sorted rows; reacts to changes made to\n   * sortingKey$ or direction$ below.\n   */\n  public rows$;\n  private sortingKey$ = new BehaviorSubject<string>('');\n  private direction$ = new BehaviorSubject<'none' | 'ascending' | 'descending'>(\n    'none'\n  );\n\n  constructor() {\n    this.rows$ = new BehaviorSubject<any[]>(this.rows);\n  }\n\n  /**\n   * Using keyvalue by default with sort our columns alphabetically and we\n   * want to preserve the original ordering of Object.keys(A_ROW_OBJECT)\n   * *ngFor=\"let col of row | keyvalue: preserveOriginalOrder;\n   */\n  preserveOriginalOrder = (a: any, b: any) => {\n    return a;\n  };\n\n  getColByName = (row: any, name: any) => {\n    return row[name];\n  };\n  /**\n   * This function first checks if there is a corresponding custom sort function\n   * that was supplied in a header cell with key\" of `sortingKey` named `.sortFn`\n   * per the API. If it finds, it will delegate to that for actual sort comparison.\n   * Otherwise, the function supplies its own fallback default (naive) sorting logic.\n   */\n  internalSort(rowLeft: any, rowRight: any) {\n    /**\n     * Pluck out our columns so we can compare.\n     */\n    let colLeft =\n      rowLeft[this.sortingKey$.value] === null ||\n        rowLeft[this.sortingKey$.value] === undefined\n        ? -Infinity\n        : rowLeft[this.sortingKey$.value];\n    let colRight =\n      rowRight[this.sortingKey$.value] === null ||\n        rowRight[this.sortingKey$.value] === undefined\n        ? -Infinity\n        : rowRight[this.sortingKey$.value];\n\n    /**\n     * Check if corresponding header cell has a custom sort method. If so,\n     * we use that. Otherwise, we proceed with our default sort implementation.\n     */\n    const headerWithCustomSortFunction = this.headers.find(\n      (h) => h.key === this.sortingKey$.value && !!h.sortFn\n    );\n    if (headerWithCustomSortFunction && headerWithCustomSortFunction.sortFn) {\n      return headerWithCustomSortFunction.sortFn(colLeft, colRight);\n    }\n\n    /**\n     * No custom sort method for the header cell, so we continue with our own fallback.\n     * Strings converted to lowercase; dollar currency etc. stripped (not yet i18n safe!)\n     */\n    colLeft =\n      typeof colLeft === 'string'\n        ? colLeft.toLowerCase().replace(/(^\\$|,)/g, '')\n        : colLeft;\n\n    colRight =\n      typeof colRight === 'string'\n        ? colRight.toLowerCase().replace(/(^\\$|,)/g, '')\n        : colRight;\n\n    /**\n     * If the raw value represents a number, explicitly set it to a Number\n     */\n    colLeft = !Number.isNaN(Number(colLeft)) ? Number(colLeft) : colLeft;\n    colRight = !Number.isNaN(Number(colRight)) ? Number(colRight) : colRight;\n\n    if (colLeft > colRight) {\n      return 1;\n    }\n    if (colLeft < colRight) {\n      return -1;\n    }\n    return 0;\n  }\n\n  // Just flips the sign of results of an ascending sort (internalSort)\n  descendingSort(row1: any, row2: any) {\n    return this.internalSort(row1, row2) * -1;\n  }\n\n  ngOnInit() {\n    /**\n     * Listens for any changes to our sorting key (which table header was last clicked), and\n     * the sort direction (asc, desc, none). Then sorts and places results in this.row$.next\n     */\n    combineLatest([this.sortingKey$, this.direction$]).subscribe((value) => {\n      let rows = [...this.rows];\n      const [_, direction] = value;\n      if (direction === 'ascending') {\n        rows.sort((a, b) => this.internalSort(a, b));\n      } else if (direction === 'descending') {\n        rows.sort((a, b) => this.descendingSort(a, b));\n      } else {\n        rows = [...this.rows];\n      }\n      this.rows$.next(rows);\n    });\n  }\n\n  handleSortClicked(headerKey: string) {\n    /**\n     * User's clicked a different header cell, so we change the sorting key\n     * and set the initial direction to 'none'\n     */\n    if (this.sortingKey$.value !== headerKey) {\n      this.direction$.next('none');\n      this.sortingKey$.next(headerKey);\n    }\n\n    switch (this.direction$.value) {\n      case 'ascending':\n        this.direction$.next('descending');\n        break;\n      case 'descending':\n        this.direction$.next('none');\n        break;\n      case 'none':\n        this.direction$.next('ascending');\n        break;\n      default:\n        /* eslint-disable-next-line no-console */\n        console.warn(\n          'Table sorting only supports directions: ascending | descending | none'\n        );\n    }\n  }\n\n  getSortingClassesFor(headerKey: string) {\n    // If it's the header currently being sorting on, add direction-based classes\n    if (this.sortingKey$.value === headerKey) {\n      return [\n        'icon-sort',\n        this.direction$.value !== 'none'\n          ? `icon-sort-${this.direction$.value}`\n          : '',\n      ]\n        .filter((c) => c.length)\n        .join(' ');\n    }\n    return 'icon-sort';\n  }\n\n  getSortDirectionFor(headerKey: string) {\n    if (this.sortingKey$.value !== headerKey) {\n      return 'none';\n    } else {\n      return this.direction$.value;\n    }\n  }\n\n  public get captionClasses() {\n    return [\n      this.captionPosition === 'hidden' ? 'screenreader-only' : '',\n      this.captionPosition !== 'hidden'\n        ? `caption-${this.captionPosition}`\n        : '',\n    ]\n      .filter((cl) => cl)\n      .join(' ');\n  }\n\n  public get tableResponsiveClasses(): string {\n    return this.responsiveSize\n      ? `table-responsive-${this.responsiveSize}`\n      : 'table-responsive';\n  }\n\n  public get tableClasses(): string {\n    return [\n      'table',\n      this.tableSize ? `table-${this.tableSize}` : '',\n      this.isUppercasedHeaders ? 'table-caps' : '',\n      this.isBordered ? 'table-bordered' : '',\n      this.isBorderless ? 'table-borderless' : '',\n      this.isStriped ? 'table-striped' : '',\n      this.isHoverable ? 'table-hoverable' : '',\n      this.isStacked ? 'table-stacked' : '',\n    ]\n      .filter((cl) => cl)\n      .join(' ');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AngularA11yDialogModule } from 'angular-a11y-dialog';\nimport { AlertComponent } from './alert.component';\nimport { AvatarComponent, AvatarGroupComponent } from './avatar.component';\nimport {\n  BreadcrumbComponent,\n  BreadcrumbItemComponent,\n} from './breadcrumb.component';\nimport { ButtonComponent } from './button.component';\nimport { ButtonGroupComponent } from './buttongroup.component';\nimport { CardComponent } from './card.component';\nimport { CloseComponent } from './close.component';\nimport { ChoiceInputComponent } from './choice-input.component';\nimport { DialogComponent } from './dialog.component';\nimport { DiscloseComponent } from './disclose.component';\nimport { DividerComponent } from './divider.component';\nimport {\n  EmptyStateComponent,\n  EmptyStateHeaderComponent,\n  EmptyStateBodyComponent,\n  EmptyStateFooterComponent,\n} from './empty-state.component';\nimport {\n  HeaderComponent,\n  HeaderNavComponent,\n  HeaderNavItemComponent,\n} from './header.component';\nimport { IconComponent } from './icon.component';\nimport { InputComponent } from './input.component';\nimport { LoaderComponent } from './loader.component';\nimport { PaginationComponent } from './pagination.component';\nimport { ProgressComponent } from './progress.component';\nimport { SelectComponent } from './select.component';\nimport { SpinnerComponent } from './spinner.component';\nimport { SwitchComponent } from './switch.component';\nimport { TagComponent } from './tag.component';\nimport { TabsComponent } from './tabs.component';\nimport { TableComponent } from './table.component';\nimport { TabPanelComponent } from './tab-panel.component';\n\n@NgModule({\n  imports: [CommonModule, AngularA11yDialogModule],\n  declarations: [\n    AlertComponent,\n    AvatarComponent,\n    AvatarGroupComponent,\n    BreadcrumbComponent,\n    BreadcrumbItemComponent,\n    ButtonComponent,\n    ButtonGroupComponent,\n    CardComponent,\n    ChoiceInputComponent,\n    CloseComponent,\n    DialogComponent,\n    DiscloseComponent,\n    DividerComponent,\n    EmptyStateComponent,\n    EmptyStateHeaderComponent,\n    EmptyStateBodyComponent,\n    EmptyStateFooterComponent,\n    HeaderComponent,\n    HeaderNavComponent,\n    HeaderNavItemComponent,\n    InputComponent,\n    IconComponent,\n    LoaderComponent,\n    PaginationComponent,\n    ProgressComponent,\n    SelectComponent,\n    SpinnerComponent,\n    SwitchComponent,\n    TagComponent,\n    TableComponent,\n    TabsComponent,\n    TabPanelComponent,\n  ],\n  exports: [\n    AlertComponent,\n    AvatarComponent,\n    AvatarGroupComponent,\n    BreadcrumbComponent,\n    BreadcrumbItemComponent,\n    ButtonComponent,\n    ButtonGroupComponent,\n    CardComponent,\n    ChoiceInputComponent,\n    CloseComponent,\n    DialogComponent,\n    DiscloseComponent,\n    DividerComponent,\n    EmptyStateComponent,\n    EmptyStateHeaderComponent,\n    EmptyStateBodyComponent,\n    EmptyStateFooterComponent,\n    HeaderComponent,\n    HeaderNavComponent,\n    HeaderNavItemComponent,\n    InputComponent,\n    IconComponent,\n    LoaderComponent,\n    PaginationComponent,\n    ProgressComponent,\n    SelectComponent,\n    SpinnerComponent,\n    SwitchComponent,\n    TagComponent,\n    TableComponent,\n    TabsComponent,\n    TabPanelComponent,\n  ],\n})\nexport class AgModule { }\n"],"names":[],"mappings":"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"}
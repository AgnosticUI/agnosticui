.alert-base,
.alert {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
}
.alert-end {
  justify-content: flex-end;
}
.alert-skin,
.alert {
  padding: var(--agnostic-side-padding);
  background: var(--agnostic-gray-light);
}

.alert-icon {
  color: var(--agnostic-gray-mid-dark);
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
  /* Ensures our icon doesn't flex grow or shrink */
  flex: 0 0 var(--fluid-24);
}

.alert-border-top {
  border-top: var(--fluid-8) solid var(--agnostic-gray-mid-dark);
}
.alert-border-left {
  border-left: var(--fluid-8) solid var(--agnostic-gray-mid-dark);
}
.alert-border-bottom {
  border-bottom: var(--fluid-8) solid var(--agnostic-gray-mid-dark);
}
.alert-border-right {
  border-right: var(--fluid-8) solid var(--agnostic-gray-mid-dark);
}

.alert-border-all {
  border: var(--fluid-2) solid var(--agnostic-gray-mid-dark);
}

.alert-rounded {
  border-radius: var(--agnostic-alert-radius, var(--agnostic-radius, 0.25rem));
}

.alert-warning {
  background: var(--agnostic-warning-light);
  color: var(--agnostic-primary-dark);
}
.alert-warning-icon {
  color: var(--agnostic-warning-border-accent);
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
  /* Ensures our icon doesn't flex grow or shrink */
  flex: 0 0 var(--fluid-24);
}
.alert-warning.alert-border-top {
  border-top-color: var(--agnostic-warning-border-accent);
}
.alert-warning.alert-border-left {
  border-left-color: var(--agnostic-warning-border-accent);
}
.alert-warning.alert-border-bottom {
  border-bottom-color: var(--agnostic-warning-border-accent);
}
.alert-warning.alert-border-right {
  border-right-color: var(--agnostic-warning-border-accent);
}
.alert-warning.alert-border-all {
  border: var(--fluid-2) solid var(--agnostic-warning-border);
}

.alert-info {
  background: var(--agnostic-primary-light);
  color: var(--agnostic-primary-dark);
}
.alert-info-icon {
  color: var(--agnostic-primary-dark);
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
  /* Ensures our icon doesn't flex grow or shrink */
  flex: 0 0 var(--fluid-24);
}

.alert-info.alert-border-top {
  border-top-color: var(--agnostic-primary-dark);
}
.alert-info.alert-border-left {
  border-left-color: var(--agnostic-primary-dark);
}
.alert-info.alert-border-bottom {
  border-bottom-color: var(--agnostic-primary-dark);
}
.alert-info.alert-border-right {
  border-right-color: var(--agnostic-primary-dark);
}
.alert-info.alert-border-all {
  border: var(--fluid-2) solid var(--agnostic-primary-border);
}

.alert-error {
  background: var(--agnostic-error-light);
  color: var(--agnostic-error-dark);
}
.alert-error-icon {
  color: var(--agnostic-error-dark);
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
  /* Ensures our icon doesn't flex grow or shrink */
  flex: 0 0 var(--fluid-24);
}
.alert-error.alert-border-top {
  border-top-color: var(--agnostic-error-dark);
}
.alert-error.alert-border-left {
  border-left-color: var(--agnostic-error-dark);
}
.alert-error.alert-border-bottom {
  border-bottom-color: var(--agnostic-error-dark);
}
.alert-error.alert-border-right {
  border-right-color: var(--agnostic-error-dark);
}
.alert-error.alert-border-all {
  border: var(--fluid-2) solid var(--agnostic-error-border);
}

.alert-success {
  background: var(--agnostic-action-light);
  color: var(--agnostic-action-from);
}
.alert-success-icon {
  color: var(--agnostic-ation-from);
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
  /* Ensures our icon doesn't flex grow or shrink */
  flex: 0 0 var(--fluid-24);
}
.alert-success.alert-border-top {
  border-top-color: var(--agnostic-action-from);
}
.alert-success.alert-border-left {
  border-left-color: var(--agnostic-action-from);
}
.alert-success.alert-border-bottom {
  border-bottom-color: var(--agnostic-action-from);
}
.alert-success.alert-border-right {
  border-right-color: var(--agnostic-action-from);
}
.alert-success.alert-border-all {
  border: var(--fluid-2) solid var(--agnostic-action-border);
}

/**
 * Button Groups
 */
.btn-group {
  display: inline-flex;
  flex-direction: row;
}

.btn-group > button {
  border-radius: var(--agnostic-btn-radius, var(--agnostic-radius, 0.25rem));
}
.btn-group > button:not(:last-child) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  -webkit-margin-end: -1px;
          margin-inline-end: -1px;
}
.btn-group > button:not(:first-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

/*
* Base Button Style
*
* Please note that we have two versions of this:
* `.btn` which encompasses both the base and skin styles
* `.btn-base` and `btn-skin`.
* The reason we've done this is to provide you with some convenience but
* also flexibility. Most will just want to apply `.btn`. However, if the
* base skin of the button does not work for you, another option is to only
* apply `.btn-base` and then set your own "button skin".
*/
.btn-base,
.btn {
  /* TODO test this fallback override syntax is correct */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  box-sizing: border-box;
  transition-property: all;
  transition-duration: var(--agnostic-timing-medium);
}

.btn-skin,
.btn {
  color: var(--agnostic-btn-font-color, var(--agnostic-dark));
  background-color: var(--agnostic-btn-bgcolor, var(--agnostic-gray-light));
  border-color: var(--agnostic-btn-bgcolor, var(--agnostic-gray-light));
  /* seems like a reasonable default as chrome picks `outset` which results in a weird 3d effect */
  border-style: solid;
  border-width: var(--agnostic-btn-border-size, 1px);
  font-family: var(--agnostic-btn-font-family, var(--agnostic-font-family));
  font-weight: var(--agnostic-btn-font-weight, 400);
  font-size: var(--agnostic-btn-font-size, 1rem);
  /* this can be overriden, but it might mess with the balance of the button heights across variants */
  line-height: var(--agnostic-line-height, 1.25rem);
  -webkit-padding-before: var(--agnostic-vertical-pad, 0.5rem);
          padding-block-start: var(--agnostic-vertical-pad, 0.5rem);
  -webkit-padding-after: var(--agnostic-vertical-pad, 0.5rem);
          padding-block-end: var(--agnostic-vertical-pad, 0.5rem);
  -webkit-padding-start: var(--agnostic-side-padding, 0.75rem);
          padding-inline-start: var(--agnostic-side-padding, 0.75rem);
  -webkit-padding-end: var(--agnostic-side-padding, 0.75rem);
          padding-inline-end: var(--agnostic-side-padding, 0.75rem);
  text-decoration: none;
  text-align: center;
  outline: none;
}

.btn:visited {
  color: var(--agnostic-btn-font-color, var(--agnostic-dark));
}

.btn:hover {
  opacity: 0.85;
  text-decoration: none;
}

.btn:active {
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.3);
  text-decoration: none;
  transition-duration: 0s;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
}

.btn:focus {
  box-shadow: 0 0 0 3px var(--agnostic-focus-ring-color);
  /* Needed for High Contrast mode */
  outline: 3px solid transparent;
  transition: box-shadow var(--agnostic-timing-fast) ease-out;
}

/*
* Disabled State
*
* The disabled state uses the class .disabled, is-disabled,
* and the form attribute disabled="disabled".
* The use of !important is only added because this is a state
* that must be applied to all buttons when in a disabled state.
*/
.btn.disabled,
.btn:disabled {
  top: 0 !important;
  background: var(--agnostic-btn-disabled-bg, var(--agnostic-gray-mid-dark)) !important;
  text-shadow: 0 1px 1px rgba(255, 255, 255, 1) !important;
  /* primary, secondary, natural, all look same when disabled; and we don't want to
  have an inadvertant looking blue primary border when disabled so it's transparent */
  border-color: transparent;
  color: var(--agnostic-btn-disabled-color, var(--agnostic-gray-dark)) !important;
  cursor: default !important;
  -webkit-appearance: none !important;
     -moz-appearance: none !important;
          appearance: none !important;
  box-shadow: none !important;
  opacity: 0.8 !important;
}

.btn-primary {
  background-color: var(--agnostic-btn-primary, var(--agnostic-primary));
  border-color: var(--agnostic-btn-primary, var(--agnostic-primary));
  color: var(--agnostic-btn-primary-color, var(--agnostic-light));
}

/* Border and font is primary. When hovered, we invert with primary background and white font */
.btn-primary.btn-bordered {
  color: var(--agnostic-btn-primary, var(--agnostic-primary));
}
.btn-primary.btn-bordered:hover,
.btn-primary.btn-bordered:focus {
  background-color: var(--agnostic-btn-primary, var(--agnostic-primary));
  color: var(--agnostic-btn-primary-color, var(--agnostic-light));
}

.btn-primary:visited {
  color: var(--agnostic-btn-primary-color, var(--agnostic-light));
}

.btn-secondary {
  background-color: var(--agnostic-btn-secondary, var(--agnostic-secondary));
  border-color: var(--agnostic-btn-secondary, var(--agnostic-secondary));
  color: var(--agnostic-btn-secondary-color, var(--agnostic-light));
}

/* Border and font is secondary. When hovered, we invert with secondary background and white font */
.btn-secondary.btn-bordered {
  color: var(--agnostic-btn-secondary, var(--agnostic-secondary));
}
.btn-secondary.btn-bordered:hover,
.btn-secondary.btn-bordered:focus {
  background-color: var(--agnostic-btn-secondary, var(--agnostic-secondary));
  color: var(--agnostic-btn-secondary-color, var(--agnostic-light));
}

.btn-secondary:visited {
  color: var(--agnostic-btn-secondary-color, var(--agnostic-light));
}

/*
* Raised Buttons
*
* A classic looking button that offers
* great depth and affordance.
*/
.btn-raised {
  border-color: var(--agnostic-btn-bgcolor, var(--agnostic-gray-light));
  border-style: solid;
  /* Note that while one can customize some of these slightly, we essentially have hard-coded
  box shadow rgba values so they can't really do so drastically which is probably fine :) */
  background: linear-gradient(
    var(--agnostic-btn-raised-from, var(--agnostic-gray-mid)),
    var(--agnostic-btn-raised-to, var(--agnostic-gray-extra-light))
  );
  box-shadow: inset 0px 1px 0px rgba(255, 255, 255, 0.3), 0 1px 2px rgba(0, 0, 0, 0.15);
}
.btn-raised:hover,
.btn-raised:focus {
  background: linear-gradient(to bottom, white, gainsboro);
}
.btn-raised.active {
  /* TODO -- maybe this shouldn't be hard coded */
  background: #eeeeee;
  box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.2), 0px 1px 0px white;
}

/*
* Raised Primary Buttons
*/
.btn-raised.btn-primary {
  border-color: var(--agnostic-btn-primary-raised-to, var(--agnostic-primary-from));
  background: linear-gradient(
    var(--agnostic-btn-primary-raised-from, var(--agnostic-primary-from)),
    var(--agnostic-btn-primary-raised-to, var(--agnostic-primary-to))
  );
}

.btn-raised.btn-primary:hover,
.btn-raised.btn-primary:focus {
  background: linear-gradient(
    to bottom,
    var(--agnostic-btn-primary-raised-hover-from, var(--agnostic-primary-hover)),
    var(--agnostic-btn-primary-raised-to, var(--agnostic-primary-from))
  );
  background: linear-gradient(
    var(--agnostic-btn-primary-raised-hover-from, var(--agnostic-primary-hover)),
    var(--agnostic-btn-primary-raised-to, var(--agnostic-primary-from))
  );
}

.btn-raised.btn-primary:active,
.btn-raised.btn-primary.active {
  opacity: 0.9;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.3);
}

/*
* Raised Secondary Buttons
*/
.btn-raised.btn-secondary {
  border-color: var(--agnostic-btn-secondary-raised-to, var(--agnostic-secondary-to));
  background: linear-gradient(
    var(--agnostic-btn-secondary-raised-from, var(--agnostic-secondary-from)),
    var(--agnostic-btn-secondary-raised-to, var(--agnostic-secondary-to))
  );
}

.btn-raised.btn-secondary:hover,
.btn-raised.btn-secondary:focus {
  background: linear-gradient(
    to bottom,
    var(--agnostic-btn-secondary-raised-hover-from, var(--agnostic-secondary-hover)),
    var(--agnostic-btn-secondary-raised-to, var(--agnostic-secondary-to))
  );
  background: linear-gradient(
    var(--agnostic-btn-secondary-raised-hover-from, var(--agnostic-secondary-hover)),
    var(--agnostic-btn-secondary-raised-to, var(--agnostic-secondary-to))
  );
}

.btn-raised.btn-secondary:active,
.btn-raised.btn-secondary.active {
  opacity: 0.9;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.3);
}

/**
  * Border Buttons
  */
.btn-bordered {
  border-width: 1px;
  background: transparent;
}

/**
  * Sizes
  */
.btn-large {
  font-size: calc(var(--agnostic-btn-font-size, 1rem) + 0.25rem);
  height: 3rem;
  line-height: 3rem;
  padding: 0 3rem;
}

.btn-small {
  font-size: calc(var(--agnostic-btn-font-size, 1rem) - 0.25rem);
  height: 2rem;
  line-height: 2rem;
  padding: 0 2rem;
}

/**
  * Rounded
  */
.btn-rounded {
  border-radius: var(--agnostic-btn-radius, var(--agnostic-radius, 0.25rem));
}

.btn-pill {
  border-radius: 200px;
}

/*
  * Size Adjustment for equal height & width buttons
  *
  * Remove padding
  */
.btn-circle {
  border-radius: 100%;
  width: 2.5rem;
  height: 2.5rem;
  padding: 0 !important;
}

.btn-circle-large {
  font-size: calc(var(--agnostic-btn-font-size, 1rem) + 0.25rem);
  width: 3rem;
  height: 3rem;
}

.btn-circle-small {
  font-size: calc(var(--agnostic-btn-font-size, 1rem) - 0.25rem);
  width: 2rem;
  height: 2rem;
}

/**
 * Button Block (stacked)
 */
.btn-block {
  width: 100%;
}
/* This is a utility class used if you literally want to stack block buttons one after another.
Apply this class to the nth-of-type(2) onwards to ensure the borders line up properly. */
.btn-block-following {
  -webkit-margin-before: -1px;
          margin-block-start: -1px;
}

/**
 * Invisible buttons. Generally used for a Cancel or icon button that behaves like a button,
 * semantically and for a11y, but, does so without all the typical "button chrome" behind it.
 */
.btn-blank {
  background-color: transparent;
  border: 0;
  border-radius: 0;
  box-shadow: none;
}
.btn-blank:hover,
.btn-blank:active,
.btn-blank:focus {
  background: none;
  outline: 3px solid transparent;
}

/**
 * Cards
 *
 * I drew some inspiration from the article on media-query less cards:
 * https://css-tricks.com/how-to-make-a-media-query-less-card-component/
 */
.card,
.card-base {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  position: relative;
  box-sizing: border-box;
  width: 100%;
}

.card,
.card-skin {
  box-shadow: var(--agnostic-card-boxshadow1-offset-x, 0)
      var(--agnostic-card-boxshadow1-offset-y, 0.375rem)
      var(--agnostic-card-boxshadow1-blur, 0.5625rem)
      var(--agnostic-card-boxshadow1-color, rgba(6, 6, 6, 0.075)),
    var(--agnostic-card-boxshadow2-offset-x, 0) var(--agnostic-card-boxshadow2-offset-y, 0)
      var(--agnostic-card-boxshadow2-blur, 1px)
      var(--agnostic-card-boxshadow2-color, rgba(5, 5, 5, 0.1));
  border-radius: var(--agnostic-card-border-radius, var(--agnostic-radius, 0.25rem));
  overflow: hidden;
}

.card:hover,
.card-skin:hover {
  box-shadow: var(--agnostic-card-boxshadow1-offset-x, 0)
      var(--agnostic-card-boxshadow1-offset-y, 0.375rem)
      var(--agnostic-card-boxshadow1-blur, 0.875rem)
      var(--agnostic-card-boxshadow1-color, rgba(4, 4, 4, 0.1)),
    var(--agnostic-card-boxshadow2-offset-x, 0) var(--agnostic-card-boxshadow2-offset-y, 0)
      var(--agnostic-card-boxshadow2-blur, 2px)
      var(--agnostic-card-boxshadow2-color, rgba(3, 3, 3, 0.1));
}

/**
 * Animates the y position and box shadow on hover
 */
.card-animated {
  transition: box-shadow ease-out 5s,
    transform var(--agnostic-timing-fast)
      cubic-bezier(
        var(--agnostic-card-cubic-1, 0.39),
        var(--agnostic-card-cubic-2, 0.575),
        var(--agnostic-card-cubic-3, 0.565),
        var(--agnostic-card-cubic-4, 1)
      );
}
.card-animated:hover {
  transform: translateY(var(--agnostic-card-translateY-hover, -3px));
  transition: box-shadow ease-out var(--agnostic-timing-fast),
    transform var(--agnostic-timing-slow)
      cubic-bezier(
        var(--agnostic-card-cubic-1, 0.39),
        var(--agnostic-card-cubic-2, 0.575),
        var(--agnostic-card-cubic-3, 0.565),
        var(--agnostic-card-cubic-4, 1)
      );
}

.card-stacked {
  flex-direction: column;
}

/**
 * These radio and checkbox customizations are an amalgamation of various resources I've found on the internets; from Heydon
 * Pickering's radio article (and his Inclusive Components book), to Sara Soueidan, Scott O'Hara, MDO, and Adrian Roselli's
 * research on the matter of inclusive hiding and custom radio/checkbox inputs.
 */

.checkbox-group,
.radio-group {
  --width-28: calc(7 * var(--fluid-4)); /* 1.75rem/28px */
  border: 1px solid var(--agnostic-checkbox-border-color, var(--agnostic-gray-light));
  padding: var(--fluid-24);
  padding-top: var(--fluid-14);
  border-radius: var(--fluid-8);
}

.checkbox-group-large,
.radio-group-large {
  padding: var(--width-28);
  padding-top: var(--fluid-16);
}

.checkbox-legend,
.radio-legend {
  padding: var(--fluid-2) var(--fluid-14);
  border-radius: var(--fluid-2);
}

/* Hiding technique from https://www.sarasoueidan.com/blog/inclusively-hiding-and-styling-checkboxes-and-radio-buttons/
*/
.checkbox,
.radio {
  position: absolute;
  width: var(--fluid-14);
  height: var(--fluid-14);
  opacity: 0;
}

.checkbox-small,
.radio-small {
  width: var(--fluid-12);
  height: var(--fluid-12);
}

.checkbox-large,
.radio-large {
  width: var(--fluid-16);
  height: var(--fluid-16);
}

.checkbox-label-wrap,
.radio-label-wrap {
  display: block;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  position: relative;
  line-height: var(--fluid-36);
}

.checkbox-label-wrap-inline,
.radio-label-wrap-inline {
  display: inline-flex;
}

.checkbox-label-wrap-inline:not(:last-child),
.radio-label-wrap-inline:not(:last-child) {
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
}

/* These are not actual <label> elements but the <span> label copy elements */
.checkbox-label,
.radio-label {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
}

/* The checkmark itself */
.checkbox-label:after {
  content: '';
  position: absolute;
  left: var(--fluid-6);
  top: var(--fluid-10);
  width: var(--fluid-6);
  height: var(--fluid-12);
  border: solid white;
  border-width: 0 var(--fluid-2) var(--fluid-2) 0;
  transform-origin: center center;
  transform: rotate(40deg) scale(0);
  transition-property: border, background-color, transform;
  transition-duration: var(--agnostic-timing-fast);
  transition-timing-function: ease-in-out;
}
.checkbox-label:before,
.radio-label:before {
  content: '';
  display: inline-block;
  -webkit-margin-end: var(--agnostic-checkbox-spacing-end, 0.75rem);
          margin-inline-end: var(--agnostic-checkbox-spacing-end, 0.75rem);
  transition: var(--agnostic-timing-fast) ease-out all;
}

/* Since we build up the radio size outwardly, it's naturally larger then the checkboxes
so we add a multiplyer to even those out initially */
.checkbox-label:before {
  border: 2px solid var(--agnostic-checkbox-border-color, var(--agnostic-gray-light));
  width: var(--fluid-16);
  height: var(--fluid-16);
  transition: box-shadow var(--agnostic-timing-fast) ease-out;
}

.radio-label:before {
  width: var(--fluid-14);
  height: var(--fluid-14);
  vertical-align: calc(-1 * var(--fluid-2));
  border-radius: 50%;
  border: var(--fluid-2) solid var(--agnostic-checkbox-light, var(--agnostic-light));
  box-shadow: 0 0 0 var(--fluid-2) var(--agnostic-checkbox-border-color, var(--agnostic-gray-light));
  transition: box-shadow var(--agnostic-timing-fast) ease-out;
}

.checkbox-label-small:after {
  left: calc(1.25 * var(--fluid-4));
}
.checkbox-label-small:before {
  width: var(--fluid-14);
  height: var(--fluid-14);
}

.radio-label-small:before {
  width: var(--fluid-12);
  height: var(--fluid-12);
}

.checkbox-label-large:after {
  left: calc(1.75 * var(--fluid-4));
}

.checkbox-label-large:before {
  width: var(--fluid-18);
  height: var(--fluid-18);
}

.radio-label-large:before {
  width: var(--fluid-16);
  height: var(--fluid-16);
}

/* the checked style using the :checked pseudo class */
.radio:checked + .radio-label:before {
  background: var(--agnostic-checkbox-fill-color, #08a880);
  box-shadow: 0 0 0 var(--fluid-2) var(--agnostic-checkbox-border-color, var(--agnostic-gray-light));
}

.radio:focus + .radio-label:before {
  box-shadow: 0 0 0 var(--fluid-2) var(--agnostic-checkbox-border-color, var(--agnostic-gray-light)),
    0 0 0 calc(1.5 * var(--fluid-2)) white,
    0 0 0 calc(2.25 * var(--fluid-2)) var(--agnostic-focus-ring-color);
}

.checkbox:focus + .checkbox-label:before {
  box-shadow: 0 0 0 3px var(--agnostic-focus-ring-color);
  outline: 3px solid transparent;
}

.checkbox:checked + .checkbox-label:after {
  transform: rotate(40deg) scale(1);
}
.checkbox:checked + .checkbox-label:before {
  background: var(--agnostic-checkbox-fill-color, #08a880);
  border: 2px solid var(--agnostic-checkbox-fill-color, #08a880);
}

/**
 * Consumer styles <legend> themselves, and can opt to use the .screenreader-only from
 * utilities.css if they're design requires it.
 */
.checkbox-group-hidden,
.radio-group-hidden {
  border: 0;
  -webkit-margin-before: 0;
          margin-block-start: 0;
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: 0;
          margin-inline-end: 0;
  -webkit-margin-after: 0;
          margin-block-end: 0;
  -webkit-padding-before: 0;
          padding-block-start: 0;
  -webkit-padding-start: 0;
          padding-inline-start: 0;
  -webkit-padding-end: 0;
          padding-inline-end: 0;
  -webkit-padding-after: 0;
          padding-block-end: 0;
}

/* Targets both the label container and the span label that is used
to style the custom radio / checkbox. Note it does NOT target the input
itself. */
.checkbox[disabled] + .checkbox-label,
.radio[disabled] + .radio-label,
.checkbox-label-wrap.disabled,
.radio-label-wrap.disabled,
.checkbox-label-wrap-inline.disabled,
.radio-label-wrap-inline.disabled {
  color: var(--agnostic-input-disabled-color, var(--agnostic-disabled-color)) !important;
  -webkit-appearance: none !important;
     -moz-appearance: none !important;
          appearance: none !important;
  box-shadow: none !important;
  cursor: not-allowed !important;
  opacity: 0.8 !important;
}

@media screen and (-ms-high-contrast: active) {
  /* High contrast mode outline hacks */
  .checkbox-label-wrap.disabled,
  .radio-label-wrap.disabled,
  .checkbox-label-wrap-inline.disabled,
  .radio-label-wrap-inline.disabled {
    outline: 2px solid transparent;
    outline-offset: -2px;
  }
}

.header,
.header-base {
  display: block;
}

.header-base img,
.header img {
  max-width: 100%;
  height: auto;
}

.header,
.header-skin {
  background-color: var(--agnostic-header-background-color, var(--agnostic-light));
  box-shadow: var(--agnostic-header-box-shadow-hor, 0) var(--agnostic-header-box-shadow-ver, 1px)
    var(--agnostic-header-box-shadow-blur, 5px) var(--agnostic-header-box-shadow-spread, 2px)
    var(--agnostic-header-box-shadow-color, rgba(0, 0, 0, 0.1));
  font-family: var(--agnostic-header-font-family, var(--agnostic-font-family));
  border-bottom: 1px solid var(--agnostic-header-border-color, var(--agnostic-gray-light));
  -webkit-padding-before: var(--agnostic-vertical-pad, 0.5rem);
          padding-block-start: var(--agnostic-vertical-pad, 0.5rem);
  -webkit-padding-after: var(--agnostic-vertical-pad, 0.5rem);
          padding-block-end: var(--agnostic-vertical-pad, 0.5rem);
  -webkit-padding-start: var(--agnostic-side-padding, 0.75rem);
          padding-inline-start: var(--agnostic-side-padding, 0.75rem);
  -webkit-padding-end: var(--agnostic-side-padding, 0.75rem);
          padding-inline-end: var(--agnostic-side-padding, 0.75rem);
}

.header-content {
  width: var(--agnostic-header-content-width, 960px);
  max-width: 100%;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
  flex-wrap: wrap;
}

/**
 * If you make your header sticky, you should likely consider that jump links
 * e.g. <h1 id="Jump-Here">... will tuck underneath the header! Here's a recommendation
 * for how to circumnavigate this issue via scroll-margin-top:
  h1[id],
  h2[id],
  h3[id],
  h4[id],
  h5[id],
  h6[id] {
    scroll-margin-top: 80px;
  }
 * In this case I have a 64px tall header so I've added 16px for clearance -- you'll need
 * to curate your own use case, but scroll-margin-top is super useful for this use case.
 */

.header-sticky {
  position: relative;
  top: 0;
  z-index: 10;
}

@media (min-width: 960px) {
  .header-sticky {
    position: -webkit-sticky;
    position: sticky;
  }

  .header-content {
    flex-direction: row;
    justify-content: space-between;
  }
}

/* Goes on the <ul> */
.header-nav {
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
}

@media (min-width: 960px) {
  .header-nav {
    flex-direction: row;
  }
}

.header-nav-item {
  display: inline-block;
}
.header-nav-item:not(:last-child) {
  -webkit-margin-end: initial;
          margin-inline-end: initial;
  -webkit-margin-after: var(--fluid-8);
          margin-block-end: var(--fluid-8);
}

.header-nav-item a {
  color: var(--agnostic-header-color, var(--agnostic-font-color));
  text-decoration: none;
}

@media (min-width: 960px) {
  .header-nav-item:not(:last-child) {
    -webkit-margin-end: var(--agnostic-header-nav-spacing, var(--fluid-32));
            margin-inline-end: var(--agnostic-header-nav-spacing, var(--fluid-32));
    -webkit-margin-after: initial;
            margin-block-end: initial;
  }
}

.input-base,
.input {
  /* Note this cannot be user-select: none else mobile safari won't accept input:
  https://stackoverflow.com/questions/49889003/cannot-write-into-input-field-on-safari/49901069
   */
  -webkit-user-select: initial;
     -moz-user-select: initial;
      -ms-user-select: initial;
          user-select: initial;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  box-sizing: border-box;
  /* Use the same color for the cursor */
  caret-color: currentColor;
}

.label,
.label-base {
  padding: 0;
  border: 0;
  box-sizing: border-box;
  font-family: inherit;
}

/* Electing to scope these as opposed to doing :root level definitions */
.field-help,
.field-help-large,
.field-help-small,
.field-error,
.field-error-large,
.field-error-small,
.label-skin,
.label,
.input-addon-container,
.input-small,
.input-large,
.input-skin,
.input-underlined,
.input-underlined-bg,
.input {
  color: var(--agnostic-font-color, var(--agnostic-dark));
  font-family: var(--agnostic-font-family);
  font-weight: var(--agnostic-font-weight, 300);
  font-size: var(--agnostic-font-size, 1rem);
  line-height: var(--agnostic-line-height, 1.25rem);
  width: 100%;
  max-width: 100%;
}

.input-skin,
.input {
  /* seems like a reasonable default as chrome picks `outset` which results in a weird 3d effect */
  border-style: solid;
  /* this can be overriden, but it might mess with the balance of the button heights across variants */
  border-width: var(--agnostic-input-border-size, 1px);
  border-color: var(--agnostic-input-border-color, var(--agnostic-gray-light));
  /* these can be overriden, but it might mess with the balance of the inputheights across variants */
  -webkit-padding-before: var(--agnostic-input-vertical-pad, 0.5rem);
          padding-block-start: var(--agnostic-input-vertical-pad, 0.5rem);
  -webkit-padding-after: var(--agnostic-input-vertical-pad, 0.5rem);
          padding-block-end: var(--agnostic-input-vertical-pad, 0.5rem);
  -webkit-padding-start: var(--agnostic-input-side-padding, 0.75rem);
          padding-inline-start: var(--agnostic-input-side-padding, 0.75rem);
  -webkit-padding-end: var(--agnostic-input-side-padding, 0.75rem);
          padding-inline-end: var(--agnostic-input-side-padding, 0.75rem);

  /* Note we only want to set properties that we actually want
  to transition in. For example, if we transition "all", the
  inputs will "grow in" on page load—not a happy effect :) */
  transition-property: box-shadow;
  transition-duration: var(--agnostic-input-timing, var(--agnostic-timing-medium));
}

.label {
  display: inline-block;
  /* Provided --agnostic-input-vertical-pad isn't overriden we'll get 20px
  label w/a 6px margin then a 38px input = 64 which is on the 8pt grid */
  -webkit-margin-before: 0;
          margin-block-start: 0;
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: 0;
          margin-inline-end: 0;
  -webkit-margin-after: var(--agnostic-input-label-pad, 0.375rem);
          margin-block-end: var(--agnostic-input-label-pad, 0.375rem);
  vertical-align: initial;
}

/* Reset labels and field errors to be 2px less then input font size */
.field-help,
.field-error,
.label,
.label-skin {
  font-size: calc(var(--agnostic-font-size, 1rem) - 2px);
}

.label-inline,
.input-inline {
  width: auto;
}

/* When inlined, the margin-block-end will throw the label off-center with adjacent input */
.label-inline {
  -webkit-margin-before: 0;
          margin-block-start: 0;
  -webkit-margin-after: 0;
          margin-block-end: 0;
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: var(--agnostic-input-side-padding, 0.75rem);
          margin-inline-end: var(--agnostic-input-side-padding, 0.75rem);
}

/**
* Placeholder
*/
.input::-webkit-input-placeholder {
  color: currentColor;
  opacity: 0.5;
  -webkit-transition: opacity var(--agnostic-timing-fast) ease-out;
  transition: opacity var(--agnostic-timing-fast) ease-out;
}

.input::-moz-placeholder {
  color: currentColor;
  opacity: 0.5;
  -moz-transition: opacity var(--agnostic-timing-fast) ease-out;
  transition: opacity var(--agnostic-timing-fast) ease-out;
}

.input::-ms-placeholder {
  color: currentColor;
  opacity: 0.5;
  -ms-transition: opacity var(--agnostic-timing-fast) ease-out;
  transition: opacity var(--agnostic-timing-fast) ease-out;
}

.input:-ms-placeholder {
  color: currentColor;
  opacity: 0.5;
  -ms-transition: opacity var(--agnostic-timing-fast) ease-out;
  transition: opacity var(--agnostic-timing-fast) ease-out;
}

/**
* Underlined inputs
*/
.input-underlined {
  border-top: 0;
  border-left: 0;
  border-right: 0;
  border-color: var(--agnostic-input-underlined-color, var(--agnostic-gray-mid-dark));
  background-color: transparent;
}

.input-underlined-bg {
  background-color: var(--agnostic-input-underlined-bg-color, var(--agnostic-gray-extra-light));
}

/**
* Rounded inputs
*/
.input-rounded {
  border-radius: var(--agnostic-radius, 0.25rem);
}

/**
 * Errors
 * We provide a class-based approach to setting errors which means we do
 * not support :invalid, so it requires custom use of html4 validation API
 * (see https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation
 * of the example in corresponding input.html file). The reason I elected to
 * not include :invalid, is it seems to result in "shouting" at the user as
 * I did not find an easy way to only kick in errors after a certain number
 * of characters have been type (blur is actually better but I did not
 * implement that in the contrived example).
 */
.label-error {
  color: var(--agnostic-input-error-color, var(--agnostic-error));
}
.input-error {
  border-color: var(--agnostic-input-error-color, var(--agnostic-error));
}

.label-error,
.field-error,
.field-error-small,
.field-error-large {
  color: var(--agnostic-input-error-color, var(--agnostic-error));
}

.field-help,
.field-help-small,
.field-help-large {
  color: var(--agnostic-input-help-color, var(--agnostic-gray-dark));
}

.field-help,
.field-help-small,
.field-help-large,
.field-error,
.field-error-small,
.field-error-large {
  display: inline-block;
  width: 100%;
  -webkit-margin-before: calc(var(--agnostic-input-vertical-pad, 0.5rem) / 2);
          margin-block-start: calc(var(--agnostic-input-vertical-pad, 0.5rem) / 2);
}

/**
  * Sizes
  */
.input-large {
  font-size: calc(var(--agnostic-font-size, 1rem) + 0.25rem);
  line-height: 1.6rem;
}

.field-help-large,
.field-error-large,
.label-large {
  /* We initially remove -2px from font-size so setting to font-size essentially adds the 2px back */
  font-size: var(--agnostic-font-size, 1rem);
}

.input-small {
  font-size: calc(var(--agnostic-font-size, 1rem) - 0.25rem);
  line-height: 1rem;
}

.field-help-small,
.field-error-small,
.label-small {
  font-size: calc(var(--agnostic-font-size, 1rem) - 0.25rem);
}

.input:focus {
  box-shadow: 0 0 0 3px var(--agnostic-focus-ring-color);
  /* High contrast mode outline */
  outline: 3px solid transparent;
  transition: box-shadow var(--agnostic-timing-fast) ease-out;
}
/* Set the focus to transparent when there's an error since we use
borders that visually conflict. */
.input-error:focus {
  box-shadow: 0 0 0 3px transparent;
}

/*
* Disabled State
*
* The disabled state uses the class .disabled,
* and the form attribute disabled="disabled".
* The use of !important is only added because this is a state
* that must be applied to all inputs when in a disabled state.
*/
.input.disabled, /* DEPRECATED -- TODO remove class based disabled */
.input:disabled {
  background: var(--agnostic-input-disabled-bg, var(--agnostic-disabled-bg)) !important;
  color: var(--agnostic-input-disabled-color, var(--agnostic-disabled-color)) !important;
  -webkit-appearance: none !important;
     -moz-appearance: none !important;
          appearance: none !important;
  box-shadow: none !important;
  cursor: not-allowed !important;
  opacity: 0.8 !important;
}

@media screen and (-ms-high-contrast: active) {
  /* High contrast mode outline hacks */
  .input:disabled {
    outline: 2px solid transparent;
    outline-offset: -2px;
  }
}

/**
 * Input "has addon"
 */

.input-addon-container {
  display: flex;
  position: relative;
  width: 100%;
  /* Maybe I should have defined another css prop for addon adjustments but trying
  to avoid any extra variable explosion there--will need to keep an eye on this */
  --addon-padding: calc(var(--agnostic-input-side-padding, 0.75rem) * 1.5);
}

.input-has-left-addon,
.input-has-right-addon {
  flex: 1;
}

.input-has-left-addon {
  -webkit-padding-start: calc(var(--addon-padding) * 2.25);
          padding-inline-start: calc(var(--addon-padding) * 2.25);
}

.input-has-right-addon {
  -webkit-padding-end: calc(var(--addon-padding) * 2.25);
          padding-inline-end: calc(var(--addon-padding) * 2.25);
}

/*
* Input addons e.g. icons inside the input
*/
.input-addon-right,
.input-addon-left {
  /* Maybe I should have defined another css prop for addon adjustments but trying
  to avoid any extra variable explosion there--will need to keep an eye on this */
  --addon-padding: calc(var(--agnostic-input-side-padding) * 1.5);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.input-addon-left {
  left: var(--addon-padding);
}

.input-addon-right {
  right: var(--addon-padding);
}

/* https://stackoverflow.com/questions/45507970/how-can-i-change-the-color-of-a-progress-bar-value-in-html */
/**
 * Most examples show styling directly to the <progress> element itself. However,
 * my tests (chrome, ff, safari on mac mini 2020), showed it's perfectly possibly
 * to use a class selector instead. The reason I'd prefer that here, is that I can
 * then use CSS Modules composes against .progress (e.g. for React/Vue components)
 */
.progress {
  -webkit-appearance: none;
  height: var(--agnostic-progress-height, var(--fluid-10, 0.625rem));
  width: 100%;
  border: none;
  /* Next couple of rules are required to be here for FF (but not chrome) */
  background-color: var(--agnostic-progress-background, var(--agnostic-gray-light, #ededed));
  border-radius: var(--agnostic-progress-radius, var(--fluid-10, 0.625rem));
}

.progress[value]::-webkit-progress-bar {
  /* In my tests chrome requires this whereas FF wants it on the progress {} rule */
  background-color: var(--agnostic-progress-background, var(--agnostic-gray-light, #ededed));
  border-radius: var(--agnostic-progress-radius, var(--fluid-10, 0.625rem));
}

.progress[value]::-webkit-progress-value {
  background-color: var(--agnostic-progress-fill-color, var(--agnostic-primary, #077acb));
  border-radius: var(--agnostic-progress-radius, var(--fluid-10, 0.625rem));
}

.progress[value]::-moz-progress-bar {
  background-color: var(--agnostic-progress-fill-color, var(--agnostic-primary, #077acb));
  border-radius: var(--agnostic-progress-radius, var(--fluid-10, 0.625rem));
}

.progress[value]::-ms-fill {
  background-color: var(--agnostic-progress-fill-color, var(--agnostic-primary, #077acb));
  border-radius: var(--agnostic-progress-radius, var(--fluid-10, 0.625rem));
}

/**
 * Switch
 * 
 * This switch is inspired by Scott Ohara's checkbox switch:
 * https://scottaohara.github.io/a11y_styled_form_controls/src/checkbox--switch/
 */
.switch-container {
  display: block;
  /* TODO: Hopefully this doesn't become a problem but since we use absolute
  positioning extensively, we need some way to have adjacent spaced lines */
  min-height: 2.25rem;
  width: 100%;
  padding: 0.5rem;
  position: relative;
}

.switch-container:hover {
  cursor: pointer;
}

/* using the before/after pseudo elements of the span to create the "switch" */
.switch:before,
.switch:after {
  border: 1px solid var(--agnostic-gray-mid-dark);
  content: '';
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

/* styling specific to the knob of the switch */
.switch:after {
  background: #fff;
  border-radius: 100%;
  width: 1.4rem;
  height: 1.4rem;
  right: 1.4rem;
  transition: right var(--agnostic-timing-fast) ease-in-out;
}

/* styling specific to the knob "container" */
.switch:before {
  background: #eee;
  border-radius: 1.75rem;
  width: 2.75rem;
  height: 1.75rem;
  right: 0.25rem;
  transition: background var(--agnostic-timing-medium) ease-in-out;
}

/* Sizes */
.switch-small:after {
  width: 1.25rem;
  height: 1.25rem;
  right: 1.125rem;
}

.switch-small:before {
  width: 2.25rem;
  height: 1.5rem;
}

.switch-large:after {
  width: 1.65rem;
  height: 1.65rem;
  right: 1.65rem;
}

.switch-large:before {
  width: 3.25rem;
  height: 2rem;
}

.switch-border:before {
  border: 1px solid var(--agnostic-primary);
}

.switch-action.switch-border:before {
  border: 1px solid var(--agnostic-action);
}

/* From: https://scottaohara.github.io/a11y_styled_form_controls/src/checkbox--switch/
  hide the actual checkbox from view, but not from keyboards or ATs.
  Instead of standard visually hidden styling, instead set opacity to
  almost 0 (not zero for ChomeVox legacy bug), pointer-events none, and
  then set to full height/width of container element so that VO focus
  ring outlines the component, instead of a tiny box within the component
*/
.switch-input {
  margin: 0;
  opacity: 0.0001;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.switch-input:focus + .switch:before {
  box-shadow: 0 0 0 3px var(--agnostic-focus-ring-color);
}

/* ---- CHECKED STATE ----- */

/* change the position of the knob to indicate it has been checked*/
.switch-input:checked + .switch:after {
  right: 0.5em;
}
.switch-input:checked + .switch-small:after {
  right: 0.425rem;
}

/* update the color of the "container" to further visually indicate state */
.switch-input:checked + .switch:not(.switch-border):before {
  background: var(--agnostic-primary);
}

.switch-input:checked + .switch-action:not(.switch-border):before {
  background: var(--agnostic-action);
}

/* Border switch on checked the thumb gets primary or action bg respectively */
.switch-input:checked + .switch-border:after {
  background: var(--agnostic-primary);
}
.switch-input:checked + .switch-action.switch-border:after {
  background: var(--agnostic-action);
}

/* Switch label on right */

/* Flips transition target to left to preserve our smooth transitions */
.switch-right .switch:after {
  transition: left var(--agnostic-timing-fast) ease-in-out;
}

.switch-right .switch-input:checked + .switch:after {
  right: initial;
  left: 0.5em;
}
.switch-right .switch-input:checked + .switch-small:after {
  right: initial;
  left: 0.425rem;
}

/* We have to flip the positioning when the label is on the right of switch */
.switch-right .switch:before {
  right: initial;
  left: 0.25rem;
}

.switch-right .switch::after {
  right: initial;
  left: 1.4rem;
}

.switch-right .switch-label {
  position: absolute;
  top: 0;
  right: 0;
}

/* Switch sizes w/label on right -- I expect SMACSS so .switch .switch-small
classes should both exist so the right: initial was taken care of above :) */
.switch-right .switch-small:after {
  left: 1.125rem;
}

.switch-right .switch-large:after {
  left: 1.65rem;
}

/* Disabled aka :disabled is not actually supported for <label>
element so we use attribute selector for that:
https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled#:~:text=The%20disabled%20attribute%20is%20supported,control%20or%20its%20descendant%20controls.
*/
.switch-input[disabled] + .switch,
.switch-input[disabled] + .switch-label,
.switch-container.disabled {
  color: var(--agnostic-input-disabled-color, var(--agnostic-disabled-color)) !important;
  -webkit-appearance: none !important;
     -moz-appearance: none !important;
          appearance: none !important;
  box-shadow: none !important;
  cursor: not-allowed !important;
  opacity: 0.8 !important;
}

@media screen and (-ms-high-contrast: active) {
  .switch:after {
    background-color: windowText;
  }

  /* High contrast mode outline hacks */
  .switch-input[disabled] + .switch-label,
  .switch-container.disabled {
    outline: 2px solid transparent;
    outline-offset: -2px;
  }
}

.tab-list,
.tab-list-base {
  display: flex;
}

.tab-list,
.tab-skinned {
  flex-wrap: wrap;
  flex-direction: row;
  -webkit-padding-start: 0;
          padding-inline-start: 0;
  -webkit-margin-after: 0;
          margin-block-end: 0;
  border-bottom: var(--agnostic-tabs-border-size, 1px) solid
    var(--agnostic-tabs-bgcolor, var(--agnostic-gray-light));
  transition-property: all;
  transition-duration: var(--agnostic-timing-medium);
}

/* We can ask for .tab-button which is base and skin combined, or, we can utilize .tab-button-base
if we'd like to only blank out buttons but otherwise skin ourselves. */
.tab-button,
.tab-button-base {
  /* Blank out the button */
  background-color: transparent;
  border: 0;
  border-radius: 0;
  box-shadow: none;
  /* Reset margins/padding; this will get added back if it's a "skinned" tab button. However, we have
  a use case where a tab-button is wrapping a faux button. For that, we don't want margins/padding because
  the faux button provides that. */
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: 0;
          margin-inline-end: 0;
  -webkit-padding-before: 0;
          padding-block-start: 0;
  -webkit-padding-after: 0;
          padding-block-end: 0;
  -webkit-padding-start: 0;
          padding-inline-start: 0;
  -webkit-padding-end: 0;
          padding-inline-end: 0;
}

/* We pull back the 2nd subsequent tabs to remove the double border */
.tab-button:not(:first-of-type),
.tab-button-base:not(:first-of-type) {
  -webkit-margin-start: -1px;
          margin-inline-start: -1px;
}

.tab-button,
.tab-button-skin {
  display: block;
  /* Since this is a "skinned tab button" we add our padding here to previously "reset" .tab-button-base */
  -webkit-padding-before: var(--agnostic-vertical-pad, 0.5rem);
          padding-block-start: var(--agnostic-vertical-pad, 0.5rem);
  -webkit-padding-after: var(--agnostic-vertical-pad, 0.5rem);
          padding-block-end: var(--agnostic-vertical-pad, 0.5rem);
  -webkit-padding-start: var(--agnostic-side-padding, 0.75rem);
          padding-inline-start: var(--agnostic-side-padding, 0.75rem);
  -webkit-padding-end: var(--agnostic-side-padding, 0.75rem);
          padding-inline-end: var(--agnostic-side-padding, 0.75rem);
  font-family: var(--agnostic-btn-font-family, var(--agnostic-font-family));
  font-weight: var(--agnostic-btn-font-weight, 400);
  font-size: var(--agnostic-btn-font-size, 1rem);
  /* this can be overriden, but it might mess with the balance of the button heights across variants */
  line-height: var(--agnostic-line-height, 1.25rem);
  color: var(--agnostic-tabs-primary, var(--agnostic-primary));
  text-decoration: none;
  transition: color var(--agnostic-timing-fast) ease-in-out,
    background-color var(--agnostic-timing-fast) ease-in-out,
    border-color var(--agnostic-timing-fast) ease-in-out;
}

.tab-borderless {
  border: none !important;
}

.tab-button-large {
  -webkit-padding-before: calc(var(--agnostic-input-side-padding) * 1.25);
          padding-block-start: calc(var(--agnostic-input-side-padding) * 1.25);
  -webkit-padding-after: calc(var(--agnostic-input-side-padding) * 1.25);
          padding-block-end: calc(var(--agnostic-input-side-padding) * 1.25);
  -webkit-padding-start: calc(var(--agnostic-input-side-padding) * 1.75);
          padding-inline-start: calc(var(--agnostic-input-side-padding) * 1.75);
  -webkit-padding-end: calc(var(--agnostic-input-side-padding) * 1.75);
          padding-inline-end: calc(var(--agnostic-input-side-padding) * 1.75);
}

.tab-button-jumbo {
  -webkit-padding-before: calc(var(--agnostic-input-side-padding) * 2);
          padding-block-start: calc(var(--agnostic-input-side-padding) * 2);
  -webkit-padding-after: calc(var(--agnostic-input-side-padding) * 2);
          padding-block-end: calc(var(--agnostic-input-side-padding) * 2);
  -webkit-padding-start: calc(var(--agnostic-input-side-padding) * 3);
          padding-inline-start: calc(var(--agnostic-input-side-padding) * 3);
  -webkit-padding-end: calc(var(--agnostic-input-side-padding) * 3);
          padding-inline-end: calc(var(--agnostic-input-side-padding) * 3);
}
.tab-item.tab-button {
  -webkit-margin-after: -1px;
          margin-block-end: -1px;
  background: 0 0;
  border: 1px solid transparent;
  border-top-left-radius: var(--agnostic-tabs-radius, 0.25rem);
  border-top-right-radius: var(--agnostic-tabs-radius, 0.25rem);
}

.tab-item.tab-button.active {
  color: var(--agnostic-gray-dark);
  /* TODO -- update these colors to use css properties */
  background-color: #fff;
  border-color: #dee2e6 #dee2e6 #fff;
}

.tab-item:hover,
.tab-button:focus {
  border-color: #e9ecef #e9ecef #dee2e6;
  isolation: isolate;
  cursor: pointer;
}

.tab-button:disabled {
  color: var(--agnostic-tabas-disabled-bg, var(--agnostic-gray-mid-dark));
  background-color: transparent;
  border-color: transparent;
  opacity: 0.8;
}

/*# sourceMappingURL=data:application/json;base64, */
.alert-base,
.alert {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
}
.alert-end {
  justify-content: flex-end;
}
.alert-skin,
.alert {
  padding: var(--agnostic-side-padding);
  background: var(--agnostic-gray-light);
}

.alert-icon {
  color: var(--agnostic-gray-mid-dark);
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
  /* Ensures our icon doesn't flex grow or shrink */
  flex: 0 0 var(--fluid-24);
}

.alert-border-top {
  border-top: var(--fluid-8) solid var(--agnostic-gray-mid-dark);
}
.alert-border-left {
  border-left: var(--fluid-8) solid var(--agnostic-gray-mid-dark);
}
.alert-border-bottom {
  border-bottom: var(--fluid-8) solid var(--agnostic-gray-mid-dark);
}
.alert-border-right {
  border-right: var(--fluid-8) solid var(--agnostic-gray-mid-dark);
}

.alert-border-all {
  border: var(--fluid-2) solid var(--agnostic-gray-mid-dark);
}

.alert-rounded {
  border-radius: var(--agnostic-alert-radius, var(--agnostic-radius, 0.25rem));
}

.alert-warning {
  background: var(--agnostic-warning-light);
  color: var(--agnostic-warning-dark);
}
.alert-warning-icon {
  color: var(--agnostic-warning-border-accent);
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
  /* Ensures our icon doesn't flex grow or shrink */
  flex: 0 0 var(--fluid-24);
}
.alert-warning.alert-border-top {
  border-top-color: var(--agnostic-warning-border-accent);
}
.alert-warning.alert-border-left {
  border-left-color: var(--agnostic-warning-border-accent);
}
.alert-warning.alert-border-bottom {
  border-bottom-color: var(--agnostic-warning-border-accent);
}
.alert-warning.alert-border-right {
  border-right-color: var(--agnostic-warning-border-accent);
}
.alert-warning.alert-border-all {
  border: var(--fluid-2) solid var(--agnostic-warning-border);
}

.alert-info {
  background: var(--agnostic-primary-light);
  color: var(--agnostic-primary-dark);
}
.alert-info-icon {
  color: var(--agnostic-primary-dark);
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
  /* Ensures our icon doesn't flex grow or shrink */
  flex: 0 0 var(--fluid-24);
}

.alert-info.alert-border-top {
  border-top-color: var(--agnostic-primary-dark);
}
.alert-info.alert-border-left {
  border-left-color: var(--agnostic-primary-dark);
}
.alert-info.alert-border-bottom {
  border-bottom-color: var(--agnostic-primary-dark);
}
.alert-info.alert-border-right {
  border-right-color: var(--agnostic-primary-dark);
}
.alert-info.alert-border-all {
  border: var(--fluid-2) solid var(--agnostic-primary-border);
}

.alert-error {
  background: var(--agnostic-error-light);
  color: var(--agnostic-error-dark);
}
.alert-error-icon {
  color: var(--agnostic-error-dark);
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
  /* Ensures our icon doesn't flex grow or shrink */
  flex: 0 0 var(--fluid-24);
}
.alert-error.alert-border-top {
  border-top-color: var(--agnostic-error-dark);
}
.alert-error.alert-border-left {
  border-left-color: var(--agnostic-error-dark);
}
.alert-error.alert-border-bottom {
  border-bottom-color: var(--agnostic-error-dark);
}
.alert-error.alert-border-right {
  border-right-color: var(--agnostic-error-dark);
}
.alert-error.alert-border-all {
  border: var(--fluid-2) solid var(--agnostic-error-border);
}

.alert-success {
  background: var(--agnostic-action-light);
  color: var(--agnostic-action-from);
}
.alert-success-icon {
  color: var(--agnostic-ation-from);
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
  /* Ensures our icon doesn't flex grow or shrink */
  flex: 0 0 var(--fluid-24);
}
.alert-success.alert-border-top {
  border-top-color: var(--agnostic-action-from);
}
.alert-success.alert-border-left {
  border-left-color: var(--agnostic-action-from);
}
.alert-success.alert-border-bottom {
  border-bottom-color: var(--agnostic-action-from);
}
.alert-success.alert-border-right {
  border-right-color: var(--agnostic-action-from);
}
.alert-success.alert-border-all {
  border: var(--fluid-2) solid var(--agnostic-action-border);
}

.avatar,
.avatar-base {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

.avatar,
.avatar-skin {
  width: var(--fluid-40);
  height: var(--fluid-40);
  max-width: 100%;
  background: var(--agnostic-gray-extra-light);
  border-radius: 50%;
}

.avatar-square {
  border-radius: 0;
}

.avatar-rounded {
  border-radius: var(--agnostic-radius);
}

.avatar-small {
  font-size: var(--fluid-12);
  width: var(--fluid-32);
  height: var(--fluid-32);
}

.avatar-large {
  width: var(--fluid-48);
  height: var(--fluid-48);
}

.avatar-xlarge {
  font-size: var(--fluid-20);
  width: var(--fluid-64);
  height: var(--fluid-64);
}

.avatar::before {
  content: attr(data-text);
}

.avatar-image {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.avatar-info {
  background: var(--agnostic-primary-light);
  color: var(--agnostic-primary-dark);
}
.avatar-warning {
  background: var(--agnostic-warning-light);
  color: var(--agnostic-warning-dark);
}
.avatar-success {
  background: var(--agnostic-action-light);
  color: var(--agnostic-action-from);
}
.avatar-error {
  background: var(--agnostic-error-light);
  color: var(--agnostic-error-dark);
}

/* Must come after avatar-success, avatatar-warning, etc. so specificity is higher */
.avatar-transparent {
  background: transparent;
}

.avatar-group {
  display: flex;
  flex-direction: row;
  /* TBD -- should we stack these on mobile? */
}
.avatar-group .avatar {
  border: 2px solid white;
}

.avatar-group .avatar:not(:first-child) {
  -webkit-margin-start: calc(-1 * var(--fluid-10));
          margin-inline-start: calc(-1 * var(--fluid-10));
}

.breadcrumb {
  display: flex;
  flex-wrap: wrap;
  padding: 0;
  white-space: nowrap;
  list-style: none;
}

.breadcrumb-item + .breadcrumb-item {
  -webkit-padding-start: var(--fluid-6);
          padding-inline-start: var(--fluid-6);
}

.breadcrumb-item + .breadcrumb-item::before {
  -webkit-padding-end: var(--fluid-6);
          padding-inline-end: var(--fluid-6);
  color: var(--agnostic-gray-mid-dark);
  content: '\203A';
}

.breadcrumb-item.active {
  color: var(--agnostic-dark);
}

.breadcrumb-slash .breadcrumb-item + .breadcrumb-item::before {
  content: '\0002f';
}

.breadcrumb-arrow .breadcrumb-item + .breadcrumb-item::before {
  content: '\02192';
}

.breadcrumb-bullet .breadcrumb-item + .breadcrumb-item::before {
  content: '\02022';
}

/**
 * Button Groups
 */
.btn-group {
  display: inline-flex;
  flex-direction: row;
}

.btn-group > button {
  border-radius: var(--agnostic-btn-radius, var(--agnostic-radius, 0.25rem));
}
.btn-group > button:not(:last-child) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  -webkit-margin-end: -1px;
          margin-inline-end: -1px;
}
.btn-group > button:not(:first-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

/*
* Base Button Style
*
* Please note that we have two versions of this:
* `.btn` which encompasses both the base and skin styles
* `.btn-base` and `btn-skin`.
* The reason we've done this is to provide you with some convenience but
* also flexibility. Most will just want to apply `.btn`. However, if the
* base skin of the button does not work for you, another option is to only
* apply `.btn-base` and then set your own "button skin".
*/
.btn-base,
.btn {
  /* TODO test this fallback override syntax is correct */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  box-sizing: border-box;
  transition-property: all;
  transition-duration: var(--agnostic-timing-medium);
}

.btn-skin,
.btn {
  color: var(--agnostic-btn-font-color, var(--agnostic-dark));
  background-color: var(--agnostic-btn-bgcolor, var(--agnostic-gray-light));
  border-color: var(--agnostic-btn-bgcolor, var(--agnostic-gray-light));
  /* seems like a reasonable default as chrome picks `outset` which results in a weird 3d effect */
  border-style: solid;
  border-width: var(--agnostic-btn-border-size, 1px);
  font-family: var(--agnostic-btn-font-family, var(--agnostic-font-family));
  font-weight: var(--agnostic-btn-font-weight, 400);
  font-size: var(--agnostic-btn-font-size, 1rem);
  /* this can be overriden, but it might mess with the balance of the button heights across variants */
  line-height: var(--agnostic-line-height, var(--fluid-20, 1.25rem));
  -webkit-padding-before: var(--agnostic-vertical-pad, 0.5rem);
          padding-block-start: var(--agnostic-vertical-pad, 0.5rem);
  -webkit-padding-after: var(--agnostic-vertical-pad, 0.5rem);
          padding-block-end: var(--agnostic-vertical-pad, 0.5rem);
  -webkit-padding-start: var(--agnostic-side-padding, 0.75rem);
          padding-inline-start: var(--agnostic-side-padding, 0.75rem);
  -webkit-padding-end: var(--agnostic-side-padding, 0.75rem);
          padding-inline-end: var(--agnostic-side-padding, 0.75rem);
  text-decoration: none;
  text-align: center;
  outline: none;
}

.btn:visited {
  color: var(--agnostic-btn-font-color, var(--agnostic-dark));
}

.btn:hover {
  opacity: 0.85;
  text-decoration: none;
}

.btn:active {
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.3);
  text-decoration: none;
  transition-duration: 0s;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
}

.btn:focus {
  box-shadow: 0 0 0 var(--agnostic-focus-ring-outline-width) var(--agnostic-focus-ring-color);
  /* Needed for High Contrast mode */
  outline: var(--agnostic-focus-ring-outline-width) var(--agnostic-focus-ring-outline-style)
    var(--agnostic-focus-ring-outline-color);
  transition: box-shadow var(--agnostic-timing-fast) ease-out;
}

/*
* Disabled State
*
* The disabled state uses the class .disabled, is-disabled,
* and the form attribute disabled="disabled".
* The use of !important is only added because this is a state
* that must be applied to all buttons when in a disabled state.
*/
.btn.disabled,
.btn:disabled {
  top: 0 !important;
  background: var(--agnostic-btn-disabled-bg, var(--agnostic-gray-mid-dark)) !important;
  text-shadow: 0 1px 1px rgba(255, 255, 255, 1) !important;
  /* primary, secondary, natural, all look same when disabled; and we don't want to
  have an inadvertant looking blue primary border when disabled so it's transparent */
  border-color: transparent;
  color: var(--agnostic-btn-disabled-color, var(--agnostic-gray-dark)) !important;
  cursor: default !important;
  -webkit-appearance: none !important;
     -moz-appearance: none !important;
          appearance: none !important;
  box-shadow: none !important;
  opacity: 0.8 !important;
}

.btn-primary {
  background-color: var(--agnostic-btn-primary, var(--agnostic-primary));
  border-color: var(--agnostic-btn-primary, var(--agnostic-primary));
  color: var(--agnostic-btn-primary-color, var(--agnostic-light));
}

/* Border and font is primary. When hovered, we invert with primary background and white font */
.btn-primary.btn-bordered {
  color: var(--agnostic-btn-primary, var(--agnostic-primary));
}
.btn-primary.btn-bordered:hover,
.btn-primary.btn-bordered:focus {
  background-color: var(--agnostic-btn-primary, var(--agnostic-primary));
  color: var(--agnostic-btn-primary-color, var(--agnostic-light));
}

.btn-primary:visited {
  color: var(--agnostic-btn-primary-color, var(--agnostic-light));
}

.btn-secondary {
  background-color: var(--agnostic-btn-secondary, var(--agnostic-secondary));
  border-color: var(--agnostic-btn-secondary, var(--agnostic-secondary));
  color: var(--agnostic-btn-secondary-color, var(--agnostic-light));
}

/* Border and font is secondary. When hovered, we invert with secondary background and white font */
.btn-secondary.btn-bordered {
  color: var(--agnostic-btn-secondary, var(--agnostic-secondary));
}
.btn-secondary.btn-bordered:hover,
.btn-secondary.btn-bordered:focus {
  background-color: var(--agnostic-btn-secondary, var(--agnostic-secondary));
  color: var(--agnostic-btn-secondary-color, var(--agnostic-light));
}

.btn-secondary:visited {
  color: var(--agnostic-btn-secondary-color, var(--agnostic-light));
}

/*
* Raised Buttons
*
* A classic looking button that offers
* great depth and affordance.
*/
.btn-raised {
  border-color: var(--agnostic-btn-bgcolor, var(--agnostic-gray-light));
  border-style: solid;
  /* Note that while one can customize some of these slightly, we essentially have hard-coded
  box shadow rgba values so they can't really do so drastically which is probably fine :) */
  background: linear-gradient(
    var(--agnostic-btn-raised-from, var(--agnostic-gray-mid)),
    var(--agnostic-btn-raised-to, var(--agnostic-gray-extra-light))
  );
  box-shadow: inset 0px 1px 0px rgba(255, 255, 255, 0.3), 0 1px 2px rgba(0, 0, 0, 0.15);
}
.btn-raised:hover,
.btn-raised:focus {
  background: linear-gradient(to bottom, white, gainsboro);
}
.btn-raised.active {
  /* TODO -- maybe this shouldn't be hard coded */
  background: #eeeeee;
  box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.2), 0px 1px 0px white;
}

/*
* Raised Primary Buttons
*/
.btn-raised.btn-primary {
  border-color: var(--agnostic-btn-primary-raised-to, var(--agnostic-primary-from));
  background: linear-gradient(
    var(--agnostic-btn-primary-raised-from, var(--agnostic-primary-from)),
    var(--agnostic-btn-primary-raised-to, var(--agnostic-primary-to))
  );
}

.btn-raised.btn-primary:hover,
.btn-raised.btn-primary:focus {
  background: linear-gradient(
    to bottom,
    var(--agnostic-btn-primary-raised-hover-from, var(--agnostic-primary-hover)),
    var(--agnostic-btn-primary-raised-to, var(--agnostic-primary-from))
  );
  background: linear-gradient(
    var(--agnostic-btn-primary-raised-hover-from, var(--agnostic-primary-hover)),
    var(--agnostic-btn-primary-raised-to, var(--agnostic-primary-from))
  );
}

.btn-raised.btn-primary:active,
.btn-raised.btn-primary.active {
  opacity: 0.9;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.3);
}

/*
* Raised Secondary Buttons
*/
.btn-raised.btn-secondary {
  border-color: var(--agnostic-btn-secondary-raised-to, var(--agnostic-secondary-to));
  background: linear-gradient(
    var(--agnostic-btn-secondary-raised-from, var(--agnostic-secondary-from)),
    var(--agnostic-btn-secondary-raised-to, var(--agnostic-secondary-to))
  );
}

.btn-raised.btn-secondary:hover,
.btn-raised.btn-secondary:focus {
  background: linear-gradient(
    to bottom,
    var(--agnostic-btn-secondary-raised-hover-from, var(--agnostic-secondary-hover)),
    var(--agnostic-btn-secondary-raised-to, var(--agnostic-secondary-to))
  );
  background: linear-gradient(
    var(--agnostic-btn-secondary-raised-hover-from, var(--agnostic-secondary-hover)),
    var(--agnostic-btn-secondary-raised-to, var(--agnostic-secondary-to))
  );
}

.btn-raised.btn-secondary:active,
.btn-raised.btn-secondary.active {
  opacity: 0.9;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.3);
}

/**
  * Border Buttons
  */
.btn-bordered {
  border-width: 1px;
  background: transparent;
}

/**
  * Sizes
  */
.btn-large {
  font-size: calc(var(--agnostic-btn-font-size, 1rem) + 0.25rem);
  height: 3rem;
  line-height: 3rem;
  padding: 0 3rem;
}

.btn-small {
  font-size: calc(var(--agnostic-btn-font-size, 1rem) - 0.25rem);
  height: 2rem;
  line-height: 2rem;
  padding: 0 2rem;
}

/**
  * Rounded
  */
.btn-rounded {
  border-radius: var(--agnostic-btn-radius, var(--agnostic-radius, 0.25rem));
}

.btn-pill {
  border-radius: 200px;
}

/*
  * Size Adjustment for equal height & width buttons
  *
  * Remove padding
  */
.btn-circle {
  border-radius: 100%;
  width: 2.5rem;
  height: 2.5rem;
  padding: 0 !important;
}

.btn-circle-large {
  font-size: calc(var(--agnostic-btn-font-size, 1rem) + 0.25rem);
  width: 3rem;
  height: 3rem;
}

.btn-circle-small {
  font-size: calc(var(--agnostic-btn-font-size, 1rem) - 0.25rem);
  width: 2rem;
  height: 2rem;
}

/**
 * Button Block (stacked)
 */
.btn-block {
  width: 100%;
}
/* This is a utility class used if you literally want to stack block buttons one after another.
Apply this class to the nth-of-type(2) onwards to ensure the borders line up properly. */
.btn-block-following {
  -webkit-margin-before: -1px;
          margin-block-start: -1px;
}

/**
 * Invisible buttons. Generally used for a Cancel or icon button that behaves like a button,
 * semantically and for a11y, but, does so without all the typical "button chrome" behind it.
 */
.btn-link,
.btn-blank {
  font-family: var(--agnostic-btn-font-family, var(--agnostic-font-family));
  font-size: var(--agnostic-btn-font-size, 1rem);
  background-color: transparent;
  border: 0;
  border-radius: 0;
  box-shadow: none;
  transition: none;
}
/* A button blank with link color text */
.btn-link {
  color: var(--agnostic-btn-primary, var(--agnostic-primary));
}
.btn-link:hover {
  cursor: pointer;
}

@media (prefers-reduced-motion) {
  .btn-blank,
  .btn:focus,
  .btn {
    transition-duration: 0.001ms !important;
  }
}

/**
 * Cards
 *
 * I drew some inspiration from the article on media-query less cards:
 * https://css-tricks.com/how-to-make-a-media-query-less-card-component/
 */
.card,
.card-base {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  position: relative;
  box-sizing: border-box;
  width: 100%;
}

.card,
.card-skin {
  box-shadow: var(--agnostic-card-boxshadow1-offset-x, 0)
      var(--agnostic-card-boxshadow1-offset-y, 0.375rem)
      var(--agnostic-card-boxshadow1-blur, 0.5625rem)
      var(--agnostic-card-boxshadow1-color, rgba(6, 6, 6, 0.075)),
    var(--agnostic-card-boxshadow2-offset-x, 0) var(--agnostic-card-boxshadow2-offset-y, 0)
      var(--agnostic-card-boxshadow2-blur, 1px)
      var(--agnostic-card-boxshadow2-color, rgba(5, 5, 5, 0.1));
  border-radius: var(--agnostic-card-border-radius, var(--agnostic-radius, 0.25rem));
  overflow: hidden;
}

.card:hover,
.card-skin:hover {
  box-shadow: var(--agnostic-card-boxshadow1-offset-x, 0)
      var(--agnostic-card-boxshadow1-offset-y, 0.375rem)
      var(--agnostic-card-boxshadow1-blur, 0.875rem)
      var(--agnostic-card-boxshadow1-color, rgba(4, 4, 4, 0.1)),
    var(--agnostic-card-boxshadow2-offset-x, 0) var(--agnostic-card-boxshadow2-offset-y, 0)
      var(--agnostic-card-boxshadow2-blur, 2px)
      var(--agnostic-card-boxshadow2-color, rgba(3, 3, 3, 0.1));
}

/**
 * Animates the y position and box shadow on hover
 */
.card-animated {
  transition: box-shadow ease-out 5s,
    transform var(--agnostic-timing-fast)
      cubic-bezier(
        var(--agnostic-card-cubic-1, 0.39),
        var(--agnostic-card-cubic-2, 0.575),
        var(--agnostic-card-cubic-3, 0.565),
        var(--agnostic-card-cubic-4, 1)
      );
}
.card-animated:hover {
  transform: translateY(var(--agnostic-card-translateY-hover, -3px));
  transition: box-shadow ease-out var(--agnostic-timing-fast),
    transform var(--agnostic-timing-slow)
      cubic-bezier(
        var(--agnostic-card-cubic-1, 0.39),
        var(--agnostic-card-cubic-2, 0.575),
        var(--agnostic-card-cubic-3, 0.565),
        var(--agnostic-card-cubic-4, 1)
      );
}
@media (prefers-reduced-motion) {
  .card-animated,
  .card-animated:hover {
    transition-duration: 0.001ms !important;
  }
}

.card-stacked {
  flex-direction: column;
}

/**
 * These radio and checkbox customizations are an amalgamation of various resources I've found on the internets; from Heydon
 * Pickering's radio article (and his Inclusive Components book), to Sara Soueidan, Scott O'Hara, MDO, and Adrian Roselli's
 * research on the matter of inclusive hiding and custom radio/checkbox inputs.
 */

.checkbox-group,
.radio-group {
  --width-28: calc(7 * var(--fluid-4)); /* 1.75rem/28px */
  border: 1px solid var(--agnostic-checkbox-border-color, var(--agnostic-gray-light));
  padding: var(--fluid-24);
  padding-top: var(--fluid-14);
  border-radius: var(--fluid-8);
}

.checkbox-group-large,
.radio-group-large {
  padding: var(--width-28);
  padding-top: var(--fluid-16);
}

.checkbox-legend,
.radio-legend {
  padding: var(--fluid-2) var(--fluid-14);
  border-radius: var(--fluid-2);
}

/* Hiding technique from https://www.sarasoueidan.com/blog/inclusively-hiding-and-styling-checkboxes-and-radio-buttons/
*/
.checkbox,
.radio {
  position: absolute;
  width: var(--fluid-14);
  height: var(--fluid-14);
  opacity: 0;
}

.checkbox-small,
.radio-small {
  width: var(--fluid-12);
  height: var(--fluid-12);
}

.checkbox-large,
.radio-large {
  width: var(--fluid-16);
  height: var(--fluid-16);
}

.checkbox-label-wrap,
.radio-label-wrap {
  display: block;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  position: relative;
  line-height: var(--fluid-36);
}

.checkbox-label-wrap-inline,
.radio-label-wrap-inline {
  display: inline-flex;
}

.checkbox-label-wrap-inline:not(:last-child),
.radio-label-wrap-inline:not(:last-child) {
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
}

/* These are not actual <label> elements but the <span> label copy elements */
.checkbox-label,
.radio-label {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
}

/* The checkmark itself */
.checkbox-label:after {
  content: '';
  position: absolute;
  left: var(--fluid-6);
  top: var(--fluid-10);
  width: var(--fluid-6);
  height: var(--fluid-12);
  border: solid white;
  border-width: 0 var(--fluid-2) var(--fluid-2) 0;
  transform-origin: center center;
  transform: rotate(40deg) scale(0);
  transition-property: border, background-color, transform;
  transition-duration: var(--agnostic-timing-fast);
  transition-timing-function: ease-in-out;
}
.checkbox-label:before,
.radio-label:before {
  content: '';
  display: inline-block;
  -webkit-margin-end: var(--agnostic-checkbox-spacing-end, 0.75rem);
          margin-inline-end: var(--agnostic-checkbox-spacing-end, 0.75rem);
  transition: var(--agnostic-timing-fast) ease-out all;
}

/* Since we build up the radio size outwardly, it's naturally larger then the checkboxes
so we add a multiplyer to even those out initially */
.checkbox-label:before {
  border: 2px solid var(--agnostic-checkbox-border-color, var(--agnostic-gray-light));
  width: var(--fluid-16);
  height: var(--fluid-16);
  transition: box-shadow var(--agnostic-timing-fast) ease-out;
}

.radio-label:before {
  width: var(--fluid-14);
  height: var(--fluid-14);
  vertical-align: calc(-1 * var(--fluid-2));
  border-radius: 50%;
  border: var(--fluid-2) solid var(--agnostic-checkbox-light, var(--agnostic-light));
  box-shadow: 0 0 0 var(--fluid-2) var(--agnostic-checkbox-border-color, var(--agnostic-gray-light));
  transition: box-shadow var(--agnostic-timing-fast) ease-out;
}

@media (prefers-reduced-motion) {
  .checkbox-label:after .checkbox-label:before,
  .radio-label:before,
  .checkbox-label:before,
  .radio-label:before {
    transition-duration: 0.001ms !important;
  }
}

.checkbox-label-small:after {
  left: calc(1.25 * var(--fluid-4));
}
.checkbox-label-small:before {
  width: var(--fluid-14);
  height: var(--fluid-14);
}

.radio-label-small:before {
  width: var(--fluid-12);
  height: var(--fluid-12);
}

.checkbox-label-large:after {
  left: calc(1.75 * var(--fluid-4));
}

.checkbox-label-large:before {
  width: var(--fluid-18);
  height: var(--fluid-18);
}

.radio-label-large:before {
  width: var(--fluid-16);
  height: var(--fluid-16);
}

/* the checked style using the :checked pseudo class */
.radio:checked + .radio-label:before {
  background: var(--agnostic-checkbox-fill-color, #08a880);
  box-shadow: 0 0 0 var(--fluid-2) var(--agnostic-checkbox-border-color, var(--agnostic-gray-light));
}

.radio:focus + .radio-label:before {
  box-shadow: 0 0 0 var(--fluid-2) var(--agnostic-checkbox-border-color, var(--agnostic-gray-light)),
    0 0 0 calc(1.5 * var(--fluid-2)) white,
    0 0 0 calc(2.25 * var(--fluid-2)) var(--agnostic-focus-ring-color);
}

.checkbox:focus + .checkbox-label:before {
  box-shadow: 0 0 0 var(--agnostic-focus-ring-outline-width) var(--agnostic-focus-ring-color);
  /* Needed for High Contrast mode */
  outline: var(--agnostic-focus-ring-outline-width) var(--agnostic-focus-ring-outline-style)
    var(--agnostic-focus-ring-outline-color);
}

.checkbox:checked + .checkbox-label:after {
  transform: rotate(40deg) scale(1);
}
.checkbox:checked + .checkbox-label:before {
  background: var(--agnostic-checkbox-fill-color, #08a880);
  border: 2px solid var(--agnostic-checkbox-fill-color, #08a880);
}

/**
 * Consumer styles <legend> themselves, and can opt to use the .screenreader-only from
 * utilities.css if they're design requires it.
 */
.checkbox-group-hidden,
.radio-group-hidden {
  border: 0;
  -webkit-margin-before: 0;
          margin-block-start: 0;
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: 0;
          margin-inline-end: 0;
  -webkit-margin-after: 0;
          margin-block-end: 0;
  -webkit-padding-before: 0;
          padding-block-start: 0;
  -webkit-padding-start: 0;
          padding-inline-start: 0;
  -webkit-padding-end: 0;
          padding-inline-end: 0;
  -webkit-padding-after: 0;
          padding-block-end: 0;
}

/* Targets both the label container and the span label that is used
to style the custom radio / checkbox. Note it does NOT target the input
itself. */
.checkbox[disabled] + .checkbox-label,
.radio[disabled] + .radio-label,
.checkbox-label-wrap.disabled,
.radio-label-wrap.disabled,
.checkbox-label-wrap-inline.disabled,
.radio-label-wrap-inline.disabled {
  color: var(--agnostic-input-disabled-color, var(--agnostic-disabled-color)) !important;
  -webkit-appearance: none !important;
     -moz-appearance: none !important;
          appearance: none !important;
  box-shadow: none !important;
  cursor: not-allowed !important;
  opacity: 0.8 !important;
}

@media screen and (-ms-high-contrast: active) {
  /* High contrast mode outline hacks */
  .checkbox-label-wrap.disabled,
  .radio-label-wrap.disabled,
  .checkbox-label-wrap-inline.disabled,
  .radio-label-wrap-inline.disabled {
    outline: 2px solid transparent;
    outline-offset: -2px;
  }
}

.close-button {
  background-color: transparent;
  border: 0;
  border-radius: 0;
  box-shadow: none;
  width: var(--fluid-24);
  height: var(--fluid-24);
}
.close-button:hover,
.close-button:active,
.close-button:focus {
  background: none;
  /* Needed for High Contrast mode */
  outline: var(--agnostic-focus-ring-outline-width) var(--agnostic-focus-ring-outline-style)
    var(--agnostic-focus-ring-outline-color);
}
.close-button:focus {
  box-shadow: 0 0 0 3px var(--agnostic-focus-ring-color);
  transition: box-shadow var(--agnostic-timing-fast) ease-out;
}

.close {
  width: var(--fluid-12);
  height: var(--fluid-12);
  display: inline-block;
  vertical-align: middle;
  line-height: 1em;
  flex-shrink: 0;
  color: currentColor;
}

.close-button .close {
  opacity: 0.8;
  transition: opacity var(--agnostic-timing-medium);
}

@media (prefers-reduced-motion) {
  .close-button:focus,
  .close-button .close {
    transition-duration: 0.001ms !important;
  }
}

.close-button:hover .close {
  opacity: 1;
}

.close-button-small {
  width: var(--fluid-18);
  height: var(--fluid-18);
}
.close-button-small > .close {
  width: 0.5625rem;
  height: 0.5625rem;
}

.close-button-large {
  width: var(--fluid-32);
  height: var(--fluid-32);
}
.close-button-large > .close {
  width: var(--fluid-16);
  height: var(--fluid-16);
}

.close-button-xlarge {
  width: var(--fluid-40);
  height: var(--fluid-40);
}
.close-button-xlarge > .close {
  width: var(--fluid-20);
  height: var(--fluid-20);
}

.collapse-panel {
  margin: 0;
  padding: var(--fluid-16);
}

.dialog h1 {
  margin: 0;
  /* Since this is in a modal we want to force it smaller */
  font-size: var(--agnostic-h3);
  font-weight: 400;
  line-height: 1;
  -webkit-margin-after: var(--fluid-16);
          margin-block-end: var(--fluid-16);
}
.dialog-form-demo > input {
  -webkit-margin-after: var(--fluid-24);
          margin-block-end: var(--fluid-24);
}

.dialog,
.dialog-overlay {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.dialog {
  z-index: 1001;
  display: flex;
}

.dialog[aria-hidden='true'] {
  display: none;
}

.dialog-overlay {
  background-color: rgba(50, 50, 50, 0.6);
  -webkit-animation: fade-in var(--agnostic-timing-fast) both;
          animation: fade-in var(--agnostic-timing-fast) both;
}

.dialog-content {
  margin: auto;
  z-index: 1001;
  position: relative;
  background-color: white;
}

.dialog-content {
  background-color: rgb(255, 255, 255);
  margin: auto;
  z-index: 1001;
  position: relative;
  -webkit-animation: fade-in var(--agnostic-timing-fast) both,
    slide-up var(--agnostic-timing-slow) var(--agnostic-timing-fast) both;
          animation: fade-in var(--agnostic-timing-fast) both,
    slide-up var(--agnostic-timing-slow) var(--agnostic-timing-fast) both;
  padding: var(--fluid-16);
  max-width: 90%;
  width: 600px;
  border-radius: var(--agnostic-radius);
  /* Bootstrap removes outline likely for some sort of edge case browser or something. If I
  manually put focus-visible I can trigger the outline, but I don't see how this would happen
  since focus is controller by JS in a11y-dialog -- something to keep an eye on though */
  /* outline: 0; */
}

@media screen and (min-width: 700px) {
  .dialog-content {
    padding: var(--fluid-32);
  }
}

@-webkit-keyframes fade-in {
  from {
    opacity: 0;
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
}

@-webkit-keyframes slide-up {
  from {
    transform: translateY(10%);
  }
}

@keyframes slide-up {
  from {
    transform: translateY(10%);
  }
}

/* Shared with AgnosticUI close buton so only need positioning and transition */
.dialog-close {
  position: absolute;
  top: var(--fluid-8);
  right: var(--fluid-8);
}

@media (prefers-reduced-motion: reduce) {
  .dialog-content {
    -webkit-animation: none;
            animation: none;
  }
}

@media only screen and (min-width: 576px) {
  .dialog-close {
    top: var(--fluid-12);
    right: var(--fluid-12);
  }
}

@media screen and (min-width: 768px) {
  .dialog-close {
    top: var(--fluid-16);
    right: var(--fluid-16);
  }
}

.disclose {
  -webkit-margin-after: var(--fluid-4);
          margin-block-end: var(--fluid-4);
}

.disclose-title {
  display: block;
  cursor: pointer;
  font-weight: 600;
  /* Required to position the icon absolutely */
  position: relative;
  color: inherit;
  transition: color var(--agnostic-timing-slow);
}

.disclose-bg .disclose-title {
  background-color: var(--agnostic-gray-light);
}

.disclose-panel {
  font-weight: 400;
}

.disclose-title,
.disclose-panel {
  margin: 0;
}
.disclose-title {
  padding: var(--fluid-8) var(--fluid-12);
}
.disclose-panel {
  padding: var(--fluid-16);
}

.disclose-title::webkit-details-marker {
  display: none;
}

.disclose-title:focus {
  box-shadow: 0 0 0 var(--agnostic-focus-ring-outline-width) var(--agnostic-focus-ring-color);
  /* Needed for High Contrast mode */
  outline: var(--agnostic-focus-ring-outline-width) var(--agnostic-focus-ring-outline-style)
    var(--agnostic-focus-ring-outline-color);
  transition: box-shadow var(--agnostic-timing-fast) ease-out;
}

.disclose-title::after {
  color: var(--agnostic-gray-dark);
  content: '\203A';
  position: absolute;
  right: var(--fluid-12);
  top: 0;
  bottom: 0;
  /* Chevron thinning :) */
  font-size: var(--fluid-32);
  line-height: 1;
  font-weight: 100;
  transition: transform var(--agnostic-timing-slow);
  transform: rotate(0);
}

@media (prefers-reduced-motion: reduce) {
  .disclose-title,
  .disclose-title:focus,
  .disclose-title::after {
    transition: none;
  }
}

.disclose[open] > .disclose-title::after {
  transform: rotate(90deg);
}

.header,
.header-base {
  display: block;
}

.header-base img,
.header img {
  max-width: 100%;
  height: auto;
}

.header,
.header-skin {
  background-color: var(--agnostic-header-background-color, var(--agnostic-light));
  box-shadow: var(--agnostic-header-box-shadow-hor, 0) var(--agnostic-header-box-shadow-ver, 1px)
    var(--agnostic-header-box-shadow-blur, 5px) var(--agnostic-header-box-shadow-spread, 2px)
    var(--agnostic-header-box-shadow-color, rgba(0, 0, 0, 0.1));
  font-family: var(--agnostic-header-font-family, var(--agnostic-font-family));
  border-bottom: 1px solid var(--agnostic-header-border-color, var(--agnostic-gray-light));
  -webkit-padding-before: var(--agnostic-vertical-pad, 0.5rem);
          padding-block-start: var(--agnostic-vertical-pad, 0.5rem);
  -webkit-padding-after: var(--agnostic-vertical-pad, 0.5rem);
          padding-block-end: var(--agnostic-vertical-pad, 0.5rem);
  -webkit-padding-start: var(--fluid-24);
          padding-inline-start: var(--fluid-24);
  -webkit-padding-end: var(--fluid-24);
          padding-inline-end: var(--fluid-24);
}

.header-content {
  width: var(--agnostic-header-content-width, 960px);
  max-width: 100%;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
  flex-wrap: wrap;
}

/**
 * If you make your header sticky, you should likely consider that jump links
 * e.g. <h1 id="Jump-Here">... will tuck underneath the header! Here's a recommendation
 * for how to circumnavigate this issue via scroll-margin-top:
  h1[id],
  h2[id],
  h3[id],
  h4[id],
  h5[id],
  h6[id] {
    scroll-margin-top: 80px;
  }
 * In this case I have a 64px tall header so I've added 16px for clearance -- you'll need
 * to curate your own use case, but scroll-margin-top is super useful for this use case.
 */

.header-sticky {
  position: relative;
  top: 0;
  z-index: 10;
}

@media (min-width: 960px) {
  .header-sticky {
    position: sticky;
  }

  .header-content {
    flex-direction: row;
    justify-content: space-between;
  }
}

/* Goes on the <ul> */
.header-nav {
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
}

@media (min-width: 960px) {
  .header-nav {
    flex-direction: row;
  }
}

.header-nav-item {
  display: inline-block;
}
.header-nav-item:not(:last-child) {
  -webkit-margin-end: initial;
          margin-inline-end: initial;
  -webkit-margin-after: var(--fluid-8);
          margin-block-end: var(--fluid-8);
}

.header-nav-item a {
  color: var(--agnostic-header-color, var(--agnostic-font-color));
  text-decoration: none;
}

@media (min-width: 960px) {
  .header-nav-item:not(:last-child) {
    -webkit-margin-end: var(--agnostic-header-nav-spacing, var(--fluid-32));
            margin-inline-end: var(--agnostic-header-nav-spacing, var(--fluid-32));
    -webkit-margin-after: initial;
            margin-block-end: initial;
  }
}

.icon-base,
.icon {
  /* display: inline-block; */
  display: inline-flex;
  margin: auto;
  text-align: center;
  /* Ensures no "stretching" of icons to reach 100% of container's width */
  max-width: 100%;
  /* Ensure SVGs don't have click events -- typically we want enclosing button to handle */
  pointer-events: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.icon-skin,
.icon {
  fill: currentcolor;
  width: var(--fluid-16);
  height: var(--fluid-16);
}

.icon-14 {
  width: var(--fluid-14);
  height: var(--fluid-14);
}
.icon-16 {
  width: var(--fluid-16);
  height: var(--fluid-16);
}
.icon-18 {
  width: var(--fluid-18);
  height: var(--fluid-18);
}
.icon-20 {
  width: var(--fluid-20);
  height: var(--fluid-20);
}
.icon-24 {
  width: var(--fluid-24);
  height: var(--fluid-24);
}
.icon-32 {
  width: var(--fluid-32);
  height: var(--fluid-32);
}
.icon-36 {
  width: var(--fluid-36);
  height: var(--fluid-36);
}
.icon-40 {
  width: var(--fluid-40);
  height: var(--fluid-40);
}
.icon-48 {
  width: var(--fluid-48);
  height: var(--fluid-48);
}
.icon-56 {
  width: var(--fluid-56);
  height: var(--fluid-56);
}
.icon-64 {
  width: var(--fluid-64);
  height: var(--fluid-64);
}
.icon-info {
  color: var(--agnostic-primary);
}
.icon-success {
  color: var(--agnostic-action);
}
.icon-warning {
  color: var(--agnostic-warning-border-accent);
}
.icon-error {
  color: var(--agnostic-error);
}

.input-base,
.input {
  /* Note this cannot be user-select: none else mobile safari won't accept input:
  https://stackoverflow.com/questions/49889003/cannot-write-into-input-field-on-safari/49901069
   */
  -webkit-user-select: initial;
     -moz-user-select: initial;
      -ms-user-select: initial;
          user-select: initial;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  box-sizing: border-box;
  /* Use the same color for the cursor */
  caret-color: currentColor;
}

.label,
.label-base {
  padding: 0;
  border: 0;
  box-sizing: border-box;
  font-family: inherit;
}

/* Electing to scope these as opposed to doing :root level definitions */
.field-help,
.field-help-large,
.field-help-small,
.field-error,
.field-error-large,
.field-error-small,
.label-skin,
.label,
.input-addon-container,
.input-small,
.input-large,
.input-skin,
.input-underlined,
.input-underlined-bg,
.input {
  color: var(--agnostic-font-color, var(--agnostic-dark));
  font-family: var(--agnostic-font-family);
  font-weight: var(--agnostic-font-weight, 300);
  font-size: var(--agnostic-font-size, 1rem);
  line-height: var(--agnostic-line-height, var(--fluid-20, 1.25rem));
  width: 100%;
  max-width: 100%;
}

.input-skin,
.input {
  /* seems like a reasonable default as chrome picks `outset` which results in a weird 3d effect */
  border-style: solid;
  /* this can be overriden, but it might mess with the balance of the button heights across variants */
  border-width: var(--agnostic-input-border-size, 1px);
  border-color: var(--agnostic-input-border-color, var(--agnostic-gray-light));
  /* these can be overriden, but it might mess with the balance of the inputheights across variants */
  -webkit-padding-before: var(--agnostic-input-vertical-pad, 0.5rem);
          padding-block-start: var(--agnostic-input-vertical-pad, 0.5rem);
  -webkit-padding-after: var(--agnostic-input-vertical-pad, 0.5rem);
          padding-block-end: var(--agnostic-input-vertical-pad, 0.5rem);
  -webkit-padding-start: var(--agnostic-input-side-padding, 0.75rem);
          padding-inline-start: var(--agnostic-input-side-padding, 0.75rem);
  -webkit-padding-end: var(--agnostic-input-side-padding, 0.75rem);
          padding-inline-end: var(--agnostic-input-side-padding, 0.75rem);

  /* Note we only want to set properties that we actually want
  to transition in. For example, if we transition "all", the
  inputs will "grow in" on page load—not a happy effect :) */
  transition-property: box-shadow;
  transition-duration: var(--agnostic-input-timing, var(--agnostic-timing-medium));
}

.label {
  display: inline-block;
  /* Provided --agnostic-input-vertical-pad isn't overriden we'll get 20px
  label w/a 6px margin then a 38px input = 64 which is on the 8pt grid */
  -webkit-margin-before: 0;
          margin-block-start: 0;
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: 0;
          margin-inline-end: 0;
  -webkit-margin-after: var(--agnostic-input-label-pad, 0.375rem);
          margin-block-end: var(--agnostic-input-label-pad, 0.375rem);
  vertical-align: initial;
}

/* Reset labels and field errors to be 2px less then input font size */
.field-help,
.field-error,
.label,
.label-skin {
  font-size: calc(var(--agnostic-font-size, 1rem) - 2px);
}

.label-inline,
.input-inline {
  width: auto;
}

/* When inlined, the margin-block-end will throw the label off-center with adjacent input */
.label-inline {
  -webkit-margin-before: 0;
          margin-block-start: 0;
  -webkit-margin-after: 0;
          margin-block-end: 0;
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: var(--agnostic-input-side-padding, 0.75rem);
          margin-inline-end: var(--agnostic-input-side-padding, 0.75rem);
}

/**
* Placeholder
*/
.input::-webkit-input-placeholder {
  color: currentColor;
  opacity: 0.5;
  -webkit-transition: opacity var(--agnostic-timing-fast) ease-out;
  transition: opacity var(--agnostic-timing-fast) ease-out;
}

.input::-moz-placeholder {
  color: currentColor;
  opacity: 0.5;
  -moz-transition: opacity var(--agnostic-timing-fast) ease-out;
  transition: opacity var(--agnostic-timing-fast) ease-out;
}

.input::-ms-placeholder {
  color: currentColor;
  opacity: 0.5;
  -ms-transition: opacity var(--agnostic-timing-fast) ease-out;
  transition: opacity var(--agnostic-timing-fast) ease-out;
}

.input:-ms-placeholder {
  color: currentColor;
  opacity: 0.5;
  -ms-transition: opacity var(--agnostic-timing-fast) ease-out;
  transition: opacity var(--agnostic-timing-fast) ease-out;
}

/**
* Underlined inputs
*/
.input-underlined {
  border-top: 0;
  border-left: 0;
  border-right: 0;
  border-color: var(--agnostic-input-underlined-color, var(--agnostic-gray-mid-dark));
  background-color: transparent;
}

.input-underlined-bg {
  background-color: var(--agnostic-input-underlined-bg-color, var(--agnostic-gray-extra-light));
}

/**
* Rounded inputs
*/
.input-rounded {
  border-radius: var(--agnostic-radius, 0.25rem);
}

/**
 * Errors
 * We provide a class-based approach to setting errors which means we do
 * not support :invalid, so it requires custom use of html4 validation API
 * (see https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation
 * of the example in corresponding input.html file). The reason I elected to
 * not include :invalid, is it seems to result in "shouting" at the user as
 * I did not find an easy way to only kick in errors after a certain number
 * of characters have been type (blur is actually better but I did not
 * implement that in the contrived example).
 */
.label-error {
  color: var(--agnostic-input-error-color, var(--agnostic-error));
}
.input-error {
  border-color: var(--agnostic-input-error-color, var(--agnostic-error));
}

.label-error,
.field-error,
.field-error-small,
.field-error-large {
  color: var(--agnostic-input-error-color, var(--agnostic-error));
}

.field-help,
.field-help-small,
.field-help-large {
  color: var(--agnostic-input-help-color, var(--agnostic-gray-dark));
}

.field-help,
.field-help-small,
.field-help-large,
.field-error,
.field-error-small,
.field-error-large {
  display: inline-block;
  width: 100%;
  -webkit-margin-before: calc(var(--agnostic-input-vertical-pad, 0.5rem) / 2);
          margin-block-start: calc(var(--agnostic-input-vertical-pad, 0.5rem) / 2);
}

/**
  * Sizes
  */
.input-large {
  font-size: calc(var(--agnostic-font-size, 1rem) + 0.25rem);
  line-height: 1.6rem;
}

.field-help-large,
.field-error-large,
.label-large {
  /* We initially remove -2px from font-size so setting to font-size essentially adds the 2px back */
  font-size: var(--agnostic-font-size, 1rem);
}

.input-small {
  font-size: calc(var(--agnostic-font-size, 1rem) - 0.25rem);
  line-height: 1rem;
}

.field-help-small,
.field-error-small,
.label-small {
  font-size: calc(var(--agnostic-font-size, 1rem) - 0.25rem);
}

.input:focus {
  box-shadow: 0 0 0 var(--agnostic-focus-ring-outline-width) var(--agnostic-focus-ring-color);
  /* Needed for High Contrast mode */
  outline: var(--agnostic-focus-ring-outline-width) var(--agnostic-focus-ring-outline-style)
    var(--agnostic-focus-ring-outline-color);
  transition: box-shadow var(--agnostic-timing-fast) ease-out;
}

/* Set the focus to transparent when there's an error since we use
borders that visually conflict. */
.input-error:focus {
  box-shadow: 0 0 0 3px transparent;
}

/*
* Disabled State
*
* The disabled state uses the class .disabled,
* and the form attribute disabled="disabled".
* The use of !important is only added because this is a state
* that must be applied to all inputs when in a disabled state.
*/
.input.disabled, /* DEPRECATED -- TODO remove class based disabled */
.input:disabled {
  background: var(--agnostic-input-disabled-bg, var(--agnostic-disabled-bg)) !important;
  color: var(--agnostic-input-disabled-color, var(--agnostic-disabled-color)) !important;
  -webkit-appearance: none !important;
     -moz-appearance: none !important;
          appearance: none !important;
  box-shadow: none !important;
  cursor: not-allowed !important;
  opacity: 0.8 !important;
}

@media screen and (-ms-high-contrast: active) {
  /* High contrast mode outline hacks */
  .input:disabled {
    outline: 2px solid transparent;
    outline-offset: -2px;
  }
}

/**
 * Input "has addon"
 */

.input-addon-container {
  display: flex;
  position: relative;
  width: 100%;
  /* Maybe I should have defined another css prop for addon adjustments but trying
  to avoid any extra variable explosion there--will need to keep an eye on this */
  --addon-padding: calc(var(--agnostic-input-side-padding, 0.75rem) * 1.5);
}

.input-has-left-addon,
.input-has-right-addon {
  flex: 1;
}

.input-has-left-addon {
  -webkit-padding-start: calc(var(--addon-padding) * 2.25);
          padding-inline-start: calc(var(--addon-padding) * 2.25);
}

.input-has-right-addon {
  -webkit-padding-end: calc(var(--addon-padding) * 2.25);
          padding-inline-end: calc(var(--addon-padding) * 2.25);
}

@media (prefers-reduced-motion) {
  .input::-webkit-input-placeholder,
  .input::-moz-placeholder,
  .input::-ms-placeholder,
  .input:-ms-placeholder,
  .input-skin,
  .input:focus,
  .input {
    transition-duration: 0.001ms !important;
  }
}

/*
* Input addons e.g. icons inside the input
*/
.input-addon-right,
.input-addon-left {
  /* Maybe I should have defined another css prop for addon adjustments but trying
  to avoid any extra variable explosion there--will need to keep an eye on this */
  --addon-padding: calc(var(--agnostic-input-side-padding) * 1.5);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.input-addon-left {
  left: var(--addon-padding);
}

.input-addon-right {
  right: var(--addon-padding);
}

/* https://stackoverflow.com/questions/45507970/how-can-i-change-the-color-of-a-progress-bar-value-in-html */
/**
 * Most examples show styling directly to the <progress> element itself. However,
 * my tests (chrome, ff, safari on mac mini 2020), showed it's perfectly possibly
 * to use a class selector instead. The reason I'd prefer that here, is that I can
 * then use CSS Modules composes against .progress (e.g. for React/Vue components)
 */
.progress {
  -webkit-appearance: none;
  height: var(--agnostic-progress-height, var(--fluid-10, 0.625rem));
  width: 100%;
  border: none;
  /* Next couple of rules are required to be here for FF (but not chrome) */
  background-color: var(--agnostic-progress-background, var(--agnostic-gray-light, #ededed));
  border-radius: var(--agnostic-progress-radius, var(--fluid-10, 0.625rem));
}

.progress[value]::-webkit-progress-bar {
  /* In my tests chrome requires this whereas FF wants it on the progress {} rule */
  background-color: var(--agnostic-progress-background, var(--agnostic-gray-light, #ededed));
  border-radius: var(--agnostic-progress-radius, var(--fluid-10, 0.625rem));
}

.progress[value]::-webkit-progress-value {
  background-color: var(--agnostic-progress-fill-color, var(--agnostic-primary, #077acb));
  border-radius: var(--agnostic-progress-radius, var(--fluid-10, 0.625rem));
}

.progress[value]::-moz-progress-bar {
  background-color: var(--agnostic-progress-fill-color, var(--agnostic-primary, #077acb));
  border-radius: var(--agnostic-progress-radius, var(--fluid-10, 0.625rem));
}

.progress[value]::-ms-fill {
  background-color: var(--agnostic-progress-fill-color, var(--agnostic-primary, #077acb));
  border-radius: var(--agnostic-progress-radius, var(--fluid-10, 0.625rem));
}

.select,
.select-base {
  display: block;
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.select,
.select-skin {
  padding: var(--fluid-6) var(--fluid-32) var(--fluid-6) var(--fluid-12);
  -moz-padding-start: calc(var(--fluid-12) - 3px);
  font-size: var(--fluid-16);
  font-weight: 400;
  line-height: 1.5;
  color: var(--agnostic-dark);
  background-color: white;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23333330' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right var(--fluid-12) center;
  background-size: var(--fluid-16) var(--fluid-12);
  border: 1px solid var(--agnostic-checkbox-border-color, var(--agnostic-gray-light));
  border-radius: var(--agnostic-radius);
  transition: border-color var(--agnostic-timing-fast) ease-in-out,
    box-shadow var(--agnostic-timing-fast) ease-in-out;
}

.select:focus {
  border-color: var(--agnostic-focus-ring-color);
  box-shadow: 0 0 0 var(--agnostic-focus-ring-outline-width) var(--agnostic-focus-ring-color);
  /* Needed for High Contrast mode */
  outline: var(--agnostic-focus-ring-outline-width) var(--agnostic-focus-ring-outline-style)
    var(--agnostic-focus-ring-outline-color);
  transition: box-shadow var(--agnostic-timing-fast) ease-out;
}

.select-base,
.select:disabled {
  background-color: var(--agnostic-disabled-bg);
}
.select-base,
.select:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 var(--agnostic-dark);
}

@media (prefers-reduced-motion: reduce) {
  .select-base,
  .select:focus,
  .select {
    transition: none;
  }
}

.select-small {
  padding-top: var(--fluid-4);
  padding-bottom: var(--fluid-4);
  padding-left: var(--fluid-8);
  font-size: var(--fluid-14);
  border-radius: 0.2rem;
}

.select-large {
  padding-top: var(--fluid-8);
  padding-bottom: var(--fluid-8);
  padding-left: var(--fluid-16);
  font-size: var(--fluid-20);
  border-radius: 0.3rem;
}

/**
 * Switch
 * 
 * This switch is inspired by Scott Ohara's checkbox switch:
 * https://scottaohara.github.io/a11y_styled_form_controls/src/checkbox--switch/
 */
.switch-container {
  display: block;
  /* TODO: Hopefully this doesn't become a problem but since we use absolute
  positioning extensively, we need some way to have adjacent spaced lines */
  min-height: 2.25rem;
  width: 100%;
  padding: 0.5rem;
  position: relative;
}

.switch-container:hover {
  cursor: pointer;
}

/* using the before/after pseudo elements of the span to create the "switch" */
.switch:before,
.switch:after {
  border: 1px solid var(--agnostic-gray-mid-dark);
  content: '';
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

/* styling specific to the knob of the switch */
.switch:after {
  background: #fff;
  border-radius: 100%;
  width: 1.4rem;
  height: 1.4rem;
  right: 1.4rem;
  transition: right var(--agnostic-timing-fast) ease-in-out;
}

/* styling specific to the knob "container" */
.switch:before {
  background: #eee;
  border-radius: 1.75rem;
  width: 2.75rem;
  height: 1.75rem;
  right: 0.25rem;
  transition: background var(--agnostic-timing-medium) ease-in-out;
}

/* Sizes */
.switch-small:after {
  width: 1.25rem;
  height: 1.25rem;
  right: 1.125rem;
}

.switch-small:before {
  width: 2.25rem;
  height: 1.5rem;
}

.switch-large:after {
  width: 1.65rem;
  height: 1.65rem;
  right: 1.65rem;
}

.switch-large:before {
  width: 3.25rem;
  height: 2rem;
}

.switch-border:before {
  border: 1px solid var(--agnostic-primary);
}

.switch-action.switch-border:before {
  border: 1px solid var(--agnostic-action);
}

/* From: https://scottaohara.github.io/a11y_styled_form_controls/src/checkbox--switch/
  hide the actual checkbox from view, but not from keyboards or ATs.
  Instead of standard visually hidden styling, instead set opacity to
  almost 0 (not zero for ChomeVox legacy bug), pointer-events none, and
  then set to full height/width of container element so that VO focus
  ring outlines the component, instead of a tiny box within the component
*/
.switch-input {
  margin: 0;
  opacity: 0.0001;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.switch-input:focus + .switch:before {
  box-shadow: 0 0 0 var(--agnostic-focus-ring-outline-width) var(--agnostic-focus-ring-color);
}

/* ---- CHECKED STATE ----- */

/* change the position of the knob to indicate it has been checked*/
.switch-input:checked + .switch:after {
  right: 0.5em;
}
.switch-input:checked + .switch-small:after {
  right: 0.425rem;
}

/* update the color of the "container" to further visually indicate state */
.switch-input:checked + .switch:not(.switch-border):before {
  background: var(--agnostic-primary);
}

.switch-input:checked + .switch-action:not(.switch-border):before {
  background: var(--agnostic-action);
}

/* Border switch on checked the thumb gets primary or action bg respectively */
.switch-input:checked + .switch-border:after {
  background: var(--agnostic-primary);
}
.switch-input:checked + .switch-action.switch-border:after {
  background: var(--agnostic-action);
}

/* Switch label on right */

/* Flips transition target to left to preserve our smooth transitions */
.switch-right .switch:after {
  transition: left var(--agnostic-timing-fast) ease-in-out;
}

.switch-right .switch-input:checked + .switch:after {
  right: initial;
  left: 0.5em;
}
.switch-right .switch-input:checked + .switch-small:after {
  right: initial;
  left: 0.425rem;
}

/* We have to flip the positioning when the label is on the right of switch */
.switch-right .switch:before {
  right: initial;
  left: 0.25rem;
}

.switch-right .switch::after {
  right: initial;
  left: 1.4rem;
}

.switch-right .switch-label {
  position: absolute;
  top: 0;
  right: 0;
}

/* Switch sizes w/label on right -- I expect SMACSS so .switch .switch-small
classes should both exist so the right: initial was taken care of above :) */
.switch-right .switch-small:after {
  left: 1.125rem;
}

.switch-right .switch-large:after {
  left: 1.65rem;
}

/* Disabled aka :disabled is not actually supported for <label>
element so we use attribute selector for that:
https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled#:~:text=The%20disabled%20attribute%20is%20supported,control%20or%20its%20descendant%20controls.
*/
.switch-input[disabled] + .switch,
.switch-input[disabled] + .switch-label,
.switch-container.disabled {
  color: var(--agnostic-input-disabled-color, var(--agnostic-disabled-color)) !important;
  -webkit-appearance: none !important;
     -moz-appearance: none !important;
          appearance: none !important;
  box-shadow: none !important;
  cursor: not-allowed !important;
  opacity: 0.8 !important;
}

@media screen and (-ms-high-contrast: active) {
  .switch:after {
    background-color: windowText;
  }

  /* High contrast mode outline hacks */
  .switch-input[disabled] + .switch-label,
  .switch-container.disabled {
    outline: 2px solid transparent;
    outline-offset: -2px;
  }
}

@media (prefers-reduced-motion) {
  .switch:after,
  .switch:before {
    transition-duration: 0.001ms !important;
  }
}

.table {
  --table-bg: transparent;
  --table-accent-bg: transparent;
  --table-striped-color: var(--agnostic-dark);
  --table-striped-bg: rgba(0, 0, 0, 0.025);
  --table-active-color: var(--agnostic-dark);
  --table-active-bg: rgba(0, 0, 0, 0.015);
  --table-hoverable-color: var(--agnostic-dark);
  --table-hoverable-bg: rgba(0, 0, 0, 0.03);
  width: 100%;
  margin-bottom: var(--fluid-16);
  color: var(--agnostic-dark);
  vertical-align: top;
  border-color: var(--agnostic-checkbox-border-color, var(--agnostic-gray-light));
}
.table > :not(caption) > * > * {
  padding: var(--fluid-8) var(--fluid-8);
  background-color: var(--table-bg);
  border-bottom-width: 1px;
  /* 4th is spread --table-accent-bg will gets reset for active, hover, striped */
  box-shadow: inset 0 0 0 9999px var(--table-accent-bg);
}

.table > tbody {
  vertical-align: inherit;
}

.table > thead {
  vertical-align: bottom;
}

.table thead th {
  font-weight: 600;
}

.table-caps thead th {
  font-size: var(--fluid-12);
  text-transform: uppercase;
}

.table tbody td,
.table tbody th {
  font-weight: 400;
}

.table > :not(thead):not(caption) {
  border-top: var(--fluid-2) solid var(--agnostic-gray-light);
}

.caption-top {
  caption-side: top;
}

.caption-bottom {
  caption-side: bottom;
}
.caption-bottom,
.caption-top {
  -webkit-padding-before: var(--fluid-12);
          padding-block-start: var(--fluid-12);
  -webkit-padding-after: var(--fluid-12);
          padding-block-end: var(--fluid-12);
  /* Takes writing mode into account -- (mdn) same as left if direction is left-to-right and right if direction is right-to-left */
  text-align: start;
}

.caption-end {
  text-align: end;
}

.table-small > :not(caption) > * > * {
  padding: var(--fluid-4) var(--fluid-4);
}
.table-large > :not(caption) > * > * {
  padding: var(--fluid-12) var(--fluid-12);
}
.table-xlarge > :not(caption) > * > * {
  padding: var(--fluid-18) var(--fluid-18);
}

.table-bordered > :not(caption) > * {
  border-width: 1px 0;
}

.table-bordered > :not(caption) > * > * {
  border-width: 0 1px;
}

.table-borderless > :not(caption) > * > * {
  border-bottom-width: 0;
}
.table-borderless > :not(:first-child) {
  border-top-width: 0;
}

.table-striped > tbody > tr:nth-of-type(odd) > * {
  --table-accent-bg: var(--table-striped-bg);
  color: var(--table-striped-color);
}

.table-active {
  --table-accent-bg: var(--table-active-bg);
  color: var(--table-active-color);
}

.table-hoverable > tbody > tr:hover > * {
  --table-accent-bg: var(--table-hoverable-bg);
  color: var(--table-hoverable-color);
}

/* Stacked tables */
.table-stacked thead {
  display: none;
}

.table-stacked tr,
.table-stacked th,
.table-stacked td {
  display: block;
  width: 100%;
}

.table-stacked th,
.table-stacked td {
  border-bottom-width: 0;
}
.table-stacked td[data-label] {
  padding-bottom: var(--fluid-12);
}

.table-stacked tr {
  border-bottom: var(--fluid-2) solid var(--agnostic-gray-light);
  border-top-width: 0;
}

.table-stacked th[data-label]:before,
.table-stacked td[data-label]:before {
  content: attr(data-label);
  display: block;
  font-weight: 600;
  margin: -0.5rem -1rem 0;
  padding: var(--fluid-12) var(--fluid-16) var(--fluid-6);
}

.table-stacked tr th:first-child,
.table-stacked tr td:first-child {
  border-top-width: 0;
}

.table-stacked tr:nth-child(odd) td,
.table-stacked tr:nth-child(odd) th {
  background-color: inherit;
}

.table-stacked tr:first-child th:first-child,
.table-stacked tr:first-child td:first-child {
  border-top: var(--fluid-2) solid var(--agnostic-gray-light);
}
.table-stacked th[data-label],
.table-stacked td[data-label] {
  padding-bottom: var(--fluid-12);
}

/* As soon as there's not enough width, it will kick in horizontal scrolling */
.table-responsive {
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

/* Table is responsive only "up to" the breakpoint. Above it will not scroll */
@media (max-width: 576px) {
  .table-responsive-small {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
}

@media (max-width: 768px) {
  .table-responsive-medium {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
}

@media (max-width: 992px) {
  .table-responsive-large {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
}

@media (max-width: 1200px) {
  .table-responsive-xlarge {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
}

/* TODO -- should we use these for .nav? */
.tabs {
  display: flex;
  flex-direction: column;
}
.tabs-vertical {
  flex-direction: row;
}

.tab-list,
.tab-list-base {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  flex: 0 0 auto;
}
/* In vertical orientation we want our tab buttons to stack */
.tabs-vertical .tab-list,
.tabs-vertical .tab-base {
  flex-direction: column;
  border: none;
}

.tab-list,
.tab-skinned {
  -webkit-padding-start: 0;
          padding-inline-start: 0;
  -webkit-margin-after: 0;
          margin-block-end: 0;
  border-bottom: var(--agnostic-tabs-border-size, 1px) solid
    var(--agnostic-tabs-bgcolor, var(--agnostic-gray-light));
  transition-property: all;
  transition-duration: var(--agnostic-timing-medium);
}

/* We can ask for .tab-button which is base and skin combined, or, we can utilize .tab-button-base
if we'd like to only blank out buttons but otherwise skin ourselves. */
.tab-button,
.tab-button-base {
  /* Blank out the button */
  background-color: transparent;
  border: 0;
  border-radius: 0;
  box-shadow: none;
  /* Reset margins/padding; this will get added back if it's a "skinned" tab button. However, we have
  a use case where a tab-button is wrapping a faux button. For that, we don't want margins/padding because
  the faux button provides that. */
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: 0;
          margin-inline-end: 0;
  -webkit-padding-before: 0;
          padding-block-start: 0;
  -webkit-padding-after: 0;
          padding-block-end: 0;
  -webkit-padding-start: 0;
          padding-inline-start: 0;
  -webkit-padding-end: 0;
          padding-inline-end: 0;
}

/* We pull back the 2nd subsequent tabs to remove the double border */
.tab-button:not(:first-of-type),
.tab-button-base:not(:first-of-type) {
  -webkit-margin-start: -1px;
          margin-inline-start: -1px;
}

.tab-button,
.tab-button-skin {
  display: block;
  /* Since this is a "skinned tab button" we add our padding here to previously "reset" .tab-button-base */
  -webkit-padding-before: var(--agnostic-vertical-pad, 0.5rem);
          padding-block-start: var(--agnostic-vertical-pad, 0.5rem);
  -webkit-padding-after: var(--agnostic-vertical-pad, 0.5rem);
          padding-block-end: var(--agnostic-vertical-pad, 0.5rem);
  -webkit-padding-start: var(--agnostic-side-padding, 0.75rem);
          padding-inline-start: var(--agnostic-side-padding, 0.75rem);
  -webkit-padding-end: var(--agnostic-side-padding, 0.75rem);
          padding-inline-end: var(--agnostic-side-padding, 0.75rem);
  font-family: var(--agnostic-btn-font-family, var(--agnostic-font-family));
  font-weight: var(--agnostic-btn-font-weight, 400);
  font-size: var(--agnostic-btn-font-size, 1rem);
  /* this can be overriden, but it might mess with the balance of the button heights across variants */
  line-height: var(--agnostic-line-height, var(--fluid-20, 1.25rem));
  color: var(--agnostic-tabs-primary, var(--agnostic-primary));
  text-decoration: none;
  transition: color var(--agnostic-timing-fast) ease-in-out,
    background-color var(--agnostic-timing-fast) ease-in-out,
    border-color var(--agnostic-timing-fast) ease-in-out;
}

.tab-borderless {
  border: none !important;
}

.tab-button-large {
  -webkit-padding-before: calc(var(--agnostic-input-side-padding) * 1.25);
          padding-block-start: calc(var(--agnostic-input-side-padding) * 1.25);
  -webkit-padding-after: calc(var(--agnostic-input-side-padding) * 1.25);
          padding-block-end: calc(var(--agnostic-input-side-padding) * 1.25);
  -webkit-padding-start: calc(var(--agnostic-input-side-padding) * 1.75);
          padding-inline-start: calc(var(--agnostic-input-side-padding) * 1.75);
  -webkit-padding-end: calc(var(--agnostic-input-side-padding) * 1.75);
          padding-inline-end: calc(var(--agnostic-input-side-padding) * 1.75);
}

.tab-button-xlarge {
  -webkit-padding-before: calc(var(--agnostic-input-side-padding) * 2);
          padding-block-start: calc(var(--agnostic-input-side-padding) * 2);
  -webkit-padding-after: calc(var(--agnostic-input-side-padding) * 2);
          padding-block-end: calc(var(--agnostic-input-side-padding) * 2);
  -webkit-padding-start: calc(var(--agnostic-input-side-padding) * 3);
          padding-inline-start: calc(var(--agnostic-input-side-padding) * 3);
  -webkit-padding-end: calc(var(--agnostic-input-side-padding) * 3);
          padding-inline-end: calc(var(--agnostic-input-side-padding) * 3);
}
.tab-item.tab-button {
  -webkit-margin-after: -1px;
          margin-block-end: -1px;
  background: 0 0;
  border: 1px solid transparent;
  border-top-left-radius: var(--agnostic-tabs-radius, 0.25rem);
  border-top-right-radius: var(--agnostic-tabs-radius, 0.25rem);
}

.tab-item.tab-button.active {
  color: var(--agnostic-gray-dark);
  /* TODO -- update these colors to use css properties */
  background-color: #fff;
  border-color: var(--agnostic-gray-light) var(--agnostic-gray-light) #fff;
}

.tab-item:hover,
.tab-button:focus {
  border-color: var(--agnostic-focus-ring-outline-width) var(--agnostic-focus-ring-outline-width)
    var(--agnostic-gray-light);
  isolation: isolate;
  cursor: pointer;
}

.tabs-vertical .tab-button {
  border: none;
}

.tab-button:disabled {
  color: var(--agnostic-tabas-disabled-bg, var(--agnostic-gray-mid-dark));
  background-color: transparent;
  border-color: transparent;
  opacity: 0.8;
}

/**
 * Elects to additively use the AgnosticUI custom focus ring alongside the border
 * we already add above. It just makes things look more consistent across components.
 * For example, when we tab into the panels and links within.
 */
.tab-panel:focus,
.tab-button:focus {
  box-shadow: 0 0 0 var(--agnostic-focus-ring-outline-width) var(--agnostic-focus-ring-color);
  /* Needed for High Contrast mode */
  outline: var(--agnostic-focus-ring-outline-width) var(--agnostic-focus-ring-outline-style)
    var(--agnostic-focus-ring-outline-color);
  transition: box-shadow var(--agnostic-timing-fast) ease-out;
}

@media screen and (prefers-reduced-motion: reduce), (update: slow) {
  .tab-button:focus,
  .tab-panel:focus,
  .tab-list,
  .tab-skinned,
  .tab-button {
    transition-duration: 0.001ms !important;
  }
}

.tag-base,
.tag {
  display: inline-flex;
  justify-content: center;
  white-space: nowrap;
}
.tag-skin,
.tag {
  background-color: var(--agnostic-gray-light);
  color: var(--agnostic-dark);
  font-size: var(--fluid-12);
  line-height: var(--agnostic-line-height, var(--fluid-20, 1.25rem));
  -webkit-padding-before: var(--fluid-2);
          padding-block-start: var(--fluid-2);
  -webkit-padding-after: var(--fluid-2);
          padding-block-end: var(--fluid-2);
  -webkit-padding-start: var(--fluid-8);
          padding-inline-start: var(--fluid-8);
  -webkit-padding-end: var(--fluid-8);
          padding-inline-end: var(--fluid-8);
}

.tag-info {
  background: var(--agnostic-primary-light);
  color: var(--agnostic-primary-dark);
}
.tag-warning {
  background: var(--agnostic-warning-light);
  color: var(--agnostic-warning-dark);
}
.tag-error {
  background: var(--agnostic-error-light);
  color: var(--agnostic-error-dark);
}
.tag-success {
  background: var(--agnostic-action-light);
  color: var(--agnostic-action-from);
}
.tag-upper {
  font-size: var(--fluid-10);
  text-transform: uppercase;
}
.tag-circle {
  border-radius: 50%;
}
.tag-round {
  border-radius: var(--agnostic-radius);
}
.tag-pill {
  border-radius: 200px;
}

/*# sourceMappingURL=data:application/json;base64,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QUNsRSxzQ0FBbUM7VUFBbkMsbUNBQW1DO0VBQ25DLHFDQUFpQztVQUFqQyxpQ0FBaUM7RUFDakMscUNBQW9DO1VBQXBDLG9DQUFvQztFQUNwQyxtQ0FBa0M7VUFBbEMsa0NBQWtDO0FBQ3BDOztBQUVBO0VBQ0UseUNBQXlDO0VBQ3pDLG1DQUFtQztBQUNyQztBQUNBO0VBQ0UseUNBQXlDO0VBQ3pDLG1DQUFtQztBQUNyQztBQUNBO0VBQ0UsdUNBQXVDO0VBQ3ZDLGlDQUFpQztBQUNuQztBQUNBO0VBQ0Usd0NBQXdDO0VBQ3hDLGtDQUFrQztBQUNwQztBQUNBO0VBQ0UsMEJBQTBCO0VBQzFCLHlCQUF5QjtBQUMzQjtBQUNBO0VBQ0Usa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxxQ0FBcUM7QUFDdkM7QUFDQTtFQUNFLG9CQUFvQjtBQUN0QiIsImZpbGUiOiJjb21wb25lbnRzLnByZWZpeGVkLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hbGVydC1iYXNlLFxuLmFsZXJ0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xufVxuLmFsZXJ0LWVuZCB7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG4uYWxlcnQtc2tpbixcbi5hbGVydCB7XG4gIHBhZGRpbmc6IHZhcigtLWFnbm9zdGljLXNpZGUtcGFkZGluZyk7XG4gIGJhY2tncm91bmQ6IHZhcigtLWFnbm9zdGljLWdyYXktbGlnaHQpO1xufVxuXG4uYWxlcnQtaWNvbiB7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1ncmF5LW1pZC1kYXJrKTtcbiAgbWFyZ2luLWlubGluZS1lbmQ6IHZhcigtLWZsdWlkLTgpO1xuICAvKiBFbnN1cmVzIG91ciBpY29uIGRvZXNuJ3QgZmxleCBncm93IG9yIHNocmluayAqL1xuICBmbGV4OiAwIDAgdmFyKC0tZmx1aWQtMjQpO1xufVxuXG4uYWxlcnQtYm9yZGVyLXRvcCB7XG4gIGJvcmRlci10b3A6IHZhcigtLWZsdWlkLTgpIHNvbGlkIHZhcigtLWFnbm9zdGljLWdyYXktbWlkLWRhcmspO1xufVxuLmFsZXJ0LWJvcmRlci1sZWZ0IHtcbiAgYm9yZGVyLWxlZnQ6IHZhcigtLWZsdWlkLTgpIHNvbGlkIHZhcigtLWFnbm9zdGljLWdyYXktbWlkLWRhcmspO1xufVxuLmFsZXJ0LWJvcmRlci1ib3R0b20ge1xuICBib3JkZXItYm90dG9tOiB2YXIoLS1mbHVpZC04KSBzb2xpZCB2YXIoLS1hZ25vc3RpYy1ncmF5LW1pZC1kYXJrKTtcbn1cbi5hbGVydC1ib3JkZXItcmlnaHQge1xuICBib3JkZXItcmlnaHQ6IHZhcigtLWZsdWlkLTgpIHNvbGlkIHZhcigtLWFnbm9zdGljLWdyYXktbWlkLWRhcmspO1xufVxuXG4uYWxlcnQtYm9yZGVyLWFsbCB7XG4gIGJvcmRlcjogdmFyKC0tZmx1aWQtMikgc29saWQgdmFyKC0tYWdub3N0aWMtZ3JheS1taWQtZGFyayk7XG59XG5cbi5hbGVydC1yb3VuZGVkIHtcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0tYWdub3N0aWMtYWxlcnQtcmFkaXVzLCB2YXIoLS1hZ25vc3RpYy1yYWRpdXMsIDAuMjVyZW0pKTtcbn1cblxuLmFsZXJ0LXdhcm5pbmcge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1hZ25vc3RpYy13YXJuaW5nLWxpZ2h0KTtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLXdhcm5pbmctZGFyayk7XG59XG4uYWxlcnQtd2FybmluZy1pY29uIHtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLXdhcm5pbmctYm9yZGVyLWFjY2VudCk7XG4gIG1hcmdpbi1pbmxpbmUtZW5kOiB2YXIoLS1mbHVpZC04KTtcbiAgLyogRW5zdXJlcyBvdXIgaWNvbiBkb2Vzbid0IGZsZXggZ3JvdyBvciBzaHJpbmsgKi9cbiAgZmxleDogMCAwIHZhcigtLWZsdWlkLTI0KTtcbn1cbi5hbGVydC13YXJuaW5nLmFsZXJ0LWJvcmRlci10b3Age1xuICBib3JkZXItdG9wLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy13YXJuaW5nLWJvcmRlci1hY2NlbnQpO1xufVxuLmFsZXJ0LXdhcm5pbmcuYWxlcnQtYm9yZGVyLWxlZnQge1xuICBib3JkZXItbGVmdC1jb2xvcjogdmFyKC0tYWdub3N0aWMtd2FybmluZy1ib3JkZXItYWNjZW50KTtcbn1cbi5hbGVydC13YXJuaW5nLmFsZXJ0LWJvcmRlci1ib3R0b20ge1xuICBib3JkZXItYm90dG9tLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy13YXJuaW5nLWJvcmRlci1hY2NlbnQpO1xufVxuLmFsZXJ0LXdhcm5pbmcuYWxlcnQtYm9yZGVyLXJpZ2h0IHtcbiAgYm9yZGVyLXJpZ2h0LWNvbG9yOiB2YXIoLS1hZ25vc3RpYy13YXJuaW5nLWJvcmRlci1hY2NlbnQpO1xufVxuLmFsZXJ0LXdhcm5pbmcuYWxlcnQtYm9yZGVyLWFsbCB7XG4gIGJvcmRlcjogdmFyKC0tZmx1aWQtMikgc29saWQgdmFyKC0tYWdub3N0aWMtd2FybmluZy1ib3JkZXIpO1xufVxuXG4uYWxlcnQtaW5mbyB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWFnbm9zdGljLXByaW1hcnktbGlnaHQpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1kYXJrKTtcbn1cbi5hbGVydC1pbmZvLWljb24ge1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1kYXJrKTtcbiAgbWFyZ2luLWlubGluZS1lbmQ6IHZhcigtLWZsdWlkLTgpO1xuICAvKiBFbnN1cmVzIG91ciBpY29uIGRvZXNuJ3QgZmxleCBncm93IG9yIHNocmluayAqL1xuICBmbGV4OiAwIDAgdmFyKC0tZmx1aWQtMjQpO1xufVxuXG4uYWxlcnQtaW5mby5hbGVydC1ib3JkZXItdG9wIHtcbiAgYm9yZGVyLXRvcC1jb2xvcjogdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1kYXJrKTtcbn1cbi5hbGVydC1pbmZvLmFsZXJ0LWJvcmRlci1sZWZ0IHtcbiAgYm9yZGVyLWxlZnQtY29sb3I6IHZhcigtLWFnbm9zdGljLXByaW1hcnktZGFyayk7XG59XG4uYWxlcnQtaW5mby5hbGVydC1ib3JkZXItYm90dG9tIHtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1kYXJrKTtcbn1cbi5hbGVydC1pbmZvLmFsZXJ0LWJvcmRlci1yaWdodCB7XG4gIGJvcmRlci1yaWdodC1jb2xvcjogdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1kYXJrKTtcbn1cbi5hbGVydC1pbmZvLmFsZXJ0LWJvcmRlci1hbGwge1xuICBib3JkZXI6IHZhcigtLWZsdWlkLTIpIHNvbGlkIHZhcigtLWFnbm9zdGljLXByaW1hcnktYm9yZGVyKTtcbn1cblxuLmFsZXJ0LWVycm9yIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tYWdub3N0aWMtZXJyb3ItbGlnaHQpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtZXJyb3ItZGFyayk7XG59XG4uYWxlcnQtZXJyb3ItaWNvbiB7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1lcnJvci1kYXJrKTtcbiAgbWFyZ2luLWlubGluZS1lbmQ6IHZhcigtLWZsdWlkLTgpO1xuICAvKiBFbnN1cmVzIG91ciBpY29uIGRvZXNuJ3QgZmxleCBncm93IG9yIHNocmluayAqL1xuICBmbGV4OiAwIDAgdmFyKC0tZmx1aWQtMjQpO1xufVxuLmFsZXJ0LWVycm9yLmFsZXJ0LWJvcmRlci10b3Age1xuICBib3JkZXItdG9wLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1lcnJvci1kYXJrKTtcbn1cbi5hbGVydC1lcnJvci5hbGVydC1ib3JkZXItbGVmdCB7XG4gIGJvcmRlci1sZWZ0LWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1lcnJvci1kYXJrKTtcbn1cbi5hbGVydC1lcnJvci5hbGVydC1ib3JkZXItYm90dG9tIHtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogdmFyKC0tYWdub3N0aWMtZXJyb3ItZGFyayk7XG59XG4uYWxlcnQtZXJyb3IuYWxlcnQtYm9yZGVyLXJpZ2h0IHtcbiAgYm9yZGVyLXJpZ2h0LWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1lcnJvci1kYXJrKTtcbn1cbi5hbGVydC1lcnJvci5hbGVydC1ib3JkZXItYWxsIHtcbiAgYm9yZGVyOiB2YXIoLS1mbHVpZC0yKSBzb2xpZCB2YXIoLS1hZ25vc3RpYy1lcnJvci1ib3JkZXIpO1xufVxuXG4uYWxlcnQtc3VjY2VzcyB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWFnbm9zdGljLWFjdGlvbi1saWdodCk7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1hY3Rpb24tZnJvbSk7XG59XG4uYWxlcnQtc3VjY2Vzcy1pY29uIHtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWF0aW9uLWZyb20pO1xuICBtYXJnaW4taW5saW5lLWVuZDogdmFyKC0tZmx1aWQtOCk7XG4gIC8qIEVuc3VyZXMgb3VyIGljb24gZG9lc24ndCBmbGV4IGdyb3cgb3Igc2hyaW5rICovXG4gIGZsZXg6IDAgMCB2YXIoLS1mbHVpZC0yNCk7XG59XG4uYWxlcnQtc3VjY2Vzcy5hbGVydC1ib3JkZXItdG9wIHtcbiAgYm9yZGVyLXRvcC1jb2xvcjogdmFyKC0tYWdub3N0aWMtYWN0aW9uLWZyb20pO1xufVxuLmFsZXJ0LXN1Y2Nlc3MuYWxlcnQtYm9yZGVyLWxlZnQge1xuICBib3JkZXItbGVmdC1jb2xvcjogdmFyKC0tYWdub3N0aWMtYWN0aW9uLWZyb20pO1xufVxuLmFsZXJ0LXN1Y2Nlc3MuYWxlcnQtYm9yZGVyLWJvdHRvbSB7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6IHZhcigtLWFnbm9zdGljLWFjdGlvbi1mcm9tKTtcbn1cbi5hbGVydC1zdWNjZXNzLmFsZXJ0LWJvcmRlci1yaWdodCB7XG4gIGJvcmRlci1yaWdodC1jb2xvcjogdmFyKC0tYWdub3N0aWMtYWN0aW9uLWZyb20pO1xufVxuLmFsZXJ0LXN1Y2Nlc3MuYWxlcnQtYm9yZGVyLWFsbCB7XG4gIGJvcmRlcjogdmFyKC0tZmx1aWQtMikgc29saWQgdmFyKC0tYWdub3N0aWMtYWN0aW9uLWJvcmRlcik7XG59XG5cbi5hdmF0YXIsXG4uYXZhdGFyLWJhc2Uge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmF2YXRhcixcbi5hdmF0YXItc2tpbiB7XG4gIHdpZHRoOiB2YXIoLS1mbHVpZC00MCk7XG4gIGhlaWdodDogdmFyKC0tZmx1aWQtNDApO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQ6IHZhcigtLWFnbm9zdGljLWdyYXktZXh0cmEtbGlnaHQpO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG59XG5cbi5hdmF0YXItc3F1YXJlIHtcbiAgYm9yZGVyLXJhZGl1czogMDtcbn1cblxuLmF2YXRhci1yb3VuZGVkIHtcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0tYWdub3N0aWMtcmFkaXVzKTtcbn1cblxuLmF2YXRhci1zbWFsbCB7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZmx1aWQtMTIpO1xuICB3aWR0aDogdmFyKC0tZmx1aWQtMzIpO1xuICBoZWlnaHQ6IHZhcigtLWZsdWlkLTMyKTtcbn1cblxuLmF2YXRhci1sYXJnZSB7XG4gIHdpZHRoOiB2YXIoLS1mbHVpZC00OCk7XG4gIGhlaWdodDogdmFyKC0tZmx1aWQtNDgpO1xufVxuXG4uYXZhdGFyLXhsYXJnZSB7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZmx1aWQtMjApO1xuICB3aWR0aDogdmFyKC0tZmx1aWQtNjQpO1xuICBoZWlnaHQ6IHZhcigtLWZsdWlkLTY0KTtcbn1cblxuLmF2YXRhcjo6YmVmb3JlIHtcbiAgY29udGVudDogYXR0cihkYXRhLXRleHQpO1xufVxuXG4uYXZhdGFyLWltYWdlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5hdmF0YXItaW5mbyB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWFnbm9zdGljLXByaW1hcnktbGlnaHQpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1kYXJrKTtcbn1cbi5hdmF0YXItd2FybmluZyB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWFnbm9zdGljLXdhcm5pbmctbGlnaHQpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtd2FybmluZy1kYXJrKTtcbn1cbi5hdmF0YXItc3VjY2VzcyB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWFnbm9zdGljLWFjdGlvbi1saWdodCk7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1hY3Rpb24tZnJvbSk7XG59XG4uYXZhdGFyLWVycm9yIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tYWdub3N0aWMtZXJyb3ItbGlnaHQpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtZXJyb3ItZGFyayk7XG59XG5cbi8qIE11c3QgY29tZSBhZnRlciBhdmF0YXItc3VjY2VzcywgYXZhdGF0YXItd2FybmluZywgZXRjLiBzbyBzcGVjaWZpY2l0eSBpcyBoaWdoZXIgKi9cbi5hdmF0YXItdHJhbnNwYXJlbnQge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cblxuLmF2YXRhci1ncm91cCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIC8qIFRCRCAtLSBzaG91bGQgd2Ugc3RhY2sgdGhlc2Ugb24gbW9iaWxlPyAqL1xufVxuLmF2YXRhci1ncm91cCAuYXZhdGFyIHtcbiAgYm9yZGVyOiAycHggc29saWQgd2hpdGU7XG59XG5cbi5hdmF0YXItZ3JvdXAgLmF2YXRhcjpub3QoOmZpcnN0LWNoaWxkKSB7XG4gIG1hcmdpbi1pbmxpbmUtc3RhcnQ6IGNhbGMoLTEgKiB2YXIoLS1mbHVpZC0xMCkpO1xufVxuXG4uYnJlYWRjcnVtYiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgcGFkZGluZzogMDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLmJyZWFkY3J1bWItaXRlbSArIC5icmVhZGNydW1iLWl0ZW0ge1xuICBwYWRkaW5nLWlubGluZS1zdGFydDogdmFyKC0tZmx1aWQtNik7XG59XG5cbi5icmVhZGNydW1iLWl0ZW0gKyAuYnJlYWRjcnVtYi1pdGVtOjpiZWZvcmUge1xuICBwYWRkaW5nLWlubGluZS1lbmQ6IHZhcigtLWZsdWlkLTYpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtZ3JheS1taWQtZGFyayk7XG4gIGNvbnRlbnQ6ICdcXDIwM0EnO1xufVxuXG4uYnJlYWRjcnVtYi1pdGVtLmFjdGl2ZSB7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1kYXJrKTtcbn1cblxuLmJyZWFkY3J1bWItc2xhc2ggLmJyZWFkY3J1bWItaXRlbSArIC5icmVhZGNydW1iLWl0ZW06OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXDAwMDJmJztcbn1cblxuLmJyZWFkY3J1bWItYXJyb3cgLmJyZWFkY3J1bWItaXRlbSArIC5icmVhZGNydW1iLWl0ZW06OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXDAyMTkyJztcbn1cblxuLmJyZWFkY3J1bWItYnVsbGV0IC5icmVhZGNydW1iLWl0ZW0gKyAuYnJlYWRjcnVtYi1pdGVtOjpiZWZvcmUge1xuICBjb250ZW50OiAnXFwwMjAyMic7XG59XG5cbi8qKlxuICogQnV0dG9uIEdyb3Vwc1xuICovXG4uYnRuLWdyb3VwIHtcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG59XG5cbi5idG4tZ3JvdXAgPiBidXR0b24ge1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1hZ25vc3RpYy1idG4tcmFkaXVzLCB2YXIoLS1hZ25vc3RpYy1yYWRpdXMsIDAuMjVyZW0pKTtcbn1cbi5idG4tZ3JvdXAgPiBidXR0b246bm90KDpsYXN0LWNoaWxkKSB7XG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMDtcbiAgbWFyZ2luLWlubGluZS1lbmQ6IC0xcHg7XG59XG4uYnRuLWdyb3VwID4gYnV0dG9uOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcbn1cblxuLypcbiogQmFzZSBCdXR0b24gU3R5bGVcbipcbiogUGxlYXNlIG5vdGUgdGhhdCB3ZSBoYXZlIHR3byB2ZXJzaW9ucyBvZiB0aGlzOlxuKiBgLmJ0bmAgd2hpY2ggZW5jb21wYXNzZXMgYm90aCB0aGUgYmFzZSBhbmQgc2tpbiBzdHlsZXNcbiogYC5idG4tYmFzZWAgYW5kIGBidG4tc2tpbmAuXG4qIFRoZSByZWFzb24gd2UndmUgZG9uZSB0aGlzIGlzIHRvIHByb3ZpZGUgeW91IHdpdGggc29tZSBjb252ZW5pZW5jZSBidXRcbiogYWxzbyBmbGV4aWJpbGl0eS4gTW9zdCB3aWxsIGp1c3Qgd2FudCB0byBhcHBseSBgLmJ0bmAuIEhvd2V2ZXIsIGlmIHRoZVxuKiBiYXNlIHNraW4gb2YgdGhlIGJ1dHRvbiBkb2VzIG5vdCB3b3JrIGZvciB5b3UsIGFub3RoZXIgb3B0aW9uIGlzIHRvIG9ubHlcbiogYXBwbHkgYC5idG4tYmFzZWAgYW5kIHRoZW4gc2V0IHlvdXIgb3duIFwiYnV0dG9uIHNraW5cIi5cbiovXG4uYnRuLWJhc2UsXG4uYnRuIHtcbiAgLyogVE9ETyB0ZXN0IHRoaXMgZmFsbGJhY2sgb3ZlcnJpZGUgc3ludGF4IGlzIGNvcnJlY3QgKi9cbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IHZhcigtLWFnbm9zdGljLXRpbWluZy1tZWRpdW0pO1xufVxuXG4uYnRuLXNraW4sXG4uYnRuIHtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWJ0bi1mb250LWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1kYXJrKSk7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFnbm9zdGljLWJ0bi1iZ2NvbG9yLCB2YXIoLS1hZ25vc3RpYy1ncmF5LWxpZ2h0KSk7XG4gIGJvcmRlci1jb2xvcjogdmFyKC0tYWdub3N0aWMtYnRuLWJnY29sb3IsIHZhcigtLWFnbm9zdGljLWdyYXktbGlnaHQpKTtcbiAgLyogc2VlbXMgbGlrZSBhIHJlYXNvbmFibGUgZGVmYXVsdCBhcyBjaHJvbWUgcGlja3MgYG91dHNldGAgd2hpY2ggcmVzdWx0cyBpbiBhIHdlaXJkIDNkIGVmZmVjdCAqL1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItd2lkdGg6IHZhcigtLWFnbm9zdGljLWJ0bi1ib3JkZXItc2l6ZSwgMXB4KTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWFnbm9zdGljLWJ0bi1mb250LWZhbWlseSwgdmFyKC0tYWdub3N0aWMtZm9udC1mYW1pbHkpKTtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWFnbm9zdGljLWJ0bi1mb250LXdlaWdodCwgNDAwKTtcbiAgZm9udC1zaXplOiB2YXIoLS1hZ25vc3RpYy1idG4tZm9udC1zaXplLCAxcmVtKTtcbiAgLyogdGhpcyBjYW4gYmUgb3ZlcnJpZGVuLCBidXQgaXQgbWlnaHQgbWVzcyB3aXRoIHRoZSBiYWxhbmNlIG9mIHRoZSBidXR0b24gaGVpZ2h0cyBhY3Jvc3MgdmFyaWFudHMgKi9cbiAgbGluZS1oZWlnaHQ6IHZhcigtLWFnbm9zdGljLWxpbmUtaGVpZ2h0LCB2YXIoLS1mbHVpZC0yMCwgMS4yNXJlbSkpO1xuICBwYWRkaW5nLWJsb2NrLXN0YXJ0OiB2YXIoLS1hZ25vc3RpYy12ZXJ0aWNhbC1wYWQsIDAuNXJlbSk7XG4gIHBhZGRpbmctYmxvY2stZW5kOiB2YXIoLS1hZ25vc3RpYy12ZXJ0aWNhbC1wYWQsIDAuNXJlbSk7XG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiB2YXIoLS1hZ25vc3RpYy1zaWRlLXBhZGRpbmcsIDAuNzVyZW0pO1xuICBwYWRkaW5nLWlubGluZS1lbmQ6IHZhcigtLWFnbm9zdGljLXNpZGUtcGFkZGluZywgMC43NXJlbSk7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBvdXRsaW5lOiBub25lO1xufVxuXG4uYnRuOnZpc2l0ZWQge1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtYnRuLWZvbnQtY29sb3IsIHZhcigtLWFnbm9zdGljLWRhcmspKTtcbn1cblxuLmJ0bjpob3ZlciB7XG4gIG9wYWNpdHk6IDAuODU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLmJ0bjphY3RpdmUge1xuICB0ZXh0LXNoYWRvdzogMCAxcHggMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMHM7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMik7XG59XG5cbi5idG46Zm9jdXMge1xuICBib3gtc2hhZG93OiAwIDAgMCB2YXIoLS1hZ25vc3RpYy1mb2N1cy1yaW5nLW91dGxpbmUtd2lkdGgpIHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctY29sb3IpO1xuICAvKiBOZWVkZWQgZm9yIEhpZ2ggQ29udHJhc3QgbW9kZSAqL1xuICBvdXRsaW5lOiB2YXIoLS1hZ25vc3RpYy1mb2N1cy1yaW5nLW91dGxpbmUtd2lkdGgpIHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctb3V0bGluZS1zdHlsZSlcbiAgICB2YXIoLS1hZ25vc3RpYy1mb2N1cy1yaW5nLW91dGxpbmUtY29sb3IpO1xuICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IHZhcigtLWFnbm9zdGljLXRpbWluZy1mYXN0KSBlYXNlLW91dDtcbn1cblxuLypcbiogRGlzYWJsZWQgU3RhdGVcbipcbiogVGhlIGRpc2FibGVkIHN0YXRlIHVzZXMgdGhlIGNsYXNzIC5kaXNhYmxlZCwgaXMtZGlzYWJsZWQsXG4qIGFuZCB0aGUgZm9ybSBhdHRyaWJ1dGUgZGlzYWJsZWQ9XCJkaXNhYmxlZFwiLlxuKiBUaGUgdXNlIG9mICFpbXBvcnRhbnQgaXMgb25seSBhZGRlZCBiZWNhdXNlIHRoaXMgaXMgYSBzdGF0ZVxuKiB0aGF0IG11c3QgYmUgYXBwbGllZCB0byBhbGwgYnV0dG9ucyB3aGVuIGluIGEgZGlzYWJsZWQgc3RhdGUuXG4qL1xuLmJ0bi5kaXNhYmxlZCxcbi5idG46ZGlzYWJsZWQge1xuICB0b3A6IDAgIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZDogdmFyKC0tYWdub3N0aWMtYnRuLWRpc2FibGVkLWJnLCB2YXIoLS1hZ25vc3RpYy1ncmF5LW1pZC1kYXJrKSkgIWltcG9ydGFudDtcbiAgdGV4dC1zaGFkb3c6IDAgMXB4IDFweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDEpICFpbXBvcnRhbnQ7XG4gIC8qIHByaW1hcnksIHNlY29uZGFyeSwgbmF0dXJhbCwgYWxsIGxvb2sgc2FtZSB3aGVuIGRpc2FibGVkOyBhbmQgd2UgZG9uJ3Qgd2FudCB0b1xuICBoYXZlIGFuIGluYWR2ZXJ0YW50IGxvb2tpbmcgYmx1ZSBwcmltYXJ5IGJvcmRlciB3aGVuIGRpc2FibGVkIHNvIGl0J3MgdHJhbnNwYXJlbnQgKi9cbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWJ0bi1kaXNhYmxlZC1jb2xvciwgdmFyKC0tYWdub3N0aWMtZ3JheS1kYXJrKSkgIWltcG9ydGFudDtcbiAgY3Vyc29yOiBkZWZhdWx0ICFpbXBvcnRhbnQ7XG4gIGFwcGVhcmFuY2U6IG5vbmUgIWltcG9ydGFudDtcbiAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICBvcGFjaXR5OiAwLjggIWltcG9ydGFudDtcbn1cblxuLmJ0bi1wcmltYXJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWdub3N0aWMtYnRuLXByaW1hcnksIHZhcigtLWFnbm9zdGljLXByaW1hcnkpKTtcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1idG4tcHJpbWFyeSwgdmFyKC0tYWdub3N0aWMtcHJpbWFyeSkpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtYnRuLXByaW1hcnktY29sb3IsIHZhcigtLWFnbm9zdGljLWxpZ2h0KSk7XG59XG5cbi8qIEJvcmRlciBhbmQgZm9udCBpcyBwcmltYXJ5LiBXaGVuIGhvdmVyZWQsIHdlIGludmVydCB3aXRoIHByaW1hcnkgYmFja2dyb3VuZCBhbmQgd2hpdGUgZm9udCAqL1xuLmJ0bi1wcmltYXJ5LmJ0bi1ib3JkZXJlZCB7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1idG4tcHJpbWFyeSwgdmFyKC0tYWdub3N0aWMtcHJpbWFyeSkpO1xufVxuLmJ0bi1wcmltYXJ5LmJ0bi1ib3JkZXJlZDpob3Zlcixcbi5idG4tcHJpbWFyeS5idG4tYm9yZGVyZWQ6Zm9jdXMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1idG4tcHJpbWFyeSwgdmFyKC0tYWdub3N0aWMtcHJpbWFyeSkpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtYnRuLXByaW1hcnktY29sb3IsIHZhcigtLWFnbm9zdGljLWxpZ2h0KSk7XG59XG5cbi5idG4tcHJpbWFyeTp2aXNpdGVkIHtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWJ0bi1wcmltYXJ5LWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1saWdodCkpO1xufVxuXG4uYnRuLXNlY29uZGFyeSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFnbm9zdGljLWJ0bi1zZWNvbmRhcnksIHZhcigtLWFnbm9zdGljLXNlY29uZGFyeSkpO1xuICBib3JkZXItY29sb3I6IHZhcigtLWFnbm9zdGljLWJ0bi1zZWNvbmRhcnksIHZhcigtLWFnbm9zdGljLXNlY29uZGFyeSkpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtYnRuLXNlY29uZGFyeS1jb2xvciwgdmFyKC0tYWdub3N0aWMtbGlnaHQpKTtcbn1cblxuLyogQm9yZGVyIGFuZCBmb250IGlzIHNlY29uZGFyeS4gV2hlbiBob3ZlcmVkLCB3ZSBpbnZlcnQgd2l0aCBzZWNvbmRhcnkgYmFja2dyb3VuZCBhbmQgd2hpdGUgZm9udCAqL1xuLmJ0bi1zZWNvbmRhcnkuYnRuLWJvcmRlcmVkIHtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWJ0bi1zZWNvbmRhcnksIHZhcigtLWFnbm9zdGljLXNlY29uZGFyeSkpO1xufVxuLmJ0bi1zZWNvbmRhcnkuYnRuLWJvcmRlcmVkOmhvdmVyLFxuLmJ0bi1zZWNvbmRhcnkuYnRuLWJvcmRlcmVkOmZvY3VzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWdub3N0aWMtYnRuLXNlY29uZGFyeSwgdmFyKC0tYWdub3N0aWMtc2Vjb25kYXJ5KSk7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1idG4tc2Vjb25kYXJ5LWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1saWdodCkpO1xufVxuXG4uYnRuLXNlY29uZGFyeTp2aXNpdGVkIHtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWJ0bi1zZWNvbmRhcnktY29sb3IsIHZhcigtLWFnbm9zdGljLWxpZ2h0KSk7XG59XG5cbi8qXG4qIFJhaXNlZCBCdXR0b25zXG4qXG4qIEEgY2xhc3NpYyBsb29raW5nIGJ1dHRvbiB0aGF0IG9mZmVyc1xuKiBncmVhdCBkZXB0aCBhbmQgYWZmb3JkYW5jZS5cbiovXG4uYnRuLXJhaXNlZCB7XG4gIGJvcmRlci1jb2xvcjogdmFyKC0tYWdub3N0aWMtYnRuLWJnY29sb3IsIHZhcigtLWFnbm9zdGljLWdyYXktbGlnaHQpKTtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYmFja2dyb3VuZDogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgdG9wLCBsZWZ0IGJvdHRvbSwgZnJvbSgjZjZmNmY2KSwgdG8oI2UxZTFlMSkpO1xuICAvKiBOb3RlIHRoYXQgd2hpbGUgb25lIGNhbiBjdXN0b21pemUgc29tZSBvZiB0aGVzZSBzbGlnaHRseSwgd2UgZXNzZW50aWFsbHkgaGF2ZSBoYXJkLWNvZGVkXG4gIGJveCBzaGFkb3cgcmdiYSB2YWx1ZXMgc28gdGhleSBjYW4ndCByZWFsbHkgZG8gc28gZHJhc3RpY2FsbHkgd2hpY2ggaXMgcHJvYmFibHkgZmluZSA6KSAqL1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG4gICAgdmFyKC0tYWdub3N0aWMtYnRuLXJhaXNlZC1mcm9tLCB2YXIoLS1hZ25vc3RpYy1ncmF5LW1pZCkpLFxuICAgIHZhcigtLWFnbm9zdGljLWJ0bi1yYWlzZWQtdG8sIHZhcigtLWFnbm9zdGljLWdyYXktZXh0cmEtbGlnaHQpKVxuICApO1xuICAtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDBweCAxcHggMHB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKSwgMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gIGJveC1zaGFkb3c6IGluc2V0IDBweCAxcHggMHB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKSwgMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG59XG4uYnRuLXJhaXNlZDpob3Zlcixcbi5idG4tcmFpc2VkOmZvY3VzIHtcbiAgYmFja2dyb3VuZDogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgdG9wLCBsZWZ0IGJvdHRvbSwgZnJvbSh3aGl0ZSksIHRvKGdhaW5zYm9ybykpO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCB3aGl0ZSwgZ2FpbnNib3JvKTtcbn1cbi5idG4tcmFpc2VkLmFjdGl2ZSB7XG4gIC8qIFRPRE8gLS0gbWF5YmUgdGhpcyBzaG91bGRuJ3QgYmUgaGFyZCBjb2RlZCAqL1xuICBiYWNrZ3JvdW5kOiAjZWVlZWVlO1xuICAtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDBweCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDFweCAwcHggd2hpdGU7XG4gIGJveC1zaGFkb3c6IGluc2V0IDBweCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDFweCAwcHggd2hpdGU7XG59XG5cbi8qXG4qIFJhaXNlZCBQcmltYXJ5IEJ1dHRvbnNcbiovXG4uYnRuLXJhaXNlZC5idG4tcHJpbWFyeSB7XG4gIGJvcmRlci1jb2xvcjogdmFyKC0tYWdub3N0aWMtYnRuLXByaW1hcnktcmFpc2VkLXRvLCB2YXIoLS1hZ25vc3RpYy1wcmltYXJ5LWZyb20pKTtcbiAgYmFja2dyb3VuZDogLXdlYmtpdC1ncmFkaWVudChcbiAgICBsaW5lYXIsXG4gICAgbGVmdCB0b3AsXG4gICAgbGVmdCBib3R0b20sXG4gICAgZnJvbSh2YXIoLS1hZ25vc3RpYy1idG4tcHJpbWFyeS1yYWlzZWQtZnJvbSwgdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1mcm9tKSkpLFxuICAgIHRvKHZhcigtLWFnbm9zdGljLWJ0bi1wcmltYXJ5LXJhaXNlZC10bywgdmFyKC0tYWdub3N0aWMtcHJpbWFyeS10bykpKVxuICApO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG4gICAgdmFyKC0tYWdub3N0aWMtYnRuLXByaW1hcnktcmFpc2VkLWZyb20sIHZhcigtLWFnbm9zdGljLXByaW1hcnktZnJvbSkpLFxuICAgIHZhcigtLWFnbm9zdGljLWJ0bi1wcmltYXJ5LXJhaXNlZC10bywgdmFyKC0tYWdub3N0aWMtcHJpbWFyeS10bykpXG4gICk7XG59XG5cbi5idG4tcmFpc2VkLmJ0bi1wcmltYXJ5OmhvdmVyLFxuLmJ0bi1yYWlzZWQuYnRuLXByaW1hcnk6Zm9jdXMge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG4gICAgdG8gYm90dG9tLFxuICAgIHZhcigtLWFnbm9zdGljLWJ0bi1wcmltYXJ5LXJhaXNlZC1ob3Zlci1mcm9tLCB2YXIoLS1hZ25vc3RpYy1wcmltYXJ5LWhvdmVyKSksXG4gICAgdmFyKC0tYWdub3N0aWMtYnRuLXByaW1hcnktcmFpc2VkLXRvLCB2YXIoLS1hZ25vc3RpYy1wcmltYXJ5LWZyb20pKVxuICApO1xuICBiYWNrZ3JvdW5kOiAtd2Via2l0LWdyYWRpZW50KFxuICAgIGxpbmVhcixcbiAgICBsZWZ0IHRvcCxcbiAgICBsZWZ0IGJvdHRvbSxcbiAgICBmcm9tKHZhcigtLWFnbm9zdGljLWJ0bi1wcmltYXJ5LXJhaXNlZC1ob3Zlci1mcm9tLCB2YXIoLS1hZ25vc3RpYy1wcmltYXJ5LWhvdmVyKSkpLFxuICAgIHRvKHZhcigtLWFnbm9zdGljLWJ0bi1wcmltYXJ5LXJhaXNlZC10bywgdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1mcm9tKSkpXG4gICk7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcbiAgICB2YXIoLS1hZ25vc3RpYy1idG4tcHJpbWFyeS1yYWlzZWQtaG92ZXItZnJvbSwgdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1ob3ZlcikpLFxuICAgIHZhcigtLWFnbm9zdGljLWJ0bi1wcmltYXJ5LXJhaXNlZC10bywgdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1mcm9tKSlcbiAgKTtcbn1cblxuLmJ0bi1yYWlzZWQuYnRuLXByaW1hcnk6YWN0aXZlLFxuLmJ0bi1yYWlzZWQuYnRuLXByaW1hcnkuYWN0aXZlIHtcbiAgb3BhY2l0eTogMC45O1xuICBib3gtc2hhZG93OiAwIDAgMCAxcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xufVxuXG4vKlxuKiBSYWlzZWQgU2Vjb25kYXJ5IEJ1dHRvbnNcbiovXG4uYnRuLXJhaXNlZC5idG4tc2Vjb25kYXJ5IHtcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1idG4tc2Vjb25kYXJ5LXJhaXNlZC10bywgdmFyKC0tYWdub3N0aWMtc2Vjb25kYXJ5LXRvKSk7XG4gIGJhY2tncm91bmQ6IC13ZWJraXQtZ3JhZGllbnQoXG4gICAgbGluZWFyLFxuICAgIGxlZnQgdG9wLFxuICAgIGxlZnQgYm90dG9tLFxuICAgIGZyb20odmFyKC0tYWdub3N0aWMtYnRuLXNlY29uZGFyeS1yYWlzZWQtZnJvbSwgdmFyKC0tYWdub3N0aWMtc2Vjb25kYXJ5LWZyb20pKSksXG4gICAgdG8odmFyKC0tYWdub3N0aWMtYnRuLXNlY29uZGFyeS1yYWlzZWQtdG8sIHZhcigtLWFnbm9zdGljLXNlY29uZGFyeS10bykpKVxuICApO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG4gICAgdmFyKC0tYWdub3N0aWMtYnRuLXNlY29uZGFyeS1yYWlzZWQtZnJvbSwgdmFyKC0tYWdub3N0aWMtc2Vjb25kYXJ5LWZyb20pKSxcbiAgICB2YXIoLS1hZ25vc3RpYy1idG4tc2Vjb25kYXJ5LXJhaXNlZC10bywgdmFyKC0tYWdub3N0aWMtc2Vjb25kYXJ5LXRvKSlcbiAgKTtcbn1cblxuLmJ0bi1yYWlzZWQuYnRuLXNlY29uZGFyeTpob3Zlcixcbi5idG4tcmFpc2VkLmJ0bi1zZWNvbmRhcnk6Zm9jdXMge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG4gICAgdG8gYm90dG9tLFxuICAgIHZhcigtLWFnbm9zdGljLWJ0bi1zZWNvbmRhcnktcmFpc2VkLWhvdmVyLWZyb20sIHZhcigtLWFnbm9zdGljLXNlY29uZGFyeS1ob3ZlcikpLFxuICAgIHZhcigtLWFnbm9zdGljLWJ0bi1zZWNvbmRhcnktcmFpc2VkLXRvLCB2YXIoLS1hZ25vc3RpYy1zZWNvbmRhcnktdG8pKVxuICApO1xuICBiYWNrZ3JvdW5kOiAtd2Via2l0LWdyYWRpZW50KFxuICAgIGxpbmVhcixcbiAgICBsZWZ0IHRvcCxcbiAgICBsZWZ0IGJvdHRvbSxcbiAgICBmcm9tKHZhcigtLWFnbm9zdGljLWJ0bi1zZWNvbmRhcnktcmFpc2VkLWhvdmVyLWZyb20sIHZhcigtLWFnbm9zdGljLXNlY29uZGFyeS1ob3ZlcikpKSxcbiAgICB0byh2YXIoLS1hZ25vc3RpYy1idG4tc2Vjb25kYXJ5LXJhaXNlZC10bywgdmFyKC0tYWdub3N0aWMtc2Vjb25kYXJ5LXRvKSkpXG4gICk7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcbiAgICB2YXIoLS1hZ25vc3RpYy1idG4tc2Vjb25kYXJ5LXJhaXNlZC1ob3Zlci1mcm9tLCB2YXIoLS1hZ25vc3RpYy1zZWNvbmRhcnktaG92ZXIpKSxcbiAgICB2YXIoLS1hZ25vc3RpYy1idG4tc2Vjb25kYXJ5LXJhaXNlZC10bywgdmFyKC0tYWdub3N0aWMtc2Vjb25kYXJ5LXRvKSlcbiAgKTtcbn1cblxuLmJ0bi1yYWlzZWQuYnRuLXNlY29uZGFyeTphY3RpdmUsXG4uYnRuLXJhaXNlZC5idG4tc2Vjb25kYXJ5LmFjdGl2ZSB7XG4gIG9wYWNpdHk6IDAuOTtcbiAgYm94LXNoYWRvdzogMCAwIDAgMXB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbn1cblxuLyoqXG4gICogQm9yZGVyIEJ1dHRvbnNcbiAgKi9cbi5idG4tYm9yZGVyZWQge1xuICBib3JkZXItd2lkdGg6IDFweDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICAqIFNpemVzXG4gICovXG4uYnRuLWxhcmdlIHtcbiAgZm9udC1zaXplOiBjYWxjKHZhcigtLWFnbm9zdGljLWJ0bi1mb250LXNpemUsIDFyZW0pICsgMC4yNXJlbSk7XG4gIGhlaWdodDogM3JlbTtcbiAgbGluZS1oZWlnaHQ6IDNyZW07XG4gIHBhZGRpbmc6IDAgM3JlbTtcbn1cblxuLmJ0bi1zbWFsbCB7XG4gIGZvbnQtc2l6ZTogY2FsYyh2YXIoLS1hZ25vc3RpYy1idG4tZm9udC1zaXplLCAxcmVtKSAtIDAuMjVyZW0pO1xuICBoZWlnaHQ6IDJyZW07XG4gIGxpbmUtaGVpZ2h0OiAycmVtO1xuICBwYWRkaW5nOiAwIDJyZW07XG59XG5cbi8qKlxuICAqIFJvdW5kZWRcbiAgKi9cbi5idG4tcm91bmRlZCB7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLWFnbm9zdGljLWJ0bi1yYWRpdXMsIHZhcigtLWFnbm9zdGljLXJhZGl1cywgMC4yNXJlbSkpO1xufVxuXG4uYnRuLXBpbGwge1xuICBib3JkZXItcmFkaXVzOiAyMDBweDtcbn1cblxuLypcbiAgKiBTaXplIEFkanVzdG1lbnQgZm9yIGVxdWFsIGhlaWdodCAmIHdpZHRoIGJ1dHRvbnNcbiAgKlxuICAqIFJlbW92ZSBwYWRkaW5nXG4gICovXG4uYnRuLWNpcmNsZSB7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIHdpZHRoOiAyLjVyZW07XG4gIGhlaWdodDogMi41cmVtO1xuICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG59XG5cbi5idG4tY2lyY2xlLWxhcmdlIHtcbiAgZm9udC1zaXplOiBjYWxjKHZhcigtLWFnbm9zdGljLWJ0bi1mb250LXNpemUsIDFyZW0pICsgMC4yNXJlbSk7XG4gIHdpZHRoOiAzcmVtO1xuICBoZWlnaHQ6IDNyZW07XG59XG5cbi5idG4tY2lyY2xlLXNtYWxsIHtcbiAgZm9udC1zaXplOiBjYWxjKHZhcigtLWFnbm9zdGljLWJ0bi1mb250LXNpemUsIDFyZW0pIC0gMC4yNXJlbSk7XG4gIHdpZHRoOiAycmVtO1xuICBoZWlnaHQ6IDJyZW07XG59XG5cbi8qKlxuICogQnV0dG9uIEJsb2NrIChzdGFja2VkKVxuICovXG4uYnRuLWJsb2NrIHtcbiAgd2lkdGg6IDEwMCU7XG59XG4vKiBUaGlzIGlzIGEgdXRpbGl0eSBjbGFzcyB1c2VkIGlmIHlvdSBsaXRlcmFsbHkgd2FudCB0byBzdGFjayBibG9jayBidXR0b25zIG9uZSBhZnRlciBhbm90aGVyLlxuQXBwbHkgdGhpcyBjbGFzcyB0byB0aGUgbnRoLW9mLXR5cGUoMikgb253YXJkcyB0byBlbnN1cmUgdGhlIGJvcmRlcnMgbGluZSB1cCBwcm9wZXJseS4gKi9cbi5idG4tYmxvY2stZm9sbG93aW5nIHtcbiAgbWFyZ2luLWJsb2NrLXN0YXJ0OiAtMXB4O1xufVxuXG4vKipcbiAqIEludmlzaWJsZSBidXR0b25zLiBHZW5lcmFsbHkgdXNlZCBmb3IgYSBDYW5jZWwgb3IgaWNvbiBidXR0b24gdGhhdCBiZWhhdmVzIGxpa2UgYSBidXR0b24sXG4gKiBzZW1hbnRpY2FsbHkgYW5kIGZvciBhMTF5LCBidXQsIGRvZXMgc28gd2l0aG91dCBhbGwgdGhlIHR5cGljYWwgXCJidXR0b24gY2hyb21lXCIgYmVoaW5kIGl0LlxuICovXG4uYnRuLWxpbmssXG4uYnRuLWJsYW5rIHtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWFnbm9zdGljLWJ0bi1mb250LWZhbWlseSwgdmFyKC0tYWdub3N0aWMtZm9udC1mYW1pbHkpKTtcbiAgZm9udC1zaXplOiB2YXIoLS1hZ25vc3RpYy1idG4tZm9udC1zaXplLCAxcmVtKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgdHJhbnNpdGlvbjogbm9uZTtcbn1cbi8qIEEgYnV0dG9uIGJsYW5rIHdpdGggbGluayBjb2xvciB0ZXh0ICovXG4uYnRuLWxpbmsge1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtYnRuLXByaW1hcnksIHZhcigtLWFnbm9zdGljLXByaW1hcnkpKTtcbn1cbi5idG4tbGluazpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuQG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uKSB7XG4gIC5idG4tYmxhbmssXG4gIC5idG46Zm9jdXMsXG4gIC5idG4ge1xuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuMDAxbXMgIWltcG9ydGFudDtcbiAgfVxufVxuXG4vKipcbiAqIENhcmRzXG4gKlxuICogSSBkcmV3IHNvbWUgaW5zcGlyYXRpb24gZnJvbSB0aGUgYXJ0aWNsZSBvbiBtZWRpYS1xdWVyeSBsZXNzIGNhcmRzOlxuICogaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9ob3ctdG8tbWFrZS1hLW1lZGlhLXF1ZXJ5LWxlc3MtY2FyZC1jb21wb25lbnQvXG4gKi9cbi5jYXJkLFxuLmNhcmQtYmFzZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNhcmQsXG4uY2FyZC1za2luIHtcbiAgYm94LXNoYWRvdzogdmFyKC0tYWdub3N0aWMtY2FyZC1ib3hzaGFkb3cxLW9mZnNldC14LCAwKVxuICAgICAgdmFyKC0tYWdub3N0aWMtY2FyZC1ib3hzaGFkb3cxLW9mZnNldC15LCAwLjM3NXJlbSlcbiAgICAgIHZhcigtLWFnbm9zdGljLWNhcmQtYm94c2hhZG93MS1ibHVyLCAwLjU2MjVyZW0pXG4gICAgICB2YXIoLS1hZ25vc3RpYy1jYXJkLWJveHNoYWRvdzEtY29sb3IsIHJnYmEoNiwgNiwgNiwgMC4wNzUpKSxcbiAgICB2YXIoLS1hZ25vc3RpYy1jYXJkLWJveHNoYWRvdzItb2Zmc2V0LXgsIDApIHZhcigtLWFnbm9zdGljLWNhcmQtYm94c2hhZG93Mi1vZmZzZXQteSwgMClcbiAgICAgIHZhcigtLWFnbm9zdGljLWNhcmQtYm94c2hhZG93Mi1ibHVyLCAxcHgpXG4gICAgICB2YXIoLS1hZ25vc3RpYy1jYXJkLWJveHNoYWRvdzItY29sb3IsIHJnYmEoNSwgNSwgNSwgMC4xKSk7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLWFnbm9zdGljLWNhcmQtYm9yZGVyLXJhZGl1cywgdmFyKC0tYWdub3N0aWMtcmFkaXVzLCAwLjI1cmVtKSk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5jYXJkOmhvdmVyLFxuLmNhcmQtc2tpbjpob3ZlciB7XG4gIGJveC1zaGFkb3c6IHZhcigtLWFnbm9zdGljLWNhcmQtYm94c2hhZG93MS1vZmZzZXQteCwgMClcbiAgICAgIHZhcigtLWFnbm9zdGljLWNhcmQtYm94c2hhZG93MS1vZmZzZXQteSwgMC4zNzVyZW0pXG4gICAgICB2YXIoLS1hZ25vc3RpYy1jYXJkLWJveHNoYWRvdzEtYmx1ciwgMC44NzVyZW0pXG4gICAgICB2YXIoLS1hZ25vc3RpYy1jYXJkLWJveHNoYWRvdzEtY29sb3IsIHJnYmEoNCwgNCwgNCwgMC4xKSksXG4gICAgdmFyKC0tYWdub3N0aWMtY2FyZC1ib3hzaGFkb3cyLW9mZnNldC14LCAwKSB2YXIoLS1hZ25vc3RpYy1jYXJkLWJveHNoYWRvdzItb2Zmc2V0LXksIDApXG4gICAgICB2YXIoLS1hZ25vc3RpYy1jYXJkLWJveHNoYWRvdzItYmx1ciwgMnB4KVxuICAgICAgdmFyKC0tYWdub3N0aWMtY2FyZC1ib3hzaGFkb3cyLWNvbG9yLCByZ2JhKDMsIDMsIDMsIDAuMSkpO1xufVxuXG4vKipcbiAqIEFuaW1hdGVzIHRoZSB5IHBvc2l0aW9uIGFuZCBib3ggc2hhZG93IG9uIGhvdmVyXG4gKi9cbi5jYXJkLWFuaW1hdGVkIHtcbiAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyBlYXNlLW91dCA1cyxcbiAgICB0cmFuc2Zvcm0gdmFyKC0tYWdub3N0aWMtdGltaW5nLWZhc3QpXG4gICAgICBjdWJpYy1iZXppZXIoXG4gICAgICAgIHZhcigtLWFnbm9zdGljLWNhcmQtY3ViaWMtMSwgMC4zOSksXG4gICAgICAgIHZhcigtLWFnbm9zdGljLWNhcmQtY3ViaWMtMiwgMC41NzUpLFxuICAgICAgICB2YXIoLS1hZ25vc3RpYy1jYXJkLWN1YmljLTMsIDAuNTY1KSxcbiAgICAgICAgdmFyKC0tYWdub3N0aWMtY2FyZC1jdWJpYy00LCAxKVxuICAgICAgKTtcbn1cbi5jYXJkLWFuaW1hdGVkOmhvdmVyIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKHZhcigtLWFnbm9zdGljLWNhcmQtdHJhbnNsYXRlWS1ob3ZlciwgLTNweCkpO1xuICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IGVhc2Utb3V0IHZhcigtLWFnbm9zdGljLXRpbWluZy1mYXN0KSxcbiAgICB0cmFuc2Zvcm0gdmFyKC0tYWdub3N0aWMtdGltaW5nLXNsb3cpXG4gICAgICBjdWJpYy1iZXppZXIoXG4gICAgICAgIHZhcigtLWFnbm9zdGljLWNhcmQtY3ViaWMtMSwgMC4zOSksXG4gICAgICAgIHZhcigtLWFnbm9zdGljLWNhcmQtY3ViaWMtMiwgMC41NzUpLFxuICAgICAgICB2YXIoLS1hZ25vc3RpYy1jYXJkLWN1YmljLTMsIDAuNTY1KSxcbiAgICAgICAgdmFyKC0tYWdub3N0aWMtY2FyZC1jdWJpYy00LCAxKVxuICAgICAgKTtcbn1cbkBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbikge1xuICAuY2FyZC1hbmltYXRlZCxcbiAgLmNhcmQtYW5pbWF0ZWQ6aG92ZXIge1xuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuMDAxbXMgIWltcG9ydGFudDtcbiAgfVxufVxuXG4uY2FyZC1zdGFja2VkIHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLyoqXG4gKiBUaGVzZSByYWRpbyBhbmQgY2hlY2tib3ggY3VzdG9taXphdGlvbnMgYXJlIGFuIGFtYWxnYW1hdGlvbiBvZiB2YXJpb3VzIHJlc291cmNlcyBJJ3ZlIGZvdW5kIG9uIHRoZSBpbnRlcm5ldHM7IGZyb20gSGV5ZG9uXG4gKiBQaWNrZXJpbmcncyByYWRpbyBhcnRpY2xlIChhbmQgaGlzIEluY2x1c2l2ZSBDb21wb25lbnRzIGJvb2spLCB0byBTYXJhIFNvdWVpZGFuLCBTY290dCBPJ0hhcmEsIE1ETywgYW5kIEFkcmlhbiBSb3NlbGxpJ3NcbiAqIHJlc2VhcmNoIG9uIHRoZSBtYXR0ZXIgb2YgaW5jbHVzaXZlIGhpZGluZyBhbmQgY3VzdG9tIHJhZGlvL2NoZWNrYm94IGlucHV0cy5cbiAqL1xuXG4uY2hlY2tib3gtZ3JvdXAsXG4ucmFkaW8tZ3JvdXAge1xuICAtLXdpZHRoLTI4OiBjYWxjKDcgKiB2YXIoLS1mbHVpZC00KSk7IC8qIDEuNzVyZW0vMjhweCAqL1xuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1hZ25vc3RpYy1jaGVja2JveC1ib3JkZXItY29sb3IsIHZhcigtLWFnbm9zdGljLWdyYXktbGlnaHQpKTtcbiAgcGFkZGluZzogdmFyKC0tZmx1aWQtMjQpO1xuICBwYWRkaW5nLXRvcDogdmFyKC0tZmx1aWQtMTQpO1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1mbHVpZC04KTtcbn1cblxuLmNoZWNrYm94LWdyb3VwLWxhcmdlLFxuLnJhZGlvLWdyb3VwLWxhcmdlIHtcbiAgcGFkZGluZzogdmFyKC0td2lkdGgtMjgpO1xuICBwYWRkaW5nLXRvcDogdmFyKC0tZmx1aWQtMTYpO1xufVxuXG4uY2hlY2tib3gtbGVnZW5kLFxuLnJhZGlvLWxlZ2VuZCB7XG4gIHBhZGRpbmc6IHZhcigtLWZsdWlkLTIpIHZhcigtLWZsdWlkLTE0KTtcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0tZmx1aWQtMik7XG59XG5cbi8qIEhpZGluZyB0ZWNobmlxdWUgZnJvbSBodHRwczovL3d3dy5zYXJhc291ZWlkYW4uY29tL2Jsb2cvaW5jbHVzaXZlbHktaGlkaW5nLWFuZC1zdHlsaW5nLWNoZWNrYm94ZXMtYW5kLXJhZGlvLWJ1dHRvbnMvXG4qL1xuLmNoZWNrYm94LFxuLnJhZGlvIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogdmFyKC0tZmx1aWQtMTQpO1xuICBoZWlnaHQ6IHZhcigtLWZsdWlkLTE0KTtcbiAgb3BhY2l0eTogMDtcbn1cblxuLmNoZWNrYm94LXNtYWxsLFxuLnJhZGlvLXNtYWxsIHtcbiAgd2lkdGg6IHZhcigtLWZsdWlkLTEyKTtcbiAgaGVpZ2h0OiB2YXIoLS1mbHVpZC0xMik7XG59XG5cbi5jaGVja2JveC1sYXJnZSxcbi5yYWRpby1sYXJnZSB7XG4gIHdpZHRoOiB2YXIoLS1mbHVpZC0xNik7XG4gIGhlaWdodDogdmFyKC0tZmx1aWQtMTYpO1xufVxuXG4uY2hlY2tib3gtbGFiZWwtd3JhcCxcbi5yYWRpby1sYWJlbC13cmFwIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWZsdWlkLTM2KTtcbn1cblxuLmNoZWNrYm94LWxhYmVsLXdyYXAtaW5saW5lLFxuLnJhZGlvLWxhYmVsLXdyYXAtaW5saW5lIHtcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG59XG5cbi5jaGVja2JveC1sYWJlbC13cmFwLWlubGluZTpub3QoOmxhc3QtY2hpbGQpLFxuLnJhZGlvLWxhYmVsLXdyYXAtaW5saW5lOm5vdCg6bGFzdC1jaGlsZCkge1xuICBtYXJnaW4taW5saW5lLWVuZDogdmFyKC0tZmx1aWQtOCk7XG59XG5cbi8qIFRoZXNlIGFyZSBub3QgYWN0dWFsIDxsYWJlbD4gZWxlbWVudHMgYnV0IHRoZSA8c3Bhbj4gbGFiZWwgY29weSBlbGVtZW50cyAqL1xuLmNoZWNrYm94LWxhYmVsLFxuLnJhZGlvLWxhYmVsIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuXG4vKiBUaGUgY2hlY2ttYXJrIGl0c2VsZiAqL1xuLmNoZWNrYm94LWxhYmVsOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogdmFyKC0tZmx1aWQtNik7XG4gIHRvcDogdmFyKC0tZmx1aWQtMTApO1xuICB3aWR0aDogdmFyKC0tZmx1aWQtNik7XG4gIGhlaWdodDogdmFyKC0tZmx1aWQtMTIpO1xuICBib3JkZXI6IHNvbGlkIHdoaXRlO1xuICBib3JkZXItd2lkdGg6IDAgdmFyKC0tZmx1aWQtMikgdmFyKC0tZmx1aWQtMikgMDtcbiAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGNlbnRlcjtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDBkZWcpIHNjYWxlKDApO1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBib3JkZXIsIGJhY2tncm91bmQtY29sb3IsIHRyYW5zZm9ybTtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogdmFyKC0tYWdub3N0aWMtdGltaW5nLWZhc3QpO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1pbi1vdXQ7XG59XG4uY2hlY2tib3gtbGFiZWw6YmVmb3JlLFxuLnJhZGlvLWxhYmVsOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi1pbmxpbmUtZW5kOiB2YXIoLS1hZ25vc3RpYy1jaGVja2JveC1zcGFjaW5nLWVuZCwgMC43NXJlbSk7XG4gIHRyYW5zaXRpb246IHZhcigtLWFnbm9zdGljLXRpbWluZy1mYXN0KSBlYXNlLW91dCBhbGw7XG59XG5cbi8qIFNpbmNlIHdlIGJ1aWxkIHVwIHRoZSByYWRpbyBzaXplIG91dHdhcmRseSwgaXQncyBuYXR1cmFsbHkgbGFyZ2VyIHRoZW4gdGhlIGNoZWNrYm94ZXNcbnNvIHdlIGFkZCBhIG11bHRpcGx5ZXIgdG8gZXZlbiB0aG9zZSBvdXQgaW5pdGlhbGx5ICovXG4uY2hlY2tib3gtbGFiZWw6YmVmb3JlIHtcbiAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tYWdub3N0aWMtY2hlY2tib3gtYm9yZGVyLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1ncmF5LWxpZ2h0KSk7XG4gIHdpZHRoOiB2YXIoLS1mbHVpZC0xNik7XG4gIGhlaWdodDogdmFyKC0tZmx1aWQtMTYpO1xuICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IHZhcigtLWFnbm9zdGljLXRpbWluZy1mYXN0KSBlYXNlLW91dDtcbn1cblxuLnJhZGlvLWxhYmVsOmJlZm9yZSB7XG4gIHdpZHRoOiB2YXIoLS1mbHVpZC0xNCk7XG4gIGhlaWdodDogdmFyKC0tZmx1aWQtMTQpO1xuICB2ZXJ0aWNhbC1hbGlnbjogY2FsYygtMSAqIHZhcigtLWZsdWlkLTIpKTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBib3JkZXI6IHZhcigtLWZsdWlkLTIpIHNvbGlkIHZhcigtLWFnbm9zdGljLWNoZWNrYm94LWxpZ2h0LCB2YXIoLS1hZ25vc3RpYy1saWdodCkpO1xuICBib3gtc2hhZG93OiAwIDAgMCB2YXIoLS1mbHVpZC0yKSB2YXIoLS1hZ25vc3RpYy1jaGVja2JveC1ib3JkZXItY29sb3IsIHZhcigtLWFnbm9zdGljLWdyYXktbGlnaHQpKTtcbiAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyB2YXIoLS1hZ25vc3RpYy10aW1pbmctZmFzdCkgZWFzZS1vdXQ7XG59XG5cbkBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbikge1xuICAuY2hlY2tib3gtbGFiZWw6YWZ0ZXIgLmNoZWNrYm94LWxhYmVsOmJlZm9yZSxcbiAgLnJhZGlvLWxhYmVsOmJlZm9yZSxcbiAgLmNoZWNrYm94LWxhYmVsOmJlZm9yZSxcbiAgLnJhZGlvLWxhYmVsOmJlZm9yZSB7XG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4wMDFtcyAhaW1wb3J0YW50O1xuICB9XG59XG5cbi5jaGVja2JveC1sYWJlbC1zbWFsbDphZnRlciB7XG4gIGxlZnQ6IGNhbGMoMS4yNSAqIHZhcigtLWZsdWlkLTQpKTtcbn1cbi5jaGVja2JveC1sYWJlbC1zbWFsbDpiZWZvcmUge1xuICB3aWR0aDogdmFyKC0tZmx1aWQtMTQpO1xuICBoZWlnaHQ6IHZhcigtLWZsdWlkLTE0KTtcbn1cblxuLnJhZGlvLWxhYmVsLXNtYWxsOmJlZm9yZSB7XG4gIHdpZHRoOiB2YXIoLS1mbHVpZC0xMik7XG4gIGhlaWdodDogdmFyKC0tZmx1aWQtMTIpO1xufVxuXG4uY2hlY2tib3gtbGFiZWwtbGFyZ2U6YWZ0ZXIge1xuICBsZWZ0OiBjYWxjKDEuNzUgKiB2YXIoLS1mbHVpZC00KSk7XG59XG5cbi5jaGVja2JveC1sYWJlbC1sYXJnZTpiZWZvcmUge1xuICB3aWR0aDogdmFyKC0tZmx1aWQtMTgpO1xuICBoZWlnaHQ6IHZhcigtLWZsdWlkLTE4KTtcbn1cblxuLnJhZGlvLWxhYmVsLWxhcmdlOmJlZm9yZSB7XG4gIHdpZHRoOiB2YXIoLS1mbHVpZC0xNik7XG4gIGhlaWdodDogdmFyKC0tZmx1aWQtMTYpO1xufVxuXG4vKiB0aGUgY2hlY2tlZCBzdHlsZSB1c2luZyB0aGUgOmNoZWNrZWQgcHNldWRvIGNsYXNzICovXG4ucmFkaW86Y2hlY2tlZCArIC5yYWRpby1sYWJlbDpiZWZvcmUge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1hZ25vc3RpYy1jaGVja2JveC1maWxsLWNvbG9yLCAjMDhhODgwKTtcbiAgYm94LXNoYWRvdzogMCAwIDAgdmFyKC0tZmx1aWQtMikgdmFyKC0tYWdub3N0aWMtY2hlY2tib3gtYm9yZGVyLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1ncmF5LWxpZ2h0KSk7XG59XG5cbi5yYWRpbzpmb2N1cyArIC5yYWRpby1sYWJlbDpiZWZvcmUge1xuICBib3gtc2hhZG93OiAwIDAgMCB2YXIoLS1mbHVpZC0yKSB2YXIoLS1hZ25vc3RpYy1jaGVja2JveC1ib3JkZXItY29sb3IsIHZhcigtLWFnbm9zdGljLWdyYXktbGlnaHQpKSxcbiAgICAwIDAgMCBjYWxjKDEuNSAqIHZhcigtLWZsdWlkLTIpKSB3aGl0ZSxcbiAgICAwIDAgMCBjYWxjKDIuMjUgKiB2YXIoLS1mbHVpZC0yKSkgdmFyKC0tYWdub3N0aWMtZm9jdXMtcmluZy1jb2xvcik7XG59XG5cbi5jaGVja2JveDpmb2N1cyArIC5jaGVja2JveC1sYWJlbDpiZWZvcmUge1xuICBib3gtc2hhZG93OiAwIDAgMCB2YXIoLS1hZ25vc3RpYy1mb2N1cy1yaW5nLW91dGxpbmUtd2lkdGgpIHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctY29sb3IpO1xuICAvKiBOZWVkZWQgZm9yIEhpZ2ggQ29udHJhc3QgbW9kZSAqL1xuICBvdXRsaW5lOiB2YXIoLS1hZ25vc3RpYy1mb2N1cy1yaW5nLW91dGxpbmUtd2lkdGgpIHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctb3V0bGluZS1zdHlsZSlcbiAgICB2YXIoLS1hZ25vc3RpYy1mb2N1cy1yaW5nLW91dGxpbmUtY29sb3IpO1xufVxuXG4uY2hlY2tib3g6Y2hlY2tlZCArIC5jaGVja2JveC1sYWJlbDphZnRlciB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDQwZGVnKSBzY2FsZSgxKTtcbn1cbi5jaGVja2JveDpjaGVja2VkICsgLmNoZWNrYm94LWxhYmVsOmJlZm9yZSB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWFnbm9zdGljLWNoZWNrYm94LWZpbGwtY29sb3IsICMwOGE4ODApO1xuICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1hZ25vc3RpYy1jaGVja2JveC1maWxsLWNvbG9yLCAjMDhhODgwKTtcbn1cblxuLyoqXG4gKiBDb25zdW1lciBzdHlsZXMgPGxlZ2VuZD4gdGhlbXNlbHZlcywgYW5kIGNhbiBvcHQgdG8gdXNlIHRoZSAuc2NyZWVucmVhZGVyLW9ubHkgZnJvbVxuICogdXRpbGl0aWVzLmNzcyBpZiB0aGV5J3JlIGRlc2lnbiByZXF1aXJlcyBpdC5cbiAqL1xuLmNoZWNrYm94LWdyb3VwLWhpZGRlbixcbi5yYWRpby1ncm91cC1oaWRkZW4ge1xuICBib3JkZXI6IDA7XG4gIG1hcmdpbi1ibG9jay1zdGFydDogMDtcbiAgbWFyZ2luLWlubGluZS1zdGFydDogMDtcbiAgbWFyZ2luLWlubGluZS1lbmQ6IDA7XG4gIG1hcmdpbi1ibG9jay1lbmQ6IDA7XG4gIHBhZGRpbmctYmxvY2stc3RhcnQ6IDA7XG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwO1xuICBwYWRkaW5nLWlubGluZS1lbmQ6IDA7XG4gIHBhZGRpbmctYmxvY2stZW5kOiAwO1xufVxuXG4vKiBUYXJnZXRzIGJvdGggdGhlIGxhYmVsIGNvbnRhaW5lciBhbmQgdGhlIHNwYW4gbGFiZWwgdGhhdCBpcyB1c2VkXG50byBzdHlsZSB0aGUgY3VzdG9tIHJhZGlvIC8gY2hlY2tib3guIE5vdGUgaXQgZG9lcyBOT1QgdGFyZ2V0IHRoZSBpbnB1dFxuaXRzZWxmLiAqL1xuLmNoZWNrYm94W2Rpc2FibGVkXSArIC5jaGVja2JveC1sYWJlbCxcbi5yYWRpb1tkaXNhYmxlZF0gKyAucmFkaW8tbGFiZWwsXG4uY2hlY2tib3gtbGFiZWwtd3JhcC5kaXNhYmxlZCxcbi5yYWRpby1sYWJlbC13cmFwLmRpc2FibGVkLFxuLmNoZWNrYm94LWxhYmVsLXdyYXAtaW5saW5lLmRpc2FibGVkLFxuLnJhZGlvLWxhYmVsLXdyYXAtaW5saW5lLmRpc2FibGVkIHtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWlucHV0LWRpc2FibGVkLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1kaXNhYmxlZC1jb2xvcikpICFpbXBvcnRhbnQ7XG4gIGFwcGVhcmFuY2U6IG5vbmUgIWltcG9ydGFudDtcbiAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICBjdXJzb3I6IG5vdC1hbGxvd2VkICFpbXBvcnRhbnQ7XG4gIG9wYWNpdHk6IDAuOCAhaW1wb3J0YW50O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAoLW1zLWhpZ2gtY29udHJhc3Q6IGFjdGl2ZSkge1xuICAvKiBIaWdoIGNvbnRyYXN0IG1vZGUgb3V0bGluZSBoYWNrcyAqL1xuICAuY2hlY2tib3gtbGFiZWwtd3JhcC5kaXNhYmxlZCxcbiAgLnJhZGlvLWxhYmVsLXdyYXAuZGlzYWJsZWQsXG4gIC5jaGVja2JveC1sYWJlbC13cmFwLWlubGluZS5kaXNhYmxlZCxcbiAgLnJhZGlvLWxhYmVsLXdyYXAtaW5saW5lLmRpc2FibGVkIHtcbiAgICBvdXRsaW5lOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIH1cbn1cblxuLmNsb3NlLWJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG4gIHdpZHRoOiB2YXIoLS1mbHVpZC0yNCk7XG4gIGhlaWdodDogdmFyKC0tZmx1aWQtMjQpO1xufVxuLmNsb3NlLWJ1dHRvbjpob3Zlcixcbi5jbG9zZS1idXR0b246YWN0aXZlLFxuLmNsb3NlLWJ1dHRvbjpmb2N1cyB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIC8qIE5lZWRlZCBmb3IgSGlnaCBDb250cmFzdCBtb2RlICovXG4gIG91dGxpbmU6IHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctb3V0bGluZS13aWR0aCkgdmFyKC0tYWdub3N0aWMtZm9jdXMtcmluZy1vdXRsaW5lLXN0eWxlKVxuICAgIHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctb3V0bGluZS1jb2xvcik7XG59XG4uY2xvc2UtYnV0dG9uOmZvY3VzIHtcbiAgYm94LXNoYWRvdzogMCAwIDAgM3B4IHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctY29sb3IpO1xuICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IHZhcigtLWFnbm9zdGljLXRpbWluZy1mYXN0KSBlYXNlLW91dDtcbn1cblxuLmNsb3NlIHtcbiAgd2lkdGg6IHZhcigtLWZsdWlkLTEyKTtcbiAgaGVpZ2h0OiB2YXIoLS1mbHVpZC0xMik7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgbGluZS1oZWlnaHQ6IDFlbTtcbiAgZmxleC1zaHJpbms6IDA7XG4gIGNvbG9yOiBjdXJyZW50Q29sb3I7XG59XG5cbi5jbG9zZS1idXR0b24gLmNsb3NlIHtcbiAgb3BhY2l0eTogMC44O1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IHZhcigtLWFnbm9zdGljLXRpbWluZy1tZWRpdW0pO1xufVxuXG5AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb24pIHtcbiAgLmNsb3NlLWJ1dHRvbjpmb2N1cyxcbiAgLmNsb3NlLWJ1dHRvbiAuY2xvc2Uge1xuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuMDAxbXMgIWltcG9ydGFudDtcbiAgfVxufVxuXG4uY2xvc2UtYnV0dG9uOmhvdmVyIC5jbG9zZSB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5jbG9zZS1idXR0b24tc21hbGwge1xuICB3aWR0aDogdmFyKC0tZmx1aWQtMTgpO1xuICBoZWlnaHQ6IHZhcigtLWZsdWlkLTE4KTtcbn1cbi5jbG9zZS1idXR0b24tc21hbGwgPiAuY2xvc2Uge1xuICB3aWR0aDogMC41NjI1cmVtO1xuICBoZWlnaHQ6IDAuNTYyNXJlbTtcbn1cblxuLmNsb3NlLWJ1dHRvbi1sYXJnZSB7XG4gIHdpZHRoOiB2YXIoLS1mbHVpZC0zMik7XG4gIGhlaWdodDogdmFyKC0tZmx1aWQtMzIpO1xufVxuLmNsb3NlLWJ1dHRvbi1sYXJnZSA+IC5jbG9zZSB7XG4gIHdpZHRoOiB2YXIoLS1mbHVpZC0xNik7XG4gIGhlaWdodDogdmFyKC0tZmx1aWQtMTYpO1xufVxuXG4uY2xvc2UtYnV0dG9uLXhsYXJnZSB7XG4gIHdpZHRoOiB2YXIoLS1mbHVpZC00MCk7XG4gIGhlaWdodDogdmFyKC0tZmx1aWQtNDApO1xufVxuLmNsb3NlLWJ1dHRvbi14bGFyZ2UgPiAuY2xvc2Uge1xuICB3aWR0aDogdmFyKC0tZmx1aWQtMjApO1xuICBoZWlnaHQ6IHZhcigtLWZsdWlkLTIwKTtcbn1cblxuLmNvbGxhcHNlLXBhbmVsIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiB2YXIoLS1mbHVpZC0xNik7XG59XG5cbi5kaWFsb2cgaDEge1xuICBtYXJnaW46IDA7XG4gIC8qIFNpbmNlIHRoaXMgaXMgaW4gYSBtb2RhbCB3ZSB3YW50IHRvIGZvcmNlIGl0IHNtYWxsZXIgKi9cbiAgZm9udC1zaXplOiB2YXIoLS1hZ25vc3RpYy1oMyk7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBtYXJnaW4tYmxvY2stZW5kOiB2YXIoLS1mbHVpZC0xNik7XG59XG4uZGlhbG9nLWZvcm0tZGVtbyA+IGlucHV0IHtcbiAgbWFyZ2luLWJsb2NrLWVuZDogdmFyKC0tZmx1aWQtMjQpO1xufVxuXG4uZGlhbG9nLFxuLmRpYWxvZy1vdmVybGF5IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG59XG5cbi5kaWFsb2cge1xuICB6LWluZGV4OiAxMDAxO1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uZGlhbG9nW2FyaWEtaGlkZGVuPSd0cnVlJ10ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uZGlhbG9nLW92ZXJsYXkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDUwLCA1MCwgNTAsIDAuNik7XG4gIGFuaW1hdGlvbjogZmFkZS1pbiB2YXIoLS1hZ25vc3RpYy10aW1pbmctZmFzdCkgYm90aDtcbn1cblxuLmRpYWxvZy1jb250ZW50IHtcbiAgbWFyZ2luOiBhdXRvO1xuICB6LWluZGV4OiAxMDAxO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4uZGlhbG9nLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7XG4gIG1hcmdpbjogYXV0bztcbiAgei1pbmRleDogMTAwMTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBhbmltYXRpb246IGZhZGUtaW4gdmFyKC0tYWdub3N0aWMtdGltaW5nLWZhc3QpIGJvdGgsXG4gICAgc2xpZGUtdXAgdmFyKC0tYWdub3N0aWMtdGltaW5nLXNsb3cpIHZhcigtLWFnbm9zdGljLXRpbWluZy1mYXN0KSBib3RoO1xuICBwYWRkaW5nOiB2YXIoLS1mbHVpZC0xNik7XG4gIG1heC13aWR0aDogOTAlO1xuICB3aWR0aDogNjAwcHg7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLWFnbm9zdGljLXJhZGl1cyk7XG4gIC8qIEJvb3RzdHJhcCByZW1vdmVzIG91dGxpbmUgbGlrZWx5IGZvciBzb21lIHNvcnQgb2YgZWRnZSBjYXNlIGJyb3dzZXIgb3Igc29tZXRoaW5nLiBJZiBJXG4gIG1hbnVhbGx5IHB1dCBmb2N1cy12aXNpYmxlIEkgY2FuIHRyaWdnZXIgdGhlIG91dGxpbmUsIGJ1dCBJIGRvbid0IHNlZSBob3cgdGhpcyB3b3VsZCBoYXBwZW5cbiAgc2luY2UgZm9jdXMgaXMgY29udHJvbGxlciBieSBKUyBpbiBhMTF5LWRpYWxvZyAtLSBzb21ldGhpbmcgdG8ga2VlcCBhbiBleWUgb24gdGhvdWdoICovXG4gIC8qIG91dGxpbmU6IDA7ICovXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDcwMHB4KSB7XG4gIC5kaWFsb2ctY29udGVudCB7XG4gICAgcGFkZGluZzogdmFyKC0tZmx1aWQtMzIpO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgZmFkZS1pbiB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBzbGlkZS11cCB7XG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMCUpO1xuICB9XG59XG5cbi8qIFNoYXJlZCB3aXRoIEFnbm9zdGljVUkgY2xvc2UgYnV0b24gc28gb25seSBuZWVkIHBvc2l0aW9uaW5nIGFuZCB0cmFuc2l0aW9uICovXG4uZGlhbG9nLWNsb3NlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IHZhcigtLWZsdWlkLTgpO1xuICByaWdodDogdmFyKC0tZmx1aWQtOCk7XG59XG5cbkBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKSB7XG4gIC5kaWFsb2ctY29udGVudCB7XG4gICAgYW5pbWF0aW9uOiBub25lO1xuICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmRpYWxvZy1jbG9zZSB7XG4gICAgdG9wOiB2YXIoLS1mbHVpZC0xMik7XG4gICAgcmlnaHQ6IHZhcigtLWZsdWlkLTEyKTtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuZGlhbG9nLWNsb3NlIHtcbiAgICB0b3A6IHZhcigtLWZsdWlkLTE2KTtcbiAgICByaWdodDogdmFyKC0tZmx1aWQtMTYpO1xuICB9XG59XG5cbi5kaXNjbG9zZSB7XG4gIG1hcmdpbi1ibG9jay1lbmQ6IHZhcigtLWZsdWlkLTQpO1xufVxuXG4uZGlzY2xvc2UtdGl0bGUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LXdlaWdodDogNjAwO1xuICAvKiBSZXF1aXJlZCB0byBwb3NpdGlvbiB0aGUgaWNvbiBhYnNvbHV0ZWx5ICovXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRyYW5zaXRpb246IGNvbG9yIHZhcigtLWFnbm9zdGljLXRpbWluZy1zbG93KTtcbn1cblxuLmRpc2Nsb3NlLWJnIC5kaXNjbG9zZS10aXRsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFnbm9zdGljLWdyYXktbGlnaHQpO1xufVxuXG4uZGlzY2xvc2UtcGFuZWwge1xuICBmb250LXdlaWdodDogNDAwO1xufVxuXG4uZGlzY2xvc2UtdGl0bGUsXG4uZGlzY2xvc2UtcGFuZWwge1xuICBtYXJnaW46IDA7XG59XG4uZGlzY2xvc2UtdGl0bGUge1xuICBwYWRkaW5nOiB2YXIoLS1mbHVpZC04KSB2YXIoLS1mbHVpZC0xMik7XG59XG4uZGlzY2xvc2UtcGFuZWwge1xuICBwYWRkaW5nOiB2YXIoLS1mbHVpZC0xNik7XG59XG5cbi5kaXNjbG9zZS10aXRsZTo6d2Via2l0LWRldGFpbHMtbWFya2VyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmRpc2Nsb3NlLXRpdGxlOmZvY3VzIHtcbiAgYm94LXNoYWRvdzogMCAwIDAgdmFyKC0tYWdub3N0aWMtZm9jdXMtcmluZy1vdXRsaW5lLXdpZHRoKSB2YXIoLS1hZ25vc3RpYy1mb2N1cy1yaW5nLWNvbG9yKTtcbiAgLyogTmVlZGVkIGZvciBIaWdoIENvbnRyYXN0IG1vZGUgKi9cbiAgb3V0bGluZTogdmFyKC0tYWdub3N0aWMtZm9jdXMtcmluZy1vdXRsaW5lLXdpZHRoKSB2YXIoLS1hZ25vc3RpYy1mb2N1cy1yaW5nLW91dGxpbmUtc3R5bGUpXG4gICAgdmFyKC0tYWdub3N0aWMtZm9jdXMtcmluZy1vdXRsaW5lLWNvbG9yKTtcbiAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyB2YXIoLS1hZ25vc3RpYy10aW1pbmctZmFzdCkgZWFzZS1vdXQ7XG59XG5cbi5kaXNjbG9zZS10aXRsZTo6YWZ0ZXIge1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtZ3JheS1kYXJrKTtcbiAgY29udGVudDogJ1xcMjAzQSc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IHZhcigtLWZsdWlkLTEyKTtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIC8qIENoZXZyb24gdGhpbm5pbmcgOikgKi9cbiAgZm9udC1zaXplOiB2YXIoLS1mbHVpZC0zMik7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBmb250LXdlaWdodDogMTAwO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gdmFyKC0tYWdub3N0aWMtdGltaW5nLXNsb3cpO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgwKTtcbn1cblxuQG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiByZWR1Y2UpIHtcbiAgLmRpc2Nsb3NlLXRpdGxlLFxuICAuZGlzY2xvc2UtdGl0bGU6Zm9jdXMsXG4gIC5kaXNjbG9zZS10aXRsZTo6YWZ0ZXIge1xuICAgIHRyYW5zaXRpb246IG5vbmU7XG4gIH1cbn1cblxuLmRpc2Nsb3NlW29wZW5dID4gLmRpc2Nsb3NlLXRpdGxlOjphZnRlciB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbn1cblxuLmhlYWRlcixcbi5oZWFkZXItYmFzZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uaGVhZGVyLWJhc2UgaW1nLFxuLmhlYWRlciBpbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLmhlYWRlcixcbi5oZWFkZXItc2tpbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFnbm9zdGljLWhlYWRlci1iYWNrZ3JvdW5kLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1saWdodCkpO1xuICBib3gtc2hhZG93OiB2YXIoLS1hZ25vc3RpYy1oZWFkZXItYm94LXNoYWRvdy1ob3IsIDApIHZhcigtLWFnbm9zdGljLWhlYWRlci1ib3gtc2hhZG93LXZlciwgMXB4KVxuICAgIHZhcigtLWFnbm9zdGljLWhlYWRlci1ib3gtc2hhZG93LWJsdXIsIDVweCkgdmFyKC0tYWdub3N0aWMtaGVhZGVyLWJveC1zaGFkb3ctc3ByZWFkLCAycHgpXG4gICAgdmFyKC0tYWdub3N0aWMtaGVhZGVyLWJveC1zaGFkb3ctY29sb3IsIHJnYmEoMCwgMCwgMCwgMC4xKSk7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1hZ25vc3RpYy1oZWFkZXItZm9udC1mYW1pbHksIHZhcigtLWFnbm9zdGljLWZvbnQtZmFtaWx5KSk7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB2YXIoLS1hZ25vc3RpYy1oZWFkZXItYm9yZGVyLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1ncmF5LWxpZ2h0KSk7XG4gIHBhZGRpbmctYmxvY2stc3RhcnQ6IHZhcigtLWFnbm9zdGljLXZlcnRpY2FsLXBhZCwgMC41cmVtKTtcbiAgcGFkZGluZy1ibG9jay1lbmQ6IHZhcigtLWFnbm9zdGljLXZlcnRpY2FsLXBhZCwgMC41cmVtKTtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IHZhcigtLWZsdWlkLTI0KTtcbiAgcGFkZGluZy1pbmxpbmUtZW5kOiB2YXIoLS1mbHVpZC0yNCk7XG59XG5cbi5oZWFkZXItY29udGVudCB7XG4gIHdpZHRoOiB2YXIoLS1hZ25vc3RpYy1oZWFkZXItY29udGVudC13aWR0aCwgOTYwcHgpO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuXG4vKipcbiAqIElmIHlvdSBtYWtlIHlvdXIgaGVhZGVyIHN0aWNreSwgeW91IHNob3VsZCBsaWtlbHkgY29uc2lkZXIgdGhhdCBqdW1wIGxpbmtzXG4gKiBlLmcuIDxoMSBpZD1cIkp1bXAtSGVyZVwiPi4uLiB3aWxsIHR1Y2sgdW5kZXJuZWF0aCB0aGUgaGVhZGVyISBIZXJlJ3MgYSByZWNvbW1lbmRhdGlvblxuICogZm9yIGhvdyB0byBjaXJjdW1uYXZpZ2F0ZSB0aGlzIGlzc3VlIHZpYSBzY3JvbGwtbWFyZ2luLXRvcDpcbiAgaDFbaWRdLFxuICBoMltpZF0sXG4gIGgzW2lkXSxcbiAgaDRbaWRdLFxuICBoNVtpZF0sXG4gIGg2W2lkXSB7XG4gICAgc2Nyb2xsLW1hcmdpbi10b3A6IDgwcHg7XG4gIH1cbiAqIEluIHRoaXMgY2FzZSBJIGhhdmUgYSA2NHB4IHRhbGwgaGVhZGVyIHNvIEkndmUgYWRkZWQgMTZweCBmb3IgY2xlYXJhbmNlIC0tIHlvdSdsbCBuZWVkXG4gKiB0byBjdXJhdGUgeW91ciBvd24gdXNlIGNhc2UsIGJ1dCBzY3JvbGwtbWFyZ2luLXRvcCBpcyBzdXBlciB1c2VmdWwgZm9yIHRoaXMgdXNlIGNhc2UuXG4gKi9cblxuLmhlYWRlci1zdGlja3kge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogMDtcbiAgei1pbmRleDogMTA7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA5NjBweCkge1xuICAuaGVhZGVyLXN0aWNreSB7XG4gICAgcG9zaXRpb246IHN0aWNreTtcbiAgfVxuXG4gIC5oZWFkZXItY29udGVudCB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIH1cbn1cblxuLyogR29lcyBvbiB0aGUgPHVsPiAqL1xuLmhlYWRlci1uYXYge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA5NjBweCkge1xuICAuaGVhZGVyLW5hdiB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgfVxufVxuXG4uaGVhZGVyLW5hdi1pdGVtIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuLmhlYWRlci1uYXYtaXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgbWFyZ2luLWlubGluZS1lbmQ6IGluaXRpYWw7XG4gIG1hcmdpbi1ibG9jay1lbmQ6IHZhcigtLWZsdWlkLTgpO1xufVxuXG4uaGVhZGVyLW5hdi1pdGVtIGEge1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtaGVhZGVyLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1mb250LWNvbG9yKSk7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk2MHB4KSB7XG4gIC5oZWFkZXItbmF2LWl0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLWlubGluZS1lbmQ6IHZhcigtLWFnbm9zdGljLWhlYWRlci1uYXYtc3BhY2luZywgdmFyKC0tZmx1aWQtMzIpKTtcbiAgICBtYXJnaW4tYmxvY2stZW5kOiBpbml0aWFsO1xuICB9XG59XG5cbi5pY29uLWJhc2UsXG4uaWNvbiB7XG4gIC8qIGRpc3BsYXk6IGlubGluZS1ibG9jazsgKi9cbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIG1hcmdpbjogYXV0bztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAvKiBFbnN1cmVzIG5vIFwic3RyZXRjaGluZ1wiIG9mIGljb25zIHRvIHJlYWNoIDEwMCUgb2YgY29udGFpbmVyJ3Mgd2lkdGggKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiBFbnN1cmUgU1ZHcyBkb24ndCBoYXZlIGNsaWNrIGV2ZW50cyAtLSB0eXBpY2FsbHkgd2Ugd2FudCBlbmNsb3NpbmcgYnV0dG9uIHRvIGhhbmRsZSAqL1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG5cbi5pY29uLXNraW4sXG4uaWNvbiB7XG4gIGZpbGw6IGN1cnJlbnRjb2xvcjtcbiAgd2lkdGg6IHZhcigtLWZsdWlkLTE2KTtcbiAgaGVpZ2h0OiB2YXIoLS1mbHVpZC0xNik7XG59XG5cbi5pY29uLTE0IHtcbiAgd2lkdGg6IHZhcigtLWZsdWlkLTE0KTtcbiAgaGVpZ2h0OiB2YXIoLS1mbHVpZC0xNCk7XG59XG4uaWNvbi0xNiB7XG4gIHdpZHRoOiB2YXIoLS1mbHVpZC0xNik7XG4gIGhlaWdodDogdmFyKC0tZmx1aWQtMTYpO1xufVxuLmljb24tMTgge1xuICB3aWR0aDogdmFyKC0tZmx1aWQtMTgpO1xuICBoZWlnaHQ6IHZhcigtLWZsdWlkLTE4KTtcbn1cbi5pY29uLTIwIHtcbiAgd2lkdGg6IHZhcigtLWZsdWlkLTIwKTtcbiAgaGVpZ2h0OiB2YXIoLS1mbHVpZC0yMCk7XG59XG4uaWNvbi0yNCB7XG4gIHdpZHRoOiB2YXIoLS1mbHVpZC0yNCk7XG4gIGhlaWdodDogdmFyKC0tZmx1aWQtMjQpO1xufVxuLmljb24tMzIge1xuICB3aWR0aDogdmFyKC0tZmx1aWQtMzIpO1xuICBoZWlnaHQ6IHZhcigtLWZsdWlkLTMyKTtcbn1cbi5pY29uLTM2IHtcbiAgd2lkdGg6IHZhcigtLWZsdWlkLTM2KTtcbiAgaGVpZ2h0OiB2YXIoLS1mbHVpZC0zNik7XG59XG4uaWNvbi00MCB7XG4gIHdpZHRoOiB2YXIoLS1mbHVpZC00MCk7XG4gIGhlaWdodDogdmFyKC0tZmx1aWQtNDApO1xufVxuLmljb24tNDgge1xuICB3aWR0aDogdmFyKC0tZmx1aWQtNDgpO1xuICBoZWlnaHQ6IHZhcigtLWZsdWlkLTQ4KTtcbn1cbi5pY29uLTU2IHtcbiAgd2lkdGg6IHZhcigtLWZsdWlkLTU2KTtcbiAgaGVpZ2h0OiB2YXIoLS1mbHVpZC01Nik7XG59XG4uaWNvbi02NCB7XG4gIHdpZHRoOiB2YXIoLS1mbHVpZC02NCk7XG4gIGhlaWdodDogdmFyKC0tZmx1aWQtNjQpO1xufVxuLmljb24taW5mbyB7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1wcmltYXJ5KTtcbn1cbi5pY29uLXN1Y2Nlc3Mge1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtYWN0aW9uKTtcbn1cbi5pY29uLXdhcm5pbmcge1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtd2FybmluZy1ib3JkZXItYWNjZW50KTtcbn1cbi5pY29uLWVycm9yIHtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWVycm9yKTtcbn1cblxuLmlucHV0LWJhc2UsXG4uaW5wdXQge1xuICAvKiBOb3RlIHRoaXMgY2Fubm90IGJlIHVzZXItc2VsZWN0OiBub25lIGVsc2UgbW9iaWxlIHNhZmFyaSB3b24ndCBhY2NlcHQgaW5wdXQ6XG4gIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzQ5ODg5MDAzL2Nhbm5vdC13cml0ZS1pbnRvLWlucHV0LWZpZWxkLW9uLXNhZmFyaS80OTkwMTA2OVxuICAgKi9cbiAgdXNlci1zZWxlY3Q6IGluaXRpYWw7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIFVzZSB0aGUgc2FtZSBjb2xvciBmb3IgdGhlIGN1cnNvciAqL1xuICBjYXJldC1jb2xvcjogY3VycmVudENvbG9yO1xufVxuXG4ubGFiZWwsXG4ubGFiZWwtYmFzZSB7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG59XG5cbi8qIEVsZWN0aW5nIHRvIHNjb3BlIHRoZXNlIGFzIG9wcG9zZWQgdG8gZG9pbmcgOnJvb3QgbGV2ZWwgZGVmaW5pdGlvbnMgKi9cbi5maWVsZC1oZWxwLFxuLmZpZWxkLWhlbHAtbGFyZ2UsXG4uZmllbGQtaGVscC1zbWFsbCxcbi5maWVsZC1lcnJvcixcbi5maWVsZC1lcnJvci1sYXJnZSxcbi5maWVsZC1lcnJvci1zbWFsbCxcbi5sYWJlbC1za2luLFxuLmxhYmVsLFxuLmlucHV0LWFkZG9uLWNvbnRhaW5lcixcbi5pbnB1dC1zbWFsbCxcbi5pbnB1dC1sYXJnZSxcbi5pbnB1dC1za2luLFxuLmlucHV0LXVuZGVybGluZWQsXG4uaW5wdXQtdW5kZXJsaW5lZC1iZyxcbi5pbnB1dCB7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1mb250LWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1kYXJrKSk7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1hZ25vc3RpYy1mb250LWZhbWlseSk7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1hZ25vc3RpYy1mb250LXdlaWdodCwgMzAwKTtcbiAgZm9udC1zaXplOiB2YXIoLS1hZ25vc3RpYy1mb250LXNpemUsIDFyZW0pO1xuICBsaW5lLWhlaWdodDogdmFyKC0tYWdub3N0aWMtbGluZS1oZWlnaHQsIHZhcigtLWZsdWlkLTIwLCAxLjI1cmVtKSk7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cbi5pbnB1dC1za2luLFxuLmlucHV0IHtcbiAgLyogc2VlbXMgbGlrZSBhIHJlYXNvbmFibGUgZGVmYXVsdCBhcyBjaHJvbWUgcGlja3MgYG91dHNldGAgd2hpY2ggcmVzdWx0cyBpbiBhIHdlaXJkIDNkIGVmZmVjdCAqL1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAvKiB0aGlzIGNhbiBiZSBvdmVycmlkZW4sIGJ1dCBpdCBtaWdodCBtZXNzIHdpdGggdGhlIGJhbGFuY2Ugb2YgdGhlIGJ1dHRvbiBoZWlnaHRzIGFjcm9zcyB2YXJpYW50cyAqL1xuICBib3JkZXItd2lkdGg6IHZhcigtLWFnbm9zdGljLWlucHV0LWJvcmRlci1zaXplLCAxcHgpO1xuICBib3JkZXItY29sb3I6IHZhcigtLWFnbm9zdGljLWlucHV0LWJvcmRlci1jb2xvciwgdmFyKC0tYWdub3N0aWMtZ3JheS1saWdodCkpO1xuICAvKiB0aGVzZSBjYW4gYmUgb3ZlcnJpZGVuLCBidXQgaXQgbWlnaHQgbWVzcyB3aXRoIHRoZSBiYWxhbmNlIG9mIHRoZSBpbnB1dGhlaWdodHMgYWNyb3NzIHZhcmlhbnRzICovXG4gIHBhZGRpbmctYmxvY2stc3RhcnQ6IHZhcigtLWFnbm9zdGljLWlucHV0LXZlcnRpY2FsLXBhZCwgMC41cmVtKTtcbiAgcGFkZGluZy1ibG9jay1lbmQ6IHZhcigtLWFnbm9zdGljLWlucHV0LXZlcnRpY2FsLXBhZCwgMC41cmVtKTtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IHZhcigtLWFnbm9zdGljLWlucHV0LXNpZGUtcGFkZGluZywgMC43NXJlbSk7XG4gIHBhZGRpbmctaW5saW5lLWVuZDogdmFyKC0tYWdub3N0aWMtaW5wdXQtc2lkZS1wYWRkaW5nLCAwLjc1cmVtKTtcblxuICAvKiBOb3RlIHdlIG9ubHkgd2FudCB0byBzZXQgcHJvcGVydGllcyB0aGF0IHdlIGFjdHVhbGx5IHdhbnRcbiAgdG8gdHJhbnNpdGlvbiBpbi4gRm9yIGV4YW1wbGUsIGlmIHdlIHRyYW5zaXRpb24gXCJhbGxcIiwgdGhlXG4gIGlucHV0cyB3aWxsIFwiZ3JvdyBpblwiIG9uIHBhZ2UgbG9hZOKAlG5vdCBhIGhhcHB5IGVmZmVjdCA6KSAqL1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBib3gtc2hhZG93O1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiB2YXIoLS1hZ25vc3RpYy1pbnB1dC10aW1pbmcsIHZhcigtLWFnbm9zdGljLXRpbWluZy1tZWRpdW0pKTtcbn1cblxuLmxhYmVsIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKiBQcm92aWRlZCAtLWFnbm9zdGljLWlucHV0LXZlcnRpY2FsLXBhZCBpc24ndCBvdmVycmlkZW4gd2UnbGwgZ2V0IDIwcHhcbiAgbGFiZWwgdy9hIDZweCBtYXJnaW4gdGhlbiBhIDM4cHggaW5wdXQgPSA2NCB3aGljaCBpcyBvbiB0aGUgOHB0IGdyaWQgKi9cbiAgbWFyZ2luLWJsb2NrLXN0YXJ0OiAwO1xuICBtYXJnaW4taW5saW5lLXN0YXJ0OiAwO1xuICBtYXJnaW4taW5saW5lLWVuZDogMDtcbiAgbWFyZ2luLWJsb2NrLWVuZDogdmFyKC0tYWdub3N0aWMtaW5wdXQtbGFiZWwtcGFkLCAwLjM3NXJlbSk7XG4gIHZlcnRpY2FsLWFsaWduOiBpbml0aWFsO1xufVxuXG4vKiBSZXNldCBsYWJlbHMgYW5kIGZpZWxkIGVycm9ycyB0byBiZSAycHggbGVzcyB0aGVuIGlucHV0IGZvbnQgc2l6ZSAqL1xuLmZpZWxkLWhlbHAsXG4uZmllbGQtZXJyb3IsXG4ubGFiZWwsXG4ubGFiZWwtc2tpbiB7XG4gIGZvbnQtc2l6ZTogY2FsYyh2YXIoLS1hZ25vc3RpYy1mb250LXNpemUsIDFyZW0pIC0gMnB4KTtcbn1cblxuLmxhYmVsLWlubGluZSxcbi5pbnB1dC1pbmxpbmUge1xuICB3aWR0aDogYXV0bztcbn1cblxuLyogV2hlbiBpbmxpbmVkLCB0aGUgbWFyZ2luLWJsb2NrLWVuZCB3aWxsIHRocm93IHRoZSBsYWJlbCBvZmYtY2VudGVyIHdpdGggYWRqYWNlbnQgaW5wdXQgKi9cbi5sYWJlbC1pbmxpbmUge1xuICBtYXJnaW4tYmxvY2stc3RhcnQ6IDA7XG4gIG1hcmdpbi1ibG9jay1lbmQ6IDA7XG4gIG1hcmdpbi1pbmxpbmUtc3RhcnQ6IDA7XG4gIG1hcmdpbi1pbmxpbmUtZW5kOiB2YXIoLS1hZ25vc3RpYy1pbnB1dC1zaWRlLXBhZGRpbmcsIDAuNzVyZW0pO1xufVxuXG4vKipcbiogUGxhY2Vob2xkZXJcbiovXG4uaW5wdXQ6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogY3VycmVudENvbG9yO1xuICBvcGFjaXR5OiAwLjU7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgdmFyKC0tYWdub3N0aWMtdGltaW5nLWZhc3QpIGVhc2Utb3V0O1xufVxuXG4uaW5wdXQ6Oi1tb3otcGxhY2Vob2xkZXIge1xuICBjb2xvcjogY3VycmVudENvbG9yO1xuICBvcGFjaXR5OiAwLjU7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgdmFyKC0tYWdub3N0aWMtdGltaW5nLWZhc3QpIGVhc2Utb3V0O1xufVxuXG4uaW5wdXQ6Oi1tcy1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIG9wYWNpdHk6IDAuNTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSB2YXIoLS1hZ25vc3RpYy10aW1pbmctZmFzdCkgZWFzZS1vdXQ7XG59XG5cbi5pbnB1dDotbXMtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogY3VycmVudENvbG9yO1xuICBvcGFjaXR5OiAwLjU7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgdmFyKC0tYWdub3N0aWMtdGltaW5nLWZhc3QpIGVhc2Utb3V0O1xufVxuXG4vKipcbiogVW5kZXJsaW5lZCBpbnB1dHNcbiovXG4uaW5wdXQtdW5kZXJsaW5lZCB7XG4gIGJvcmRlci10b3A6IDA7XG4gIGJvcmRlci1sZWZ0OiAwO1xuICBib3JkZXItcmlnaHQ6IDA7XG4gIGJvcmRlci1jb2xvcjogdmFyKC0tYWdub3N0aWMtaW5wdXQtdW5kZXJsaW5lZC1jb2xvciwgdmFyKC0tYWdub3N0aWMtZ3JheS1taWQtZGFyaykpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLmlucHV0LXVuZGVybGluZWQtYmcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1pbnB1dC11bmRlcmxpbmVkLWJnLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1ncmF5LWV4dHJhLWxpZ2h0KSk7XG59XG5cbi8qKlxuKiBSb3VuZGVkIGlucHV0c1xuKi9cbi5pbnB1dC1yb3VuZGVkIHtcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0tYWdub3N0aWMtcmFkaXVzLCAwLjI1cmVtKTtcbn1cblxuLyoqXG4gKiBFcnJvcnNcbiAqIFdlIHByb3ZpZGUgYSBjbGFzcy1iYXNlZCBhcHByb2FjaCB0byBzZXR0aW5nIGVycm9ycyB3aGljaCBtZWFucyB3ZSBkb1xuICogbm90IHN1cHBvcnQgOmludmFsaWQsIHNvIGl0IHJlcXVpcmVzIGN1c3RvbSB1c2Ugb2YgaHRtbDQgdmFsaWRhdGlvbiBBUElcbiAqIChzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9MZWFybi9Gb3Jtcy9Gb3JtX3ZhbGlkYXRpb25cbiAqIG9mIHRoZSBleGFtcGxlIGluIGNvcnJlc3BvbmRpbmcgaW5wdXQuaHRtbCBmaWxlKS4gVGhlIHJlYXNvbiBJIGVsZWN0ZWQgdG9cbiAqIG5vdCBpbmNsdWRlIDppbnZhbGlkLCBpcyBpdCBzZWVtcyB0byByZXN1bHQgaW4gXCJzaG91dGluZ1wiIGF0IHRoZSB1c2VyIGFzXG4gKiBJIGRpZCBub3QgZmluZCBhbiBlYXN5IHdheSB0byBvbmx5IGtpY2sgaW4gZXJyb3JzIGFmdGVyIGEgY2VydGFpbiBudW1iZXJcbiAqIG9mIGNoYXJhY3RlcnMgaGF2ZSBiZWVuIHR5cGUgKGJsdXIgaXMgYWN0dWFsbHkgYmV0dGVyIGJ1dCBJIGRpZCBub3RcbiAqIGltcGxlbWVudCB0aGF0IGluIHRoZSBjb250cml2ZWQgZXhhbXBsZSkuXG4gKi9cbi5sYWJlbC1lcnJvciB7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1pbnB1dC1lcnJvci1jb2xvciwgdmFyKC0tYWdub3N0aWMtZXJyb3IpKTtcbn1cbi5pbnB1dC1lcnJvciB7XG4gIGJvcmRlci1jb2xvcjogdmFyKC0tYWdub3N0aWMtaW5wdXQtZXJyb3ItY29sb3IsIHZhcigtLWFnbm9zdGljLWVycm9yKSk7XG59XG5cbi5sYWJlbC1lcnJvcixcbi5maWVsZC1lcnJvcixcbi5maWVsZC1lcnJvci1zbWFsbCxcbi5maWVsZC1lcnJvci1sYXJnZSB7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1pbnB1dC1lcnJvci1jb2xvciwgdmFyKC0tYWdub3N0aWMtZXJyb3IpKTtcbn1cblxuLmZpZWxkLWhlbHAsXG4uZmllbGQtaGVscC1zbWFsbCxcbi5maWVsZC1oZWxwLWxhcmdlIHtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWlucHV0LWhlbHAtY29sb3IsIHZhcigtLWFnbm9zdGljLWdyYXktZGFyaykpO1xufVxuXG4uZmllbGQtaGVscCxcbi5maWVsZC1oZWxwLXNtYWxsLFxuLmZpZWxkLWhlbHAtbGFyZ2UsXG4uZmllbGQtZXJyb3IsXG4uZmllbGQtZXJyb3Itc21hbGwsXG4uZmllbGQtZXJyb3ItbGFyZ2Uge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYmxvY2stc3RhcnQ6IGNhbGModmFyKC0tYWdub3N0aWMtaW5wdXQtdmVydGljYWwtcGFkLCAwLjVyZW0pIC8gMik7XG59XG5cbi8qKlxuICAqIFNpemVzXG4gICovXG4uaW5wdXQtbGFyZ2Uge1xuICBmb250LXNpemU6IGNhbGModmFyKC0tYWdub3N0aWMtZm9udC1zaXplLCAxcmVtKSArIDAuMjVyZW0pO1xuICBsaW5lLWhlaWdodDogMS42cmVtO1xufVxuXG4uZmllbGQtaGVscC1sYXJnZSxcbi5maWVsZC1lcnJvci1sYXJnZSxcbi5sYWJlbC1sYXJnZSB7XG4gIC8qIFdlIGluaXRpYWxseSByZW1vdmUgLTJweCBmcm9tIGZvbnQtc2l6ZSBzbyBzZXR0aW5nIHRvIGZvbnQtc2l6ZSBlc3NlbnRpYWxseSBhZGRzIHRoZSAycHggYmFjayAqL1xuICBmb250LXNpemU6IHZhcigtLWFnbm9zdGljLWZvbnQtc2l6ZSwgMXJlbSk7XG59XG5cbi5pbnB1dC1zbWFsbCB7XG4gIGZvbnQtc2l6ZTogY2FsYyh2YXIoLS1hZ25vc3RpYy1mb250LXNpemUsIDFyZW0pIC0gMC4yNXJlbSk7XG4gIGxpbmUtaGVpZ2h0OiAxcmVtO1xufVxuXG4uZmllbGQtaGVscC1zbWFsbCxcbi5maWVsZC1lcnJvci1zbWFsbCxcbi5sYWJlbC1zbWFsbCB7XG4gIGZvbnQtc2l6ZTogY2FsYyh2YXIoLS1hZ25vc3RpYy1mb250LXNpemUsIDFyZW0pIC0gMC4yNXJlbSk7XG59XG5cbi5pbnB1dDpmb2N1cyB7XG4gIGJveC1zaGFkb3c6IDAgMCAwIHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctb3V0bGluZS13aWR0aCkgdmFyKC0tYWdub3N0aWMtZm9jdXMtcmluZy1jb2xvcik7XG4gIC8qIE5lZWRlZCBmb3IgSGlnaCBDb250cmFzdCBtb2RlICovXG4gIG91dGxpbmU6IHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctb3V0bGluZS13aWR0aCkgdmFyKC0tYWdub3N0aWMtZm9jdXMtcmluZy1vdXRsaW5lLXN0eWxlKVxuICAgIHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctb3V0bGluZS1jb2xvcik7XG4gIHRyYW5zaXRpb246IGJveC1zaGFkb3cgdmFyKC0tYWdub3N0aWMtdGltaW5nLWZhc3QpIGVhc2Utb3V0O1xufVxuXG4vKiBTZXQgdGhlIGZvY3VzIHRvIHRyYW5zcGFyZW50IHdoZW4gdGhlcmUncyBhbiBlcnJvciBzaW5jZSB3ZSB1c2VcbmJvcmRlcnMgdGhhdCB2aXN1YWxseSBjb25mbGljdC4gKi9cbi5pbnB1dC1lcnJvcjpmb2N1cyB7XG4gIGJveC1zaGFkb3c6IDAgMCAwIDNweCB0cmFuc3BhcmVudDtcbn1cblxuLypcbiogRGlzYWJsZWQgU3RhdGVcbipcbiogVGhlIGRpc2FibGVkIHN0YXRlIHVzZXMgdGhlIGNsYXNzIC5kaXNhYmxlZCxcbiogYW5kIHRoZSBmb3JtIGF0dHJpYnV0ZSBkaXNhYmxlZD1cImRpc2FibGVkXCIuXG4qIFRoZSB1c2Ugb2YgIWltcG9ydGFudCBpcyBvbmx5IGFkZGVkIGJlY2F1c2UgdGhpcyBpcyBhIHN0YXRlXG4qIHRoYXQgbXVzdCBiZSBhcHBsaWVkIHRvIGFsbCBpbnB1dHMgd2hlbiBpbiBhIGRpc2FibGVkIHN0YXRlLlxuKi9cbi5pbnB1dC5kaXNhYmxlZCwgLyogREVQUkVDQVRFRCAtLSBUT0RPIHJlbW92ZSBjbGFzcyBiYXNlZCBkaXNhYmxlZCAqL1xuLmlucHV0OmRpc2FibGVkIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tYWdub3N0aWMtaW5wdXQtZGlzYWJsZWQtYmcsIHZhcigtLWFnbm9zdGljLWRpc2FibGVkLWJnKSkgIWltcG9ydGFudDtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWlucHV0LWRpc2FibGVkLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1kaXNhYmxlZC1jb2xvcikpICFpbXBvcnRhbnQ7XG4gIGFwcGVhcmFuY2U6IG5vbmUgIWltcG9ydGFudDtcbiAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICBjdXJzb3I6IG5vdC1hbGxvd2VkICFpbXBvcnRhbnQ7XG4gIG9wYWNpdHk6IDAuOCAhaW1wb3J0YW50O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAoLW1zLWhpZ2gtY29udHJhc3Q6IGFjdGl2ZSkge1xuICAvKiBIaWdoIGNvbnRyYXN0IG1vZGUgb3V0bGluZSBoYWNrcyAqL1xuICAuaW5wdXQ6ZGlzYWJsZWQge1xuICAgIG91dGxpbmU6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgfVxufVxuXG4vKipcbiAqIElucHV0IFwiaGFzIGFkZG9uXCJcbiAqL1xuXG4uaW5wdXQtYWRkb24tY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgLyogTWF5YmUgSSBzaG91bGQgaGF2ZSBkZWZpbmVkIGFub3RoZXIgY3NzIHByb3AgZm9yIGFkZG9uIGFkanVzdG1lbnRzIGJ1dCB0cnlpbmdcbiAgdG8gYXZvaWQgYW55IGV4dHJhIHZhcmlhYmxlIGV4cGxvc2lvbiB0aGVyZS0td2lsbCBuZWVkIHRvIGtlZXAgYW4gZXllIG9uIHRoaXMgKi9cbiAgLS1hZGRvbi1wYWRkaW5nOiBjYWxjKHZhcigtLWFnbm9zdGljLWlucHV0LXNpZGUtcGFkZGluZywgMC43NXJlbSkgKiAxLjUpO1xufVxuXG4uaW5wdXQtaGFzLWxlZnQtYWRkb24sXG4uaW5wdXQtaGFzLXJpZ2h0LWFkZG9uIHtcbiAgZmxleDogMTtcbn1cblxuLmlucHV0LWhhcy1sZWZ0LWFkZG9uIHtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IGNhbGModmFyKC0tYWRkb24tcGFkZGluZykgKiAyLjI1KTtcbn1cblxuLmlucHV0LWhhcy1yaWdodC1hZGRvbiB7XG4gIHBhZGRpbmctaW5saW5lLWVuZDogY2FsYyh2YXIoLS1hZGRvbi1wYWRkaW5nKSAqIDIuMjUpO1xufVxuXG5AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb24pIHtcbiAgLmlucHV0Ojotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyLFxuICAuaW5wdXQ6Oi1tb3otcGxhY2Vob2xkZXIsXG4gIC5pbnB1dDo6LW1zLXBsYWNlaG9sZGVyLFxuICAuaW5wdXQ6LW1zLXBsYWNlaG9sZGVyLFxuICAuaW5wdXQtc2tpbixcbiAgLmlucHV0OmZvY3VzLFxuICAuaW5wdXQge1xuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuMDAxbXMgIWltcG9ydGFudDtcbiAgfVxufVxuXG4vKlxuKiBJbnB1dCBhZGRvbnMgZS5nLiBpY29ucyBpbnNpZGUgdGhlIGlucHV0XG4qL1xuLmlucHV0LWFkZG9uLXJpZ2h0LFxuLmlucHV0LWFkZG9uLWxlZnQge1xuICAvKiBNYXliZSBJIHNob3VsZCBoYXZlIGRlZmluZWQgYW5vdGhlciBjc3MgcHJvcCBmb3IgYWRkb24gYWRqdXN0bWVudHMgYnV0IHRyeWluZ1xuICB0byBhdm9pZCBhbnkgZXh0cmEgdmFyaWFibGUgZXhwbG9zaW9uIHRoZXJlLS13aWxsIG5lZWQgdG8ga2VlcCBhbiBleWUgb24gdGhpcyAqL1xuICAtLWFkZG9uLXBhZGRpbmc6IGNhbGModmFyKC0tYWdub3N0aWMtaW5wdXQtc2lkZS1wYWRkaW5nKSAqIDEuNSk7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbn1cblxuLmlucHV0LWFkZG9uLWxlZnQge1xuICBsZWZ0OiB2YXIoLS1hZGRvbi1wYWRkaW5nKTtcbn1cblxuLmlucHV0LWFkZG9uLXJpZ2h0IHtcbiAgcmlnaHQ6IHZhcigtLWFkZG9uLXBhZGRpbmcpO1xufVxuXG4vKiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy80NTUwNzk3MC9ob3ctY2FuLWktY2hhbmdlLXRoZS1jb2xvci1vZi1hLXByb2dyZXNzLWJhci12YWx1ZS1pbi1odG1sICovXG4vKipcbiAqIE1vc3QgZXhhbXBsZXMgc2hvdyBzdHlsaW5nIGRpcmVjdGx5IHRvIHRoZSA8cHJvZ3Jlc3M+IGVsZW1lbnQgaXRzZWxmLiBIb3dldmVyLFxuICogbXkgdGVzdHMgKGNocm9tZSwgZmYsIHNhZmFyaSBvbiBtYWMgbWluaSAyMDIwKSwgc2hvd2VkIGl0J3MgcGVyZmVjdGx5IHBvc3NpYmx5XG4gKiB0byB1c2UgYSBjbGFzcyBzZWxlY3RvciBpbnN0ZWFkLiBUaGUgcmVhc29uIEknZCBwcmVmZXIgdGhhdCBoZXJlLCBpcyB0aGF0IEkgY2FuXG4gKiB0aGVuIHVzZSBDU1MgTW9kdWxlcyBjb21wb3NlcyBhZ2FpbnN0IC5wcm9ncmVzcyAoZS5nLiBmb3IgUmVhY3QvVnVlIGNvbXBvbmVudHMpXG4gKi9cbi5wcm9ncmVzcyB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgaGVpZ2h0OiB2YXIoLS1hZ25vc3RpYy1wcm9ncmVzcy1oZWlnaHQsIHZhcigtLWZsdWlkLTEwLCAwLjYyNXJlbSkpO1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyOiBub25lO1xuICAvKiBOZXh0IGNvdXBsZSBvZiBydWxlcyBhcmUgcmVxdWlyZWQgdG8gYmUgaGVyZSBmb3IgRkYgKGJ1dCBub3QgY2hyb21lKSAqL1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1wcm9ncmVzcy1iYWNrZ3JvdW5kLCB2YXIoLS1hZ25vc3RpYy1ncmF5LWxpZ2h0LCAjZWRlZGVkKSk7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLWFnbm9zdGljLXByb2dyZXNzLXJhZGl1cywgdmFyKC0tZmx1aWQtMTAsIDAuNjI1cmVtKSk7XG59XG5cbi5wcm9ncmVzc1t2YWx1ZV06Oi13ZWJraXQtcHJvZ3Jlc3MtYmFyIHtcbiAgLyogSW4gbXkgdGVzdHMgY2hyb21lIHJlcXVpcmVzIHRoaXMgd2hlcmVhcyBGRiB3YW50cyBpdCBvbiB0aGUgcHJvZ3Jlc3Mge30gcnVsZSAqL1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1wcm9ncmVzcy1iYWNrZ3JvdW5kLCB2YXIoLS1hZ25vc3RpYy1ncmF5LWxpZ2h0LCAjZWRlZGVkKSk7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLWFnbm9zdGljLXByb2dyZXNzLXJhZGl1cywgdmFyKC0tZmx1aWQtMTAsIDAuNjI1cmVtKSk7XG59XG5cbi5wcm9ncmVzc1t2YWx1ZV06Oi13ZWJraXQtcHJvZ3Jlc3MtdmFsdWUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1wcm9ncmVzcy1maWxsLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1wcmltYXJ5LCAjMDc3YWNiKSk7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLWFnbm9zdGljLXByb2dyZXNzLXJhZGl1cywgdmFyKC0tZmx1aWQtMTAsIDAuNjI1cmVtKSk7XG59XG5cbi5wcm9ncmVzc1t2YWx1ZV06Oi1tb3otcHJvZ3Jlc3MtYmFyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWdub3N0aWMtcHJvZ3Jlc3MtZmlsbC1jb2xvciwgdmFyKC0tYWdub3N0aWMtcHJpbWFyeSwgIzA3N2FjYikpO1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1hZ25vc3RpYy1wcm9ncmVzcy1yYWRpdXMsIHZhcigtLWZsdWlkLTEwLCAwLjYyNXJlbSkpO1xufVxuXG4ucHJvZ3Jlc3NbdmFsdWVdOjotbXMtZmlsbCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFnbm9zdGljLXByb2dyZXNzLWZpbGwtY29sb3IsIHZhcigtLWFnbm9zdGljLXByaW1hcnksICMwNzdhY2IpKTtcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0tYWdub3N0aWMtcHJvZ3Jlc3MtcmFkaXVzLCB2YXIoLS1mbHVpZC0xMCwgMC42MjVyZW0pKTtcbn1cblxuLnNlbGVjdCxcbi5zZWxlY3QtYmFzZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi5zZWxlY3QsXG4uc2VsZWN0LXNraW4ge1xuICBwYWRkaW5nOiB2YXIoLS1mbHVpZC02KSB2YXIoLS1mbHVpZC0zMikgdmFyKC0tZmx1aWQtNikgdmFyKC0tZmx1aWQtMTIpO1xuICAtbW96LXBhZGRpbmctc3RhcnQ6IGNhbGModmFyKC0tZmx1aWQtMTIpIC0gM3B4KTtcbiAgZm9udC1zaXplOiB2YXIoLS1mbHVpZC0xNik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1kYXJrKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgMTYgMTYnJTNlJTNjcGF0aCBmaWxsPSdub25lJyBzdHJva2U9JyUyMzMzMzMzMCcgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJyBzdHJva2Utd2lkdGg9JzInIGQ9J00yIDVsNiA2IDYtNicvJTNlJTNjL3N2ZyUzZVwiKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgdmFyKC0tZmx1aWQtMTIpIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiB2YXIoLS1mbHVpZC0xNikgdmFyKC0tZmx1aWQtMTIpO1xuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1hZ25vc3RpYy1jaGVja2JveC1ib3JkZXItY29sb3IsIHZhcigtLWFnbm9zdGljLWdyYXktbGlnaHQpKTtcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0tYWdub3N0aWMtcmFkaXVzKTtcbiAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIHZhcigtLWFnbm9zdGljLXRpbWluZy1mYXN0KSBlYXNlLWluLW91dCxcbiAgICBib3gtc2hhZG93IHZhcigtLWFnbm9zdGljLXRpbWluZy1mYXN0KSBlYXNlLWluLW91dDtcbn1cblxuLnNlbGVjdDpmb2N1cyB7XG4gIGJvcmRlci1jb2xvcjogdmFyKC0tYWdub3N0aWMtZm9jdXMtcmluZy1jb2xvcik7XG4gIGJveC1zaGFkb3c6IDAgMCAwIHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctb3V0bGluZS13aWR0aCkgdmFyKC0tYWdub3N0aWMtZm9jdXMtcmluZy1jb2xvcik7XG4gIC8qIE5lZWRlZCBmb3IgSGlnaCBDb250cmFzdCBtb2RlICovXG4gIG91dGxpbmU6IHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctb3V0bGluZS13aWR0aCkgdmFyKC0tYWdub3N0aWMtZm9jdXMtcmluZy1vdXRsaW5lLXN0eWxlKVxuICAgIHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctb3V0bGluZS1jb2xvcik7XG4gIHRyYW5zaXRpb246IGJveC1zaGFkb3cgdmFyKC0tYWdub3N0aWMtdGltaW5nLWZhc3QpIGVhc2Utb3V0O1xufVxuXG4uc2VsZWN0LWJhc2UsXG4uc2VsZWN0OmRpc2FibGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWdub3N0aWMtZGlzYWJsZWQtYmcpO1xufVxuLnNlbGVjdC1iYXNlLFxuLnNlbGVjdDotbW96LWZvY3VzcmluZyB7XG4gIGNvbG9yOiB0cmFuc3BhcmVudDtcbiAgdGV4dC1zaGFkb3c6IDAgMCAwIHZhcigtLWFnbm9zdGljLWRhcmspO1xufVxuXG5AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSkge1xuICAuc2VsZWN0LWJhc2UsXG4gIC5zZWxlY3Q6Zm9jdXMsXG4gIC5zZWxlY3Qge1xuICAgIHRyYW5zaXRpb246IG5vbmU7XG4gIH1cbn1cblxuLnNlbGVjdC1zbWFsbCB7XG4gIHBhZGRpbmctdG9wOiB2YXIoLS1mbHVpZC00KTtcbiAgcGFkZGluZy1ib3R0b206IHZhcigtLWZsdWlkLTQpO1xuICBwYWRkaW5nLWxlZnQ6IHZhcigtLWZsdWlkLTgpO1xuICBmb250LXNpemU6IHZhcigtLWZsdWlkLTE0KTtcbiAgYm9yZGVyLXJhZGl1czogMC4ycmVtO1xufVxuXG4uc2VsZWN0LWxhcmdlIHtcbiAgcGFkZGluZy10b3A6IHZhcigtLWZsdWlkLTgpO1xuICBwYWRkaW5nLWJvdHRvbTogdmFyKC0tZmx1aWQtOCk7XG4gIHBhZGRpbmctbGVmdDogdmFyKC0tZmx1aWQtMTYpO1xuICBmb250LXNpemU6IHZhcigtLWZsdWlkLTIwKTtcbiAgYm9yZGVyLXJhZGl1czogMC4zcmVtO1xufVxuXG4vKipcbiAqIFN3aXRjaFxuICogXG4gKiBUaGlzIHN3aXRjaCBpcyBpbnNwaXJlZCBieSBTY290dCBPaGFyYSdzIGNoZWNrYm94IHN3aXRjaDpcbiAqIGh0dHBzOi8vc2NvdHRhb2hhcmEuZ2l0aHViLmlvL2ExMXlfc3R5bGVkX2Zvcm1fY29udHJvbHMvc3JjL2NoZWNrYm94LS1zd2l0Y2gvXG4gKi9cbi5zd2l0Y2gtY29udGFpbmVyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIC8qIFRPRE86IEhvcGVmdWxseSB0aGlzIGRvZXNuJ3QgYmVjb21lIGEgcHJvYmxlbSBidXQgc2luY2Ugd2UgdXNlIGFic29sdXRlXG4gIHBvc2l0aW9uaW5nIGV4dGVuc2l2ZWx5LCB3ZSBuZWVkIHNvbWUgd2F5IHRvIGhhdmUgYWRqYWNlbnQgc3BhY2VkIGxpbmVzICovXG4gIG1pbi1oZWlnaHQ6IDIuMjVyZW07XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnN3aXRjaC1jb250YWluZXI6aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi8qIHVzaW5nIHRoZSBiZWZvcmUvYWZ0ZXIgcHNldWRvIGVsZW1lbnRzIG9mIHRoZSBzcGFuIHRvIGNyZWF0ZSB0aGUgXCJzd2l0Y2hcIiAqL1xuLnN3aXRjaDpiZWZvcmUsXG4uc3dpdGNoOmFmdGVyIHtcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYWdub3N0aWMtZ3JheS1taWQtZGFyayk7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG59XG5cbi8qIHN0eWxpbmcgc3BlY2lmaWMgdG8gdGhlIGtub2Igb2YgdGhlIHN3aXRjaCAqL1xuLnN3aXRjaDphZnRlciB7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIHdpZHRoOiAxLjRyZW07XG4gIGhlaWdodDogMS40cmVtO1xuICByaWdodDogMS40cmVtO1xuICB0cmFuc2l0aW9uOiByaWdodCB2YXIoLS1hZ25vc3RpYy10aW1pbmctZmFzdCkgZWFzZS1pbi1vdXQ7XG59XG5cbi8qIHN0eWxpbmcgc3BlY2lmaWMgdG8gdGhlIGtub2IgXCJjb250YWluZXJcIiAqL1xuLnN3aXRjaDpiZWZvcmUge1xuICBiYWNrZ3JvdW5kOiAjZWVlO1xuICBib3JkZXItcmFkaXVzOiAxLjc1cmVtO1xuICB3aWR0aDogMi43NXJlbTtcbiAgaGVpZ2h0OiAxLjc1cmVtO1xuICByaWdodDogMC4yNXJlbTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCB2YXIoLS1hZ25vc3RpYy10aW1pbmctbWVkaXVtKSBlYXNlLWluLW91dDtcbn1cblxuLyogU2l6ZXMgKi9cbi5zd2l0Y2gtc21hbGw6YWZ0ZXIge1xuICB3aWR0aDogMS4yNXJlbTtcbiAgaGVpZ2h0OiAxLjI1cmVtO1xuICByaWdodDogMS4xMjVyZW07XG59XG5cbi5zd2l0Y2gtc21hbGw6YmVmb3JlIHtcbiAgd2lkdGg6IDIuMjVyZW07XG4gIGhlaWdodDogMS41cmVtO1xufVxuXG4uc3dpdGNoLWxhcmdlOmFmdGVyIHtcbiAgd2lkdGg6IDEuNjVyZW07XG4gIGhlaWdodDogMS42NXJlbTtcbiAgcmlnaHQ6IDEuNjVyZW07XG59XG5cbi5zd2l0Y2gtbGFyZ2U6YmVmb3JlIHtcbiAgd2lkdGg6IDMuMjVyZW07XG4gIGhlaWdodDogMnJlbTtcbn1cblxuLnN3aXRjaC1ib3JkZXI6YmVmb3JlIHtcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYWdub3N0aWMtcHJpbWFyeSk7XG59XG5cbi5zd2l0Y2gtYWN0aW9uLnN3aXRjaC1ib3JkZXI6YmVmb3JlIHtcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYWdub3N0aWMtYWN0aW9uKTtcbn1cblxuLyogRnJvbTogaHR0cHM6Ly9zY290dGFvaGFyYS5naXRodWIuaW8vYTExeV9zdHlsZWRfZm9ybV9jb250cm9scy9zcmMvY2hlY2tib3gtLXN3aXRjaC9cbiAgaGlkZSB0aGUgYWN0dWFsIGNoZWNrYm94IGZyb20gdmlldywgYnV0IG5vdCBmcm9tIGtleWJvYXJkcyBvciBBVHMuXG4gIEluc3RlYWQgb2Ygc3RhbmRhcmQgdmlzdWFsbHkgaGlkZGVuIHN0eWxpbmcsIGluc3RlYWQgc2V0IG9wYWNpdHkgdG9cbiAgYWxtb3N0IDAgKG5vdCB6ZXJvIGZvciBDaG9tZVZveCBsZWdhY3kgYnVnKSwgcG9pbnRlci1ldmVudHMgbm9uZSwgYW5kXG4gIHRoZW4gc2V0IHRvIGZ1bGwgaGVpZ2h0L3dpZHRoIG9mIGNvbnRhaW5lciBlbGVtZW50IHNvIHRoYXQgVk8gZm9jdXNcbiAgcmluZyBvdXRsaW5lcyB0aGUgY29tcG9uZW50LCBpbnN0ZWFkIG9mIGEgdGlueSBib3ggd2l0aGluIHRoZSBjb21wb25lbnRcbiovXG4uc3dpdGNoLWlucHV0IHtcbiAgbWFyZ2luOiAwO1xuICBvcGFjaXR5OiAwLjAwMDE7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuLnN3aXRjaC1pbnB1dDpmb2N1cyArIC5zd2l0Y2g6YmVmb3JlIHtcbiAgYm94LXNoYWRvdzogMCAwIDAgdmFyKC0tYWdub3N0aWMtZm9jdXMtcmluZy1vdXRsaW5lLXdpZHRoKSB2YXIoLS1hZ25vc3RpYy1mb2N1cy1yaW5nLWNvbG9yKTtcbn1cblxuLyogLS0tLSBDSEVDS0VEIFNUQVRFIC0tLS0tICovXG5cbi8qIGNoYW5nZSB0aGUgcG9zaXRpb24gb2YgdGhlIGtub2IgdG8gaW5kaWNhdGUgaXQgaGFzIGJlZW4gY2hlY2tlZCovXG4uc3dpdGNoLWlucHV0OmNoZWNrZWQgKyAuc3dpdGNoOmFmdGVyIHtcbiAgcmlnaHQ6IDAuNWVtO1xufVxuLnN3aXRjaC1pbnB1dDpjaGVja2VkICsgLnN3aXRjaC1zbWFsbDphZnRlciB7XG4gIHJpZ2h0OiAwLjQyNXJlbTtcbn1cblxuLyogdXBkYXRlIHRoZSBjb2xvciBvZiB0aGUgXCJjb250YWluZXJcIiB0byBmdXJ0aGVyIHZpc3VhbGx5IGluZGljYXRlIHN0YXRlICovXG4uc3dpdGNoLWlucHV0OmNoZWNrZWQgKyAuc3dpdGNoOm5vdCguc3dpdGNoLWJvcmRlcik6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tYWdub3N0aWMtcHJpbWFyeSk7XG59XG5cbi5zd2l0Y2gtaW5wdXQ6Y2hlY2tlZCArIC5zd2l0Y2gtYWN0aW9uOm5vdCguc3dpdGNoLWJvcmRlcik6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tYWdub3N0aWMtYWN0aW9uKTtcbn1cblxuLyogQm9yZGVyIHN3aXRjaCBvbiBjaGVja2VkIHRoZSB0aHVtYiBnZXRzIHByaW1hcnkgb3IgYWN0aW9uIGJnIHJlc3BlY3RpdmVseSAqL1xuLnN3aXRjaC1pbnB1dDpjaGVja2VkICsgLnN3aXRjaC1ib3JkZXI6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1hZ25vc3RpYy1wcmltYXJ5KTtcbn1cbi5zd2l0Y2gtaW5wdXQ6Y2hlY2tlZCArIC5zd2l0Y2gtYWN0aW9uLnN3aXRjaC1ib3JkZXI6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1hZ25vc3RpYy1hY3Rpb24pO1xufVxuXG4vKiBTd2l0Y2ggbGFiZWwgb24gcmlnaHQgKi9cblxuLyogRmxpcHMgdHJhbnNpdGlvbiB0YXJnZXQgdG8gbGVmdCB0byBwcmVzZXJ2ZSBvdXIgc21vb3RoIHRyYW5zaXRpb25zICovXG4uc3dpdGNoLXJpZ2h0IC5zd2l0Y2g6YWZ0ZXIge1xuICB0cmFuc2l0aW9uOiBsZWZ0IHZhcigtLWFnbm9zdGljLXRpbWluZy1mYXN0KSBlYXNlLWluLW91dDtcbn1cblxuLnN3aXRjaC1yaWdodCAuc3dpdGNoLWlucHV0OmNoZWNrZWQgKyAuc3dpdGNoOmFmdGVyIHtcbiAgcmlnaHQ6IGluaXRpYWw7XG4gIGxlZnQ6IDAuNWVtO1xufVxuLnN3aXRjaC1yaWdodCAuc3dpdGNoLWlucHV0OmNoZWNrZWQgKyAuc3dpdGNoLXNtYWxsOmFmdGVyIHtcbiAgcmlnaHQ6IGluaXRpYWw7XG4gIGxlZnQ6IDAuNDI1cmVtO1xufVxuXG4vKiBXZSBoYXZlIHRvIGZsaXAgdGhlIHBvc2l0aW9uaW5nIHdoZW4gdGhlIGxhYmVsIGlzIG9uIHRoZSByaWdodCBvZiBzd2l0Y2ggKi9cbi5zd2l0Y2gtcmlnaHQgLnN3aXRjaDpiZWZvcmUge1xuICByaWdodDogaW5pdGlhbDtcbiAgbGVmdDogMC4yNXJlbTtcbn1cblxuLnN3aXRjaC1yaWdodCAuc3dpdGNoOjphZnRlciB7XG4gIHJpZ2h0OiBpbml0aWFsO1xuICBsZWZ0OiAxLjRyZW07XG59XG5cbi5zd2l0Y2gtcmlnaHQgLnN3aXRjaC1sYWJlbCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbn1cblxuLyogU3dpdGNoIHNpemVzIHcvbGFiZWwgb24gcmlnaHQgLS0gSSBleHBlY3QgU01BQ1NTIHNvIC5zd2l0Y2ggLnN3aXRjaC1zbWFsbFxuY2xhc3NlcyBzaG91bGQgYm90aCBleGlzdCBzbyB0aGUgcmlnaHQ6IGluaXRpYWwgd2FzIHRha2VuIGNhcmUgb2YgYWJvdmUgOikgKi9cbi5zd2l0Y2gtcmlnaHQgLnN3aXRjaC1zbWFsbDphZnRlciB7XG4gIGxlZnQ6IDEuMTI1cmVtO1xufVxuXG4uc3dpdGNoLXJpZ2h0IC5zd2l0Y2gtbGFyZ2U6YWZ0ZXIge1xuICBsZWZ0OiAxLjY1cmVtO1xufVxuXG4vKiBEaXNhYmxlZCBha2EgOmRpc2FibGVkIGlzIG5vdCBhY3R1YWxseSBzdXBwb3J0ZWQgZm9yIDxsYWJlbD5cbmVsZW1lbnQgc28gd2UgdXNlIGF0dHJpYnV0ZSBzZWxlY3RvciBmb3IgdGhhdDpcbmh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0hUTUwvQXR0cmlidXRlcy9kaXNhYmxlZCM6fjp0ZXh0PVRoZSUyMGRpc2FibGVkJTIwYXR0cmlidXRlJTIwaXMlMjBzdXBwb3J0ZWQsY29udHJvbCUyMG9yJTIwaXRzJTIwZGVzY2VuZGFudCUyMGNvbnRyb2xzLlxuKi9cbi5zd2l0Y2gtaW5wdXRbZGlzYWJsZWRdICsgLnN3aXRjaCxcbi5zd2l0Y2gtaW5wdXRbZGlzYWJsZWRdICsgLnN3aXRjaC1sYWJlbCxcbi5zd2l0Y2gtY29udGFpbmVyLmRpc2FibGVkIHtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWlucHV0LWRpc2FibGVkLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1kaXNhYmxlZC1jb2xvcikpICFpbXBvcnRhbnQ7XG4gIGFwcGVhcmFuY2U6IG5vbmUgIWltcG9ydGFudDtcbiAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICBjdXJzb3I6IG5vdC1hbGxvd2VkICFpbXBvcnRhbnQ7XG4gIG9wYWNpdHk6IDAuOCAhaW1wb3J0YW50O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAoLW1zLWhpZ2gtY29udHJhc3Q6IGFjdGl2ZSkge1xuICAuc3dpdGNoOmFmdGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aW5kb3dUZXh0O1xuICB9XG5cbiAgLyogSGlnaCBjb250cmFzdCBtb2RlIG91dGxpbmUgaGFja3MgKi9cbiAgLnN3aXRjaC1pbnB1dFtkaXNhYmxlZF0gKyAuc3dpdGNoLWxhYmVsLFxuICAuc3dpdGNoLWNvbnRhaW5lci5kaXNhYmxlZCB7XG4gICAgb3V0bGluZTogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICB9XG59XG5cbkBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbikge1xuICAuc3dpdGNoOmFmdGVyLFxuICAuc3dpdGNoOmJlZm9yZSB7XG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4wMDFtcyAhaW1wb3J0YW50O1xuICB9XG59XG5cbi50YWJsZSB7XG4gIC0tdGFibGUtYmc6IHRyYW5zcGFyZW50O1xuICAtLXRhYmxlLWFjY2VudC1iZzogdHJhbnNwYXJlbnQ7XG4gIC0tdGFibGUtc3RyaXBlZC1jb2xvcjogdmFyKC0tYWdub3N0aWMtZGFyayk7XG4gIC0tdGFibGUtc3RyaXBlZC1iZzogcmdiYSgwLCAwLCAwLCAwLjAyNSk7XG4gIC0tdGFibGUtYWN0aXZlLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1kYXJrKTtcbiAgLS10YWJsZS1hY3RpdmUtYmc6IHJnYmEoMCwgMCwgMCwgMC4wMTUpO1xuICAtLXRhYmxlLWhvdmVyYWJsZS1jb2xvcjogdmFyKC0tYWdub3N0aWMtZGFyayk7XG4gIC0tdGFibGUtaG92ZXJhYmxlLWJnOiByZ2JhKDAsIDAsIDAsIDAuMDMpO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogdmFyKC0tZmx1aWQtMTYpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtZGFyayk7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIGJvcmRlci1jb2xvcjogdmFyKC0tYWdub3N0aWMtY2hlY2tib3gtYm9yZGVyLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1ncmF5LWxpZ2h0KSk7XG59XG4udGFibGUgPiA6bm90KGNhcHRpb24pID4gKiA+ICoge1xuICBwYWRkaW5nOiB2YXIoLS1mbHVpZC04KSB2YXIoLS1mbHVpZC04KTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGFibGUtYmcpO1xuICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7XG4gIC8qIDR0aCBpcyBzcHJlYWQgLS10YWJsZS1hY2NlbnQtYmcgd2lsbCBnZXRzIHJlc2V0IGZvciBhY3RpdmUsIGhvdmVyLCBzdHJpcGVkICovXG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDk5OTlweCB2YXIoLS10YWJsZS1hY2NlbnQtYmcpO1xufVxuXG4udGFibGUgPiB0Ym9keSB7XG4gIHZlcnRpY2FsLWFsaWduOiBpbmhlcml0O1xufVxuXG4udGFibGUgPiB0aGVhZCB7XG4gIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG59XG5cbi50YWJsZSB0aGVhZCB0aCB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG5cbi50YWJsZS1jYXBzIHRoZWFkIHRoIHtcbiAgZm9udC1zaXplOiB2YXIoLS1mbHVpZC0xMik7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi50YWJsZSB0Ym9keSB0ZCxcbi50YWJsZSB0Ym9keSB0aCB7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbi50YWJsZSA+IDpub3QodGhlYWQpOm5vdChjYXB0aW9uKSB7XG4gIGJvcmRlci10b3A6IHZhcigtLWZsdWlkLTIpIHNvbGlkIHZhcigtLWFnbm9zdGljLWdyYXktbGlnaHQpO1xufVxuXG4uY2FwdGlvbi10b3Age1xuICBjYXB0aW9uLXNpZGU6IHRvcDtcbn1cblxuLmNhcHRpb24tYm90dG9tIHtcbiAgY2FwdGlvbi1zaWRlOiBib3R0b207XG59XG4uY2FwdGlvbi1ib3R0b20sXG4uY2FwdGlvbi10b3Age1xuICBwYWRkaW5nLWJsb2NrLXN0YXJ0OiB2YXIoLS1mbHVpZC0xMik7XG4gIHBhZGRpbmctYmxvY2stZW5kOiB2YXIoLS1mbHVpZC0xMik7XG4gIC8qIFRha2VzIHdyaXRpbmcgbW9kZSBpbnRvIGFjY291bnQgLS0gKG1kbikgc2FtZSBhcyBsZWZ0IGlmIGRpcmVjdGlvbiBpcyBsZWZ0LXRvLXJpZ2h0IGFuZCByaWdodCBpZiBkaXJlY3Rpb24gaXMgcmlnaHQtdG8tbGVmdCAqL1xuICB0ZXh0LWFsaWduOiBzdGFydDtcbn1cblxuLmNhcHRpb24tZW5kIHtcbiAgdGV4dC1hbGlnbjogZW5kO1xufVxuXG4udGFibGUtc21hbGwgPiA6bm90KGNhcHRpb24pID4gKiA+ICoge1xuICBwYWRkaW5nOiB2YXIoLS1mbHVpZC00KSB2YXIoLS1mbHVpZC00KTtcbn1cbi50YWJsZS1sYXJnZSA+IDpub3QoY2FwdGlvbikgPiAqID4gKiB7XG4gIHBhZGRpbmc6IHZhcigtLWZsdWlkLTEyKSB2YXIoLS1mbHVpZC0xMik7XG59XG4udGFibGUteGxhcmdlID4gOm5vdChjYXB0aW9uKSA+ICogPiAqIHtcbiAgcGFkZGluZzogdmFyKC0tZmx1aWQtMTgpIHZhcigtLWZsdWlkLTE4KTtcbn1cblxuLnRhYmxlLWJvcmRlcmVkID4gOm5vdChjYXB0aW9uKSA+ICoge1xuICBib3JkZXItd2lkdGg6IDFweCAwO1xufVxuXG4udGFibGUtYm9yZGVyZWQgPiA6bm90KGNhcHRpb24pID4gKiA+ICoge1xuICBib3JkZXItd2lkdGg6IDAgMXB4O1xufVxuXG4udGFibGUtYm9yZGVybGVzcyA+IDpub3QoY2FwdGlvbikgPiAqID4gKiB7XG4gIGJvcmRlci1ib3R0b20td2lkdGg6IDA7XG59XG4udGFibGUtYm9yZGVybGVzcyA+IDpub3QoOmZpcnN0LWNoaWxkKSB7XG4gIGJvcmRlci10b3Atd2lkdGg6IDA7XG59XG5cbi50YWJsZS1zdHJpcGVkID4gdGJvZHkgPiB0cjpudGgtb2YtdHlwZShvZGQpID4gKiB7XG4gIC0tdGFibGUtYWNjZW50LWJnOiB2YXIoLS10YWJsZS1zdHJpcGVkLWJnKTtcbiAgY29sb3I6IHZhcigtLXRhYmxlLXN0cmlwZWQtY29sb3IpO1xufVxuXG4udGFibGUtYWN0aXZlIHtcbiAgLS10YWJsZS1hY2NlbnQtYmc6IHZhcigtLXRhYmxlLWFjdGl2ZS1iZyk7XG4gIGNvbG9yOiB2YXIoLS10YWJsZS1hY3RpdmUtY29sb3IpO1xufVxuXG4udGFibGUtaG92ZXJhYmxlID4gdGJvZHkgPiB0cjpob3ZlciA+ICoge1xuICAtLXRhYmxlLWFjY2VudC1iZzogdmFyKC0tdGFibGUtaG92ZXJhYmxlLWJnKTtcbiAgY29sb3I6IHZhcigtLXRhYmxlLWhvdmVyYWJsZS1jb2xvcik7XG59XG5cbi8qIFN0YWNrZWQgdGFibGVzICovXG4udGFibGUtc3RhY2tlZCB0aGVhZCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi50YWJsZS1zdGFja2VkIHRyLFxuLnRhYmxlLXN0YWNrZWQgdGgsXG4udGFibGUtc3RhY2tlZCB0ZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnRhYmxlLXN0YWNrZWQgdGgsXG4udGFibGUtc3RhY2tlZCB0ZCB7XG4gIGJvcmRlci1ib3R0b20td2lkdGg6IDA7XG59XG4udGFibGUtc3RhY2tlZCB0ZFtkYXRhLWxhYmVsXSB7XG4gIHBhZGRpbmctYm90dG9tOiB2YXIoLS1mbHVpZC0xMik7XG59XG5cbi50YWJsZS1zdGFja2VkIHRyIHtcbiAgYm9yZGVyLWJvdHRvbTogdmFyKC0tZmx1aWQtMikgc29saWQgdmFyKC0tYWdub3N0aWMtZ3JheS1saWdodCk7XG4gIGJvcmRlci10b3Atd2lkdGg6IDA7XG59XG5cbi50YWJsZS1zdGFja2VkIHRoW2RhdGEtbGFiZWxdOmJlZm9yZSxcbi50YWJsZS1zdGFja2VkIHRkW2RhdGEtbGFiZWxdOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IGF0dHIoZGF0YS1sYWJlbCk7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXdlaWdodDogNjAwO1xuICBtYXJnaW46IC0wLjVyZW0gLTFyZW0gMDtcbiAgcGFkZGluZzogdmFyKC0tZmx1aWQtMTIpIHZhcigtLWZsdWlkLTE2KSB2YXIoLS1mbHVpZC02KTtcbn1cblxuLnRhYmxlLXN0YWNrZWQgdHIgdGg6Zmlyc3QtY2hpbGQsXG4udGFibGUtc3RhY2tlZCB0ciB0ZDpmaXJzdC1jaGlsZCB7XG4gIGJvcmRlci10b3Atd2lkdGg6IDA7XG59XG5cbi50YWJsZS1zdGFja2VkIHRyOm50aC1jaGlsZChvZGQpIHRkLFxuLnRhYmxlLXN0YWNrZWQgdHI6bnRoLWNoaWxkKG9kZCkgdGgge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xufVxuXG4udGFibGUtc3RhY2tlZCB0cjpmaXJzdC1jaGlsZCB0aDpmaXJzdC1jaGlsZCxcbi50YWJsZS1zdGFja2VkIHRyOmZpcnN0LWNoaWxkIHRkOmZpcnN0LWNoaWxkIHtcbiAgYm9yZGVyLXRvcDogdmFyKC0tZmx1aWQtMikgc29saWQgdmFyKC0tYWdub3N0aWMtZ3JheS1saWdodCk7XG59XG4udGFibGUtc3RhY2tlZCB0aFtkYXRhLWxhYmVsXSxcbi50YWJsZS1zdGFja2VkIHRkW2RhdGEtbGFiZWxdIHtcbiAgcGFkZGluZy1ib3R0b206IHZhcigtLWZsdWlkLTEyKTtcbn1cblxuLyogQXMgc29vbiBhcyB0aGVyZSdzIG5vdCBlbm91Z2ggd2lkdGgsIGl0IHdpbGwga2ljayBpbiBob3Jpem9udGFsIHNjcm9sbGluZyAqL1xuLnRhYmxlLXJlc3BvbnNpdmUge1xuICBvdmVyZmxvdy14OiBhdXRvO1xuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG59XG5cbi8qIFRhYmxlIGlzIHJlc3BvbnNpdmUgb25seSBcInVwIHRvXCIgdGhlIGJyZWFrcG9pbnQuIEFib3ZlIGl0IHdpbGwgbm90IHNjcm9sbCAqL1xuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIC50YWJsZS1yZXNwb25zaXZlLXNtYWxsIHtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLnRhYmxlLXJlc3BvbnNpdmUtbWVkaXVtIHtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLnRhYmxlLXJlc3BvbnNpdmUtbGFyZ2Uge1xuICAgIG92ZXJmbG93LXg6IGF1dG87XG4gICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMjAwcHgpIHtcbiAgLnRhYmxlLXJlc3BvbnNpdmUteGxhcmdlIHtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDtcbiAgfVxufVxuXG4vKiBUT0RPIC0tIHNob3VsZCB3ZSB1c2UgdGhlc2UgZm9yIC5uYXY/ICovXG4udGFicyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4udGFicy12ZXJ0aWNhbCB7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG59XG5cbi50YWItbGlzdCxcbi50YWItbGlzdC1iYXNlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4OiAwIDAgYXV0bztcbn1cbi8qIEluIHZlcnRpY2FsIG9yaWVudGF0aW9uIHdlIHdhbnQgb3VyIHRhYiBidXR0b25zIHRvIHN0YWNrICovXG4udGFicy12ZXJ0aWNhbCAudGFiLWxpc3QsXG4udGFicy12ZXJ0aWNhbCAudGFiLWJhc2Uge1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBib3JkZXI6IG5vbmU7XG59XG5cbi50YWItbGlzdCxcbi50YWItc2tpbm5lZCB7XG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwO1xuICBtYXJnaW4tYmxvY2stZW5kOiAwO1xuICBib3JkZXItYm90dG9tOiB2YXIoLS1hZ25vc3RpYy10YWJzLWJvcmRlci1zaXplLCAxcHgpIHNvbGlkXG4gICAgdmFyKC0tYWdub3N0aWMtdGFicy1iZ2NvbG9yLCB2YXIoLS1hZ25vc3RpYy1ncmF5LWxpZ2h0KSk7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IGFsbDtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogdmFyKC0tYWdub3N0aWMtdGltaW5nLW1lZGl1bSk7XG59XG5cbi8qIFdlIGNhbiBhc2sgZm9yIC50YWItYnV0dG9uIHdoaWNoIGlzIGJhc2UgYW5kIHNraW4gY29tYmluZWQsIG9yLCB3ZSBjYW4gdXRpbGl6ZSAudGFiLWJ1dHRvbi1iYXNlXG5pZiB3ZSdkIGxpa2UgdG8gb25seSBibGFuayBvdXQgYnV0dG9ucyBidXQgb3RoZXJ3aXNlIHNraW4gb3Vyc2VsdmVzLiAqL1xuLnRhYi1idXR0b24sXG4udGFiLWJ1dHRvbi1iYXNlIHtcbiAgLyogQmxhbmsgb3V0IHRoZSBidXR0b24gKi9cbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgLyogUmVzZXQgbWFyZ2lucy9wYWRkaW5nOyB0aGlzIHdpbGwgZ2V0IGFkZGVkIGJhY2sgaWYgaXQncyBhIFwic2tpbm5lZFwiIHRhYiBidXR0b24uIEhvd2V2ZXIsIHdlIGhhdmVcbiAgYSB1c2UgY2FzZSB3aGVyZSBhIHRhYi1idXR0b24gaXMgd3JhcHBpbmcgYSBmYXV4IGJ1dHRvbi4gRm9yIHRoYXQsIHdlIGRvbid0IHdhbnQgbWFyZ2lucy9wYWRkaW5nIGJlY2F1c2VcbiAgdGhlIGZhdXggYnV0dG9uIHByb3ZpZGVzIHRoYXQuICovXG4gIG1hcmdpbi1pbmxpbmUtc3RhcnQ6IDA7XG4gIG1hcmdpbi1pbmxpbmUtZW5kOiAwO1xuICBwYWRkaW5nLWJsb2NrLXN0YXJ0OiAwO1xuICBwYWRkaW5nLWJsb2NrLWVuZDogMDtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDA7XG4gIHBhZGRpbmctaW5saW5lLWVuZDogMDtcbn1cblxuLyogV2UgcHVsbCBiYWNrIHRoZSAybmQgc3Vic2VxdWVudCB0YWJzIHRvIHJlbW92ZSB0aGUgZG91YmxlIGJvcmRlciAqL1xuLnRhYi1idXR0b246bm90KDpmaXJzdC1vZi10eXBlKSxcbi50YWItYnV0dG9uLWJhc2U6bm90KDpmaXJzdC1vZi10eXBlKSB7XG4gIG1hcmdpbi1pbmxpbmUtc3RhcnQ6IC0xcHg7XG59XG5cbi50YWItYnV0dG9uLFxuLnRhYi1idXR0b24tc2tpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICAvKiBTaW5jZSB0aGlzIGlzIGEgXCJza2lubmVkIHRhYiBidXR0b25cIiB3ZSBhZGQgb3VyIHBhZGRpbmcgaGVyZSB0byBwcmV2aW91c2x5IFwicmVzZXRcIiAudGFiLWJ1dHRvbi1iYXNlICovXG4gIHBhZGRpbmctYmxvY2stc3RhcnQ6IHZhcigtLWFnbm9zdGljLXZlcnRpY2FsLXBhZCwgMC41cmVtKTtcbiAgcGFkZGluZy1ibG9jay1lbmQ6IHZhcigtLWFnbm9zdGljLXZlcnRpY2FsLXBhZCwgMC41cmVtKTtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IHZhcigtLWFnbm9zdGljLXNpZGUtcGFkZGluZywgMC43NXJlbSk7XG4gIHBhZGRpbmctaW5saW5lLWVuZDogdmFyKC0tYWdub3N0aWMtc2lkZS1wYWRkaW5nLCAwLjc1cmVtKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWFnbm9zdGljLWJ0bi1mb250LWZhbWlseSwgdmFyKC0tYWdub3N0aWMtZm9udC1mYW1pbHkpKTtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWFnbm9zdGljLWJ0bi1mb250LXdlaWdodCwgNDAwKTtcbiAgZm9udC1zaXplOiB2YXIoLS1hZ25vc3RpYy1idG4tZm9udC1zaXplLCAxcmVtKTtcbiAgLyogdGhpcyBjYW4gYmUgb3ZlcnJpZGVuLCBidXQgaXQgbWlnaHQgbWVzcyB3aXRoIHRoZSBiYWxhbmNlIG9mIHRoZSBidXR0b24gaGVpZ2h0cyBhY3Jvc3MgdmFyaWFudHMgKi9cbiAgbGluZS1oZWlnaHQ6IHZhcigtLWFnbm9zdGljLWxpbmUtaGVpZ2h0LCB2YXIoLS1mbHVpZC0yMCwgMS4yNXJlbSkpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtdGFicy1wcmltYXJ5LCB2YXIoLS1hZ25vc3RpYy1wcmltYXJ5KSk7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdHJhbnNpdGlvbjogY29sb3IgdmFyKC0tYWdub3N0aWMtdGltaW5nLWZhc3QpIGVhc2UtaW4tb3V0LFxuICAgIGJhY2tncm91bmQtY29sb3IgdmFyKC0tYWdub3N0aWMtdGltaW5nLWZhc3QpIGVhc2UtaW4tb3V0LFxuICAgIGJvcmRlci1jb2xvciB2YXIoLS1hZ25vc3RpYy10aW1pbmctZmFzdCkgZWFzZS1pbi1vdXQ7XG59XG5cbi50YWItYm9yZGVybGVzcyB7XG4gIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4udGFiLWJ1dHRvbi1sYXJnZSB7XG4gIHBhZGRpbmctYmxvY2stc3RhcnQ6IGNhbGModmFyKC0tYWdub3N0aWMtaW5wdXQtc2lkZS1wYWRkaW5nKSAqIDEuMjUpO1xuICBwYWRkaW5nLWJsb2NrLWVuZDogY2FsYyh2YXIoLS1hZ25vc3RpYy1pbnB1dC1zaWRlLXBhZGRpbmcpICogMS4yNSk7XG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiBjYWxjKHZhcigtLWFnbm9zdGljLWlucHV0LXNpZGUtcGFkZGluZykgKiAxLjc1KTtcbiAgcGFkZGluZy1pbmxpbmUtZW5kOiBjYWxjKHZhcigtLWFnbm9zdGljLWlucHV0LXNpZGUtcGFkZGluZykgKiAxLjc1KTtcbn1cblxuLnRhYi1idXR0b24teGxhcmdlIHtcbiAgcGFkZGluZy1ibG9jay1zdGFydDogY2FsYyh2YXIoLS1hZ25vc3RpYy1pbnB1dC1zaWRlLXBhZGRpbmcpICogMik7XG4gIHBhZGRpbmctYmxvY2stZW5kOiBjYWxjKHZhcigtLWFnbm9zdGljLWlucHV0LXNpZGUtcGFkZGluZykgKiAyKTtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IGNhbGModmFyKC0tYWdub3N0aWMtaW5wdXQtc2lkZS1wYWRkaW5nKSAqIDMpO1xuICBwYWRkaW5nLWlubGluZS1lbmQ6IGNhbGModmFyKC0tYWdub3N0aWMtaW5wdXQtc2lkZS1wYWRkaW5nKSAqIDMpO1xufVxuLnRhYi1pdGVtLnRhYi1idXR0b24ge1xuICBtYXJnaW4tYmxvY2stZW5kOiAtMXB4O1xuICBiYWNrZ3JvdW5kOiAwIDA7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiB2YXIoLS1hZ25vc3RpYy10YWJzLXJhZGl1cywgMC4yNXJlbSk7XG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiB2YXIoLS1hZ25vc3RpYy10YWJzLXJhZGl1cywgMC4yNXJlbSk7XG59XG5cbi50YWItaXRlbS50YWItYnV0dG9uLmFjdGl2ZSB7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1ncmF5LWRhcmspO1xuICAvKiBUT0RPIC0tIHVwZGF0ZSB0aGVzZSBjb2xvcnMgdG8gdXNlIGNzcyBwcm9wZXJ0aWVzICovXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlci1jb2xvcjogdmFyKC0tYWdub3N0aWMtZ3JheS1saWdodCkgdmFyKC0tYWdub3N0aWMtZ3JheS1saWdodCkgI2ZmZjtcbn1cblxuLnRhYi1pdGVtOmhvdmVyLFxuLnRhYi1idXR0b246Zm9jdXMge1xuICBib3JkZXItY29sb3I6IHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctb3V0bGluZS13aWR0aCkgdmFyKC0tYWdub3N0aWMtZm9jdXMtcmluZy1vdXRsaW5lLXdpZHRoKVxuICAgIHZhcigtLWFnbm9zdGljLWdyYXktbGlnaHQpO1xuICBpc29sYXRpb246IGlzb2xhdGU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLnRhYnMtdmVydGljYWwgLnRhYi1idXR0b24ge1xuICBib3JkZXI6IG5vbmU7XG59XG5cbi50YWItYnV0dG9uOmRpc2FibGVkIHtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLXRhYmFzLWRpc2FibGVkLWJnLCB2YXIoLS1hZ25vc3RpYy1ncmF5LW1pZC1kYXJrKSk7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICBvcGFjaXR5OiAwLjg7XG59XG5cbi8qKlxuICogRWxlY3RzIHRvIGFkZGl0aXZlbHkgdXNlIHRoZSBBZ25vc3RpY1VJIGN1c3RvbSBmb2N1cyByaW5nIGFsb25nc2lkZSB0aGUgYm9yZGVyXG4gKiB3ZSBhbHJlYWR5IGFkZCBhYm92ZS4gSXQganVzdCBtYWtlcyB0aGluZ3MgbG9vayBtb3JlIGNvbnNpc3RlbnQgYWNyb3NzIGNvbXBvbmVudHMuXG4gKiBGb3IgZXhhbXBsZSwgd2hlbiB3ZSB0YWIgaW50byB0aGUgcGFuZWxzIGFuZCBsaW5rcyB3aXRoaW4uXG4gKi9cbi50YWItcGFuZWw6Zm9jdXMsXG4udGFiLWJ1dHRvbjpmb2N1cyB7XG4gIGJveC1zaGFkb3c6IDAgMCAwIHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctb3V0bGluZS13aWR0aCkgdmFyKC0tYWdub3N0aWMtZm9jdXMtcmluZy1jb2xvcik7XG4gIC8qIE5lZWRlZCBmb3IgSGlnaCBDb250cmFzdCBtb2RlICovXG4gIG91dGxpbmU6IHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctb3V0bGluZS13aWR0aCkgdmFyKC0tYWdub3N0aWMtZm9jdXMtcmluZy1vdXRsaW5lLXN0eWxlKVxuICAgIHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctb3V0bGluZS1jb2xvcik7XG4gIHRyYW5zaXRpb246IGJveC1zaGFkb3cgdmFyKC0tYWdub3N0aWMtdGltaW5nLWZhc3QpIGVhc2Utb3V0O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKSwgKHVwZGF0ZTogc2xvdykge1xuICAudGFiLWJ1dHRvbjpmb2N1cyxcbiAgLnRhYi1wYW5lbDpmb2N1cyxcbiAgLnRhYi1saXN0LFxuICAudGFiLXNraW5uZWQsXG4gIC50YWItYnV0dG9uIHtcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjAwMW1zICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuLnRhZy1iYXNlLFxuLnRhZyB7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cbi50YWctc2tpbixcbi50YWcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1ncmF5LWxpZ2h0KTtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWRhcmspO1xuICBmb250LXNpemU6IHZhcigtLWZsdWlkLTEyKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWFnbm9zdGljLWxpbmUtaGVpZ2h0LCB2YXIoLS1mbHVpZC0yMCwgMS4yNXJlbSkpO1xuICBwYWRkaW5nLWJsb2NrLXN0YXJ0OiB2YXIoLS1mbHVpZC0yKTtcbiAgcGFkZGluZy1ibG9jay1lbmQ6IHZhcigtLWZsdWlkLTIpO1xuICBwYWRkaW5nLWlubGluZS1zdGFydDogdmFyKC0tZmx1aWQtOCk7XG4gIHBhZGRpbmctaW5saW5lLWVuZDogdmFyKC0tZmx1aWQtOCk7XG59XG5cbi50YWctaW5mbyB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWFnbm9zdGljLXByaW1hcnktbGlnaHQpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1kYXJrKTtcbn1cbi50YWctd2FybmluZyB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWFnbm9zdGljLXdhcm5pbmctbGlnaHQpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtd2FybmluZy1kYXJrKTtcbn1cbi50YWctZXJyb3Ige1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1hZ25vc3RpYy1lcnJvci1saWdodCk7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1lcnJvci1kYXJrKTtcbn1cbi50YWctc3VjY2VzcyB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWFnbm9zdGljLWFjdGlvbi1saWdodCk7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1hY3Rpb24tZnJvbSk7XG59XG4udGFnLXVwcGVyIHtcbiAgZm9udC1zaXplOiB2YXIoLS1mbHVpZC0xMCk7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG4udGFnLWNpcmNsZSB7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cbi50YWctcm91bmQge1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1hZ25vc3RpYy1yYWRpdXMpO1xufVxuLnRhZy1waWxsIHtcbiAgYm9yZGVyLXJhZGl1czogMjAwcHg7XG59XG4iXX0= */
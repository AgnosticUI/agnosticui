.alert-base,
.alert {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
}
.alert-end {
  justify-content: flex-end;
}
.alert-skin,
.alert {
  padding: var(--agnostic-side-padding);
  background: var(--agnostic-gray-light);
}

.alert-icon {
  color: var(--agnostic-gray-mid-dark);
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
  /* Ensures our icon doesn't flex grow or shrink */
  flex: 0 0 var(--fluid-24);
}

.alert-border-top {
  border-top: var(--fluid-8) solid var(--agnostic-gray-mid-dark);
}
.alert-border-left {
  border-left: var(--fluid-8) solid var(--agnostic-gray-mid-dark);
}
.alert-border-bottom {
  border-bottom: var(--fluid-8) solid var(--agnostic-gray-mid-dark);
}
.alert-border-right {
  border-right: var(--fluid-8) solid var(--agnostic-gray-mid-dark);
}

.alert-border-all {
  border: var(--fluid-2) solid var(--agnostic-gray-mid-dark);
}

.alert-rounded {
  border-radius: var(--agnostic-alert-radius, var(--agnostic-radius, 0.25rem));
}

.alert-warning {
  background: var(--agnostic-warning-light);
  color: var(--agnostic-primary-dark);
}
.alert-warning-icon {
  color: var(--agnostic-warning-border-accent);
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
  /* Ensures our icon doesn't flex grow or shrink */
  flex: 0 0 var(--fluid-24);
}
.alert-warning.alert-border-top {
  border-top-color: var(--agnostic-warning-border-accent);
}
.alert-warning.alert-border-left {
  border-left-color: var(--agnostic-warning-border-accent);
}
.alert-warning.alert-border-bottom {
  border-bottom-color: var(--agnostic-warning-border-accent);
}
.alert-warning.alert-border-right {
  border-right-color: var(--agnostic-warning-border-accent);
}
.alert-warning.alert-border-all {
  border: var(--fluid-2) solid var(--agnostic-warning-border);
}

.alert-info {
  background: var(--agnostic-primary-light);
  color: var(--agnostic-primary-dark);
}
.alert-info-icon {
  color: var(--agnostic-primary-dark);
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
  /* Ensures our icon doesn't flex grow or shrink */
  flex: 0 0 var(--fluid-24);
}

.alert-info.alert-border-top {
  border-top-color: var(--agnostic-primary-dark);
}
.alert-info.alert-border-left {
  border-left-color: var(--agnostic-primary-dark);
}
.alert-info.alert-border-bottom {
  border-bottom-color: var(--agnostic-primary-dark);
}
.alert-info.alert-border-right {
  border-right-color: var(--agnostic-primary-dark);
}
.alert-info.alert-border-all {
  border: var(--fluid-2) solid var(--agnostic-primary-border);
}

.alert-error {
  background: var(--agnostic-error-light);
  color: var(--agnostic-error-dark);
}
.alert-error-icon {
  color: var(--agnostic-error-dark);
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
  /* Ensures our icon doesn't flex grow or shrink */
  flex: 0 0 var(--fluid-24);
}
.alert-error.alert-border-top {
  border-top-color: var(--agnostic-error-dark);
}
.alert-error.alert-border-left {
  border-left-color: var(--agnostic-error-dark);
}
.alert-error.alert-border-bottom {
  border-bottom-color: var(--agnostic-error-dark);
}
.alert-error.alert-border-right {
  border-right-color: var(--agnostic-error-dark);
}
.alert-error.alert-border-all {
  border: var(--fluid-2) solid var(--agnostic-error-border);
}

.alert-success {
  background: var(--agnostic-action-light);
  color: var(--agnostic-action-from);
}
.alert-success-icon {
  color: var(--agnostic-ation-from);
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
  /* Ensures our icon doesn't flex grow or shrink */
  flex: 0 0 var(--fluid-24);
}
.alert-success.alert-border-top {
  border-top-color: var(--agnostic-action-from);
}
.alert-success.alert-border-left {
  border-left-color: var(--agnostic-action-from);
}
.alert-success.alert-border-bottom {
  border-bottom-color: var(--agnostic-action-from);
}
.alert-success.alert-border-right {
  border-right-color: var(--agnostic-action-from);
}
.alert-success.alert-border-all {
  border: var(--fluid-2) solid var(--agnostic-action-border);
}

/**
 * Button Groups
 */
.btn-group {
  display: inline-flex;
  flex-direction: row;
}

.btn-group > button {
  border-radius: var(--agnostic-btn-radius, var(--agnostic-radius, 0.25rem));
}
.btn-group > button:not(:last-child) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  -webkit-margin-end: -1px;
          margin-inline-end: -1px;
}
.btn-group > button:not(:first-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

/*
* Base Button Style
*
* Please note that we have two versions of this:
* `.btn` which encompasses both the base and skin styles
* `.btn-base` and `btn-skin`.
* The reason we've done this is to provide you with some convenience but
* also flexibility. Most will just want to apply `.btn`. However, if the
* base skin of the button does not work for you, another option is to only
* apply `.btn-base` and then set your own "button skin".
*/
.btn-base,
.btn {
  /* TODO test this fallback override syntax is correct */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  box-sizing: border-box;
  transition-property: all;
  transition-duration: var(--agnostic-timing-medium);
}

.btn-skin,
.btn {
  color: var(--agnostic-btn-font-color, var(--agnostic-dark));
  background-color: var(--agnostic-btn-bgcolor, var(--agnostic-gray-light));
  border-color: var(--agnostic-btn-bgcolor, var(--agnostic-gray-light));
  /* seems like a reasonable default as chrome picks `outset` which results in a weird 3d effect */
  border-style: solid;
  border-width: var(--agnostic-btn-border-size, 1px);
  font-family: var(--agnostic-btn-font-family, var(--agnostic-font-family));
  font-weight: var(--agnostic-btn-font-weight, 400);
  font-size: var(--agnostic-btn-font-size, 1rem);
  /* this can be overriden, but it might mess with the balance of the button heights across variants */
  line-height: var(--agnostic-line-height, var(--fluid-20, 1.25rem));
  -webkit-padding-before: var(--agnostic-vertical-pad, 0.5rem);
          padding-block-start: var(--agnostic-vertical-pad, 0.5rem);
  -webkit-padding-after: var(--agnostic-vertical-pad, 0.5rem);
          padding-block-end: var(--agnostic-vertical-pad, 0.5rem);
  -webkit-padding-start: var(--agnostic-side-padding, 0.75rem);
          padding-inline-start: var(--agnostic-side-padding, 0.75rem);
  -webkit-padding-end: var(--agnostic-side-padding, 0.75rem);
          padding-inline-end: var(--agnostic-side-padding, 0.75rem);
  text-decoration: none;
  text-align: center;
  outline: none;
}

.btn:visited {
  color: var(--agnostic-btn-font-color, var(--agnostic-dark));
}

.btn:hover {
  opacity: 0.85;
  text-decoration: none;
}

.btn:active {
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.3);
  text-decoration: none;
  transition-duration: 0s;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
}

.btn:focus {
  box-shadow: 0 0 0 3px var(--agnostic-focus-ring-color);
  /* Needed for High Contrast mode */
  outline: 3px solid transparent;
  transition: box-shadow var(--agnostic-timing-fast) ease-out;
}

/*
* Disabled State
*
* The disabled state uses the class .disabled, is-disabled,
* and the form attribute disabled="disabled".
* The use of !important is only added because this is a state
* that must be applied to all buttons when in a disabled state.
*/
.btn.disabled,
.btn:disabled {
  top: 0 !important;
  background: var(--agnostic-btn-disabled-bg, var(--agnostic-gray-mid-dark)) !important;
  text-shadow: 0 1px 1px rgba(255, 255, 255, 1) !important;
  /* primary, secondary, natural, all look same when disabled; and we don't want to
  have an inadvertant looking blue primary border when disabled so it's transparent */
  border-color: transparent;
  color: var(--agnostic-btn-disabled-color, var(--agnostic-gray-dark)) !important;
  cursor: default !important;
  -webkit-appearance: none !important;
     -moz-appearance: none !important;
          appearance: none !important;
  box-shadow: none !important;
  opacity: 0.8 !important;
}

.btn-primary {
  background-color: var(--agnostic-btn-primary, var(--agnostic-primary));
  border-color: var(--agnostic-btn-primary, var(--agnostic-primary));
  color: var(--agnostic-btn-primary-color, var(--agnostic-light));
}

/* Border and font is primary. When hovered, we invert with primary background and white font */
.btn-primary.btn-bordered {
  color: var(--agnostic-btn-primary, var(--agnostic-primary));
}
.btn-primary.btn-bordered:hover,
.btn-primary.btn-bordered:focus {
  background-color: var(--agnostic-btn-primary, var(--agnostic-primary));
  color: var(--agnostic-btn-primary-color, var(--agnostic-light));
}

.btn-primary:visited {
  color: var(--agnostic-btn-primary-color, var(--agnostic-light));
}

.btn-secondary {
  background-color: var(--agnostic-btn-secondary, var(--agnostic-secondary));
  border-color: var(--agnostic-btn-secondary, var(--agnostic-secondary));
  color: var(--agnostic-btn-secondary-color, var(--agnostic-light));
}

/* Border and font is secondary. When hovered, we invert with secondary background and white font */
.btn-secondary.btn-bordered {
  color: var(--agnostic-btn-secondary, var(--agnostic-secondary));
}
.btn-secondary.btn-bordered:hover,
.btn-secondary.btn-bordered:focus {
  background-color: var(--agnostic-btn-secondary, var(--agnostic-secondary));
  color: var(--agnostic-btn-secondary-color, var(--agnostic-light));
}

.btn-secondary:visited {
  color: var(--agnostic-btn-secondary-color, var(--agnostic-light));
}

/*
* Raised Buttons
*
* A classic looking button that offers
* great depth and affordance.
*/
.btn-raised {
  border-color: var(--agnostic-btn-bgcolor, var(--agnostic-gray-light));
  border-style: solid;
  /* Note that while one can customize some of these slightly, we essentially have hard-coded
  box shadow rgba values so they can't really do so drastically which is probably fine :) */
  background: linear-gradient(
    var(--agnostic-btn-raised-from, var(--agnostic-gray-mid)),
    var(--agnostic-btn-raised-to, var(--agnostic-gray-extra-light))
  );
  box-shadow: inset 0px 1px 0px rgba(255, 255, 255, 0.3), 0 1px 2px rgba(0, 0, 0, 0.15);
}
.btn-raised:hover,
.btn-raised:focus {
  background: linear-gradient(to bottom, white, gainsboro);
}
.btn-raised.active {
  /* TODO -- maybe this shouldn't be hard coded */
  background: #eeeeee;
  box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.2), 0px 1px 0px white;
}

/*
* Raised Primary Buttons
*/
.btn-raised.btn-primary {
  border-color: var(--agnostic-btn-primary-raised-to, var(--agnostic-primary-from));
  background: linear-gradient(
    var(--agnostic-btn-primary-raised-from, var(--agnostic-primary-from)),
    var(--agnostic-btn-primary-raised-to, var(--agnostic-primary-to))
  );
}

.btn-raised.btn-primary:hover,
.btn-raised.btn-primary:focus {
  background: linear-gradient(
    to bottom,
    var(--agnostic-btn-primary-raised-hover-from, var(--agnostic-primary-hover)),
    var(--agnostic-btn-primary-raised-to, var(--agnostic-primary-from))
  );
  background: linear-gradient(
    var(--agnostic-btn-primary-raised-hover-from, var(--agnostic-primary-hover)),
    var(--agnostic-btn-primary-raised-to, var(--agnostic-primary-from))
  );
}

.btn-raised.btn-primary:active,
.btn-raised.btn-primary.active {
  opacity: 0.9;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.3);
}

/*
* Raised Secondary Buttons
*/
.btn-raised.btn-secondary {
  border-color: var(--agnostic-btn-secondary-raised-to, var(--agnostic-secondary-to));
  background: linear-gradient(
    var(--agnostic-btn-secondary-raised-from, var(--agnostic-secondary-from)),
    var(--agnostic-btn-secondary-raised-to, var(--agnostic-secondary-to))
  );
}

.btn-raised.btn-secondary:hover,
.btn-raised.btn-secondary:focus {
  background: linear-gradient(
    to bottom,
    var(--agnostic-btn-secondary-raised-hover-from, var(--agnostic-secondary-hover)),
    var(--agnostic-btn-secondary-raised-to, var(--agnostic-secondary-to))
  );
  background: linear-gradient(
    var(--agnostic-btn-secondary-raised-hover-from, var(--agnostic-secondary-hover)),
    var(--agnostic-btn-secondary-raised-to, var(--agnostic-secondary-to))
  );
}

.btn-raised.btn-secondary:active,
.btn-raised.btn-secondary.active {
  opacity: 0.9;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.3);
}

/**
  * Border Buttons
  */
.btn-bordered {
  border-width: 1px;
  background: transparent;
}

/**
  * Sizes
  */
.btn-large {
  font-size: calc(var(--agnostic-btn-font-size, 1rem) + 0.25rem);
  height: 3rem;
  line-height: 3rem;
  padding: 0 3rem;
}

.btn-small {
  font-size: calc(var(--agnostic-btn-font-size, 1rem) - 0.25rem);
  height: 2rem;
  line-height: 2rem;
  padding: 0 2rem;
}

/**
  * Rounded
  */
.btn-rounded {
  border-radius: var(--agnostic-btn-radius, var(--agnostic-radius, 0.25rem));
}

.btn-pill {
  border-radius: 200px;
}

/*
  * Size Adjustment for equal height & width buttons
  *
  * Remove padding
  */
.btn-circle {
  border-radius: 100%;
  width: 2.5rem;
  height: 2.5rem;
  padding: 0 !important;
}

.btn-circle-large {
  font-size: calc(var(--agnostic-btn-font-size, 1rem) + 0.25rem);
  width: 3rem;
  height: 3rem;
}

.btn-circle-small {
  font-size: calc(var(--agnostic-btn-font-size, 1rem) - 0.25rem);
  width: 2rem;
  height: 2rem;
}

/**
 * Button Block (stacked)
 */
.btn-block {
  width: 100%;
}
/* This is a utility class used if you literally want to stack block buttons one after another.
Apply this class to the nth-of-type(2) onwards to ensure the borders line up properly. */
.btn-block-following {
  -webkit-margin-before: -1px;
          margin-block-start: -1px;
}

/**
 * Invisible buttons. Generally used for a Cancel or icon button that behaves like a button,
 * semantically and for a11y, but, does so without all the typical "button chrome" behind it.
 */
.btn-blank {
  background-color: transparent;
  border: 0;
  border-radius: 0;
  box-shadow: none;
}
.btn-blank:hover,
.btn-blank:active,
.btn-blank:focus {
  background: none;
  outline: 3px solid transparent;
}

/**
 * Cards
 *
 * I drew some inspiration from the article on media-query less cards:
 * https://css-tricks.com/how-to-make-a-media-query-less-card-component/
 */
.card,
.card-base {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  position: relative;
  box-sizing: border-box;
  width: 100%;
}

.card,
.card-skin {
  box-shadow: var(--agnostic-card-boxshadow1-offset-x, 0)
      var(--agnostic-card-boxshadow1-offset-y, 0.375rem)
      var(--agnostic-card-boxshadow1-blur, 0.5625rem)
      var(--agnostic-card-boxshadow1-color, rgba(6, 6, 6, 0.075)),
    var(--agnostic-card-boxshadow2-offset-x, 0) var(--agnostic-card-boxshadow2-offset-y, 0)
      var(--agnostic-card-boxshadow2-blur, 1px)
      var(--agnostic-card-boxshadow2-color, rgba(5, 5, 5, 0.1));
  border-radius: var(--agnostic-card-border-radius, var(--agnostic-radius, 0.25rem));
  overflow: hidden;
}

.card:hover,
.card-skin:hover {
  box-shadow: var(--agnostic-card-boxshadow1-offset-x, 0)
      var(--agnostic-card-boxshadow1-offset-y, 0.375rem)
      var(--agnostic-card-boxshadow1-blur, 0.875rem)
      var(--agnostic-card-boxshadow1-color, rgba(4, 4, 4, 0.1)),
    var(--agnostic-card-boxshadow2-offset-x, 0) var(--agnostic-card-boxshadow2-offset-y, 0)
      var(--agnostic-card-boxshadow2-blur, 2px)
      var(--agnostic-card-boxshadow2-color, rgba(3, 3, 3, 0.1));
}

/**
 * Animates the y position and box shadow on hover
 */
.card-animated {
  transition: box-shadow ease-out 5s,
    transform var(--agnostic-timing-fast)
      cubic-bezier(
        var(--agnostic-card-cubic-1, 0.39),
        var(--agnostic-card-cubic-2, 0.575),
        var(--agnostic-card-cubic-3, 0.565),
        var(--agnostic-card-cubic-4, 1)
      );
}
.card-animated:hover {
  transform: translateY(var(--agnostic-card-translateY-hover, -3px));
  transition: box-shadow ease-out var(--agnostic-timing-fast),
    transform var(--agnostic-timing-slow)
      cubic-bezier(
        var(--agnostic-card-cubic-1, 0.39),
        var(--agnostic-card-cubic-2, 0.575),
        var(--agnostic-card-cubic-3, 0.565),
        var(--agnostic-card-cubic-4, 1)
      );
}

.card-stacked {
  flex-direction: column;
}

/**
 * These radio and checkbox customizations are an amalgamation of various resources I've found on the internets; from Heydon
 * Pickering's radio article (and his Inclusive Components book), to Sara Soueidan, Scott O'Hara, MDO, and Adrian Roselli's
 * research on the matter of inclusive hiding and custom radio/checkbox inputs.
 */

.checkbox-group,
.radio-group {
  --width-28: calc(7 * var(--fluid-4)); /* 1.75rem/28px */
  border: 1px solid var(--agnostic-checkbox-border-color, var(--agnostic-gray-light));
  padding: var(--fluid-24);
  padding-top: var(--fluid-14);
  border-radius: var(--fluid-8);
}

.checkbox-group-large,
.radio-group-large {
  padding: var(--width-28);
  padding-top: var(--fluid-16);
}

.checkbox-legend,
.radio-legend {
  padding: var(--fluid-2) var(--fluid-14);
  border-radius: var(--fluid-2);
}

/* Hiding technique from https://www.sarasoueidan.com/blog/inclusively-hiding-and-styling-checkboxes-and-radio-buttons/
*/
.checkbox,
.radio {
  position: absolute;
  width: var(--fluid-14);
  height: var(--fluid-14);
  opacity: 0;
}

.checkbox-small,
.radio-small {
  width: var(--fluid-12);
  height: var(--fluid-12);
}

.checkbox-large,
.radio-large {
  width: var(--fluid-16);
  height: var(--fluid-16);
}

.checkbox-label-wrap,
.radio-label-wrap {
  display: block;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  position: relative;
  line-height: var(--fluid-36);
}

.checkbox-label-wrap-inline,
.radio-label-wrap-inline {
  display: inline-flex;
}

.checkbox-label-wrap-inline:not(:last-child),
.radio-label-wrap-inline:not(:last-child) {
  -webkit-margin-end: var(--fluid-8);
          margin-inline-end: var(--fluid-8);
}

/* These are not actual <label> elements but the <span> label copy elements */
.checkbox-label,
.radio-label {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
}

/* The checkmark itself */
.checkbox-label:after {
  content: '';
  position: absolute;
  left: var(--fluid-6);
  top: var(--fluid-10);
  width: var(--fluid-6);
  height: var(--fluid-12);
  border: solid white;
  border-width: 0 var(--fluid-2) var(--fluid-2) 0;
  transform-origin: center center;
  transform: rotate(40deg) scale(0);
  transition-property: border, background-color, transform;
  transition-duration: var(--agnostic-timing-fast);
  transition-timing-function: ease-in-out;
}
.checkbox-label:before,
.radio-label:before {
  content: '';
  display: inline-block;
  -webkit-margin-end: var(--agnostic-checkbox-spacing-end, 0.75rem);
          margin-inline-end: var(--agnostic-checkbox-spacing-end, 0.75rem);
  transition: var(--agnostic-timing-fast) ease-out all;
}

/* Since we build up the radio size outwardly, it's naturally larger then the checkboxes
so we add a multiplyer to even those out initially */
.checkbox-label:before {
  border: 2px solid var(--agnostic-checkbox-border-color, var(--agnostic-gray-light));
  width: var(--fluid-16);
  height: var(--fluid-16);
  transition: box-shadow var(--agnostic-timing-fast) ease-out;
}

.radio-label:before {
  width: var(--fluid-14);
  height: var(--fluid-14);
  vertical-align: calc(-1 * var(--fluid-2));
  border-radius: 50%;
  border: var(--fluid-2) solid var(--agnostic-checkbox-light, var(--agnostic-light));
  box-shadow: 0 0 0 var(--fluid-2) var(--agnostic-checkbox-border-color, var(--agnostic-gray-light));
  transition: box-shadow var(--agnostic-timing-fast) ease-out;
}

.checkbox-label-small:after {
  left: calc(1.25 * var(--fluid-4));
}
.checkbox-label-small:before {
  width: var(--fluid-14);
  height: var(--fluid-14);
}

.radio-label-small:before {
  width: var(--fluid-12);
  height: var(--fluid-12);
}

.checkbox-label-large:after {
  left: calc(1.75 * var(--fluid-4));
}

.checkbox-label-large:before {
  width: var(--fluid-18);
  height: var(--fluid-18);
}

.radio-label-large:before {
  width: var(--fluid-16);
  height: var(--fluid-16);
}

/* the checked style using the :checked pseudo class */
.radio:checked + .radio-label:before {
  background: var(--agnostic-checkbox-fill-color, #08a880);
  box-shadow: 0 0 0 var(--fluid-2) var(--agnostic-checkbox-border-color, var(--agnostic-gray-light));
}

.radio:focus + .radio-label:before {
  box-shadow: 0 0 0 var(--fluid-2) var(--agnostic-checkbox-border-color, var(--agnostic-gray-light)),
    0 0 0 calc(1.5 * var(--fluid-2)) white,
    0 0 0 calc(2.25 * var(--fluid-2)) var(--agnostic-focus-ring-color);
}

.checkbox:focus + .checkbox-label:before {
  box-shadow: 0 0 0 3px var(--agnostic-focus-ring-color);
  outline: 3px solid transparent;
}

.checkbox:checked + .checkbox-label:after {
  transform: rotate(40deg) scale(1);
}
.checkbox:checked + .checkbox-label:before {
  background: var(--agnostic-checkbox-fill-color, #08a880);
  border: 2px solid var(--agnostic-checkbox-fill-color, #08a880);
}

/**
 * Consumer styles <legend> themselves, and can opt to use the .screenreader-only from
 * utilities.css if they're design requires it.
 */
.checkbox-group-hidden,
.radio-group-hidden {
  border: 0;
  -webkit-margin-before: 0;
          margin-block-start: 0;
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: 0;
          margin-inline-end: 0;
  -webkit-margin-after: 0;
          margin-block-end: 0;
  -webkit-padding-before: 0;
          padding-block-start: 0;
  -webkit-padding-start: 0;
          padding-inline-start: 0;
  -webkit-padding-end: 0;
          padding-inline-end: 0;
  -webkit-padding-after: 0;
          padding-block-end: 0;
}

/* Targets both the label container and the span label that is used
to style the custom radio / checkbox. Note it does NOT target the input
itself. */
.checkbox[disabled] + .checkbox-label,
.radio[disabled] + .radio-label,
.checkbox-label-wrap.disabled,
.radio-label-wrap.disabled,
.checkbox-label-wrap-inline.disabled,
.radio-label-wrap-inline.disabled {
  color: var(--agnostic-input-disabled-color, var(--agnostic-disabled-color)) !important;
  -webkit-appearance: none !important;
     -moz-appearance: none !important;
          appearance: none !important;
  box-shadow: none !important;
  cursor: not-allowed !important;
  opacity: 0.8 !important;
}

@media screen and (-ms-high-contrast: active) {
  /* High contrast mode outline hacks */
  .checkbox-label-wrap.disabled,
  .radio-label-wrap.disabled,
  .checkbox-label-wrap-inline.disabled,
  .radio-label-wrap-inline.disabled {
    outline: 2px solid transparent;
    outline-offset: -2px;
  }
}

.header,
.header-base {
  display: block;
}

.header-base img,
.header img {
  max-width: 100%;
  height: auto;
}

.header,
.header-skin {
  background-color: var(--agnostic-header-background-color, var(--agnostic-light));
  box-shadow: var(--agnostic-header-box-shadow-hor, 0) var(--agnostic-header-box-shadow-ver, 1px)
    var(--agnostic-header-box-shadow-blur, 5px) var(--agnostic-header-box-shadow-spread, 2px)
    var(--agnostic-header-box-shadow-color, rgba(0, 0, 0, 0.1));
  font-family: var(--agnostic-header-font-family, var(--agnostic-font-family));
  border-bottom: 1px solid var(--agnostic-header-border-color, var(--agnostic-gray-light));
  -webkit-padding-before: var(--agnostic-vertical-pad, 0.5rem);
          padding-block-start: var(--agnostic-vertical-pad, 0.5rem);
  -webkit-padding-after: var(--agnostic-vertical-pad, 0.5rem);
          padding-block-end: var(--agnostic-vertical-pad, 0.5rem);
  -webkit-padding-start: var(--agnostic-side-padding, 0.75rem);
          padding-inline-start: var(--agnostic-side-padding, 0.75rem);
  -webkit-padding-end: var(--agnostic-side-padding, 0.75rem);
          padding-inline-end: var(--agnostic-side-padding, 0.75rem);
}

.header-content {
  width: var(--agnostic-header-content-width, 960px);
  max-width: 100%;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
  flex-wrap: wrap;
}

/**
 * If you make your header sticky, you should likely consider that jump links
 * e.g. <h1 id="Jump-Here">... will tuck underneath the header! Here's a recommendation
 * for how to circumnavigate this issue via scroll-margin-top:
  h1[id],
  h2[id],
  h3[id],
  h4[id],
  h5[id],
  h6[id] {
    scroll-margin-top: 80px;
  }
 * In this case I have a 64px tall header so I've added 16px for clearance -- you'll need
 * to curate your own use case, but scroll-margin-top is super useful for this use case.
 */

.header-sticky {
  position: relative;
  top: 0;
  z-index: 10;
}

@media (min-width: 960px) {
  .header-sticky {
    position: -webkit-sticky;
    position: sticky;
  }

  .header-content {
    flex-direction: row;
    justify-content: space-between;
  }
}

/* Goes on the <ul> */
.header-nav {
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
}

@media (min-width: 960px) {
  .header-nav {
    flex-direction: row;
  }
}

.header-nav-item {
  display: inline-block;
}
.header-nav-item:not(:last-child) {
  -webkit-margin-end: initial;
          margin-inline-end: initial;
  -webkit-margin-after: var(--fluid-8);
          margin-block-end: var(--fluid-8);
}

.header-nav-item a {
  color: var(--agnostic-header-color, var(--agnostic-font-color));
  text-decoration: none;
}

@media (min-width: 960px) {
  .header-nav-item:not(:last-child) {
    -webkit-margin-end: var(--agnostic-header-nav-spacing, var(--fluid-32));
            margin-inline-end: var(--agnostic-header-nav-spacing, var(--fluid-32));
    -webkit-margin-after: initial;
            margin-block-end: initial;
  }
}

.input-base,
.input {
  /* Note this cannot be user-select: none else mobile safari won't accept input:
  https://stackoverflow.com/questions/49889003/cannot-write-into-input-field-on-safari/49901069
   */
  -webkit-user-select: initial;
     -moz-user-select: initial;
      -ms-user-select: initial;
          user-select: initial;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  box-sizing: border-box;
  /* Use the same color for the cursor */
  caret-color: currentColor;
}

.label,
.label-base {
  padding: 0;
  border: 0;
  box-sizing: border-box;
  font-family: inherit;
}

/* Electing to scope these as opposed to doing :root level definitions */
.field-help,
.field-help-large,
.field-help-small,
.field-error,
.field-error-large,
.field-error-small,
.label-skin,
.label,
.input-addon-container,
.input-small,
.input-large,
.input-skin,
.input-underlined,
.input-underlined-bg,
.input {
  color: var(--agnostic-font-color, var(--agnostic-dark));
  font-family: var(--agnostic-font-family);
  font-weight: var(--agnostic-font-weight, 300);
  font-size: var(--agnostic-font-size, 1rem);
  line-height: var(--agnostic-line-height, var(--fluid-20, 1.25rem));
  width: 100%;
  max-width: 100%;
}

.input-skin,
.input {
  /* seems like a reasonable default as chrome picks `outset` which results in a weird 3d effect */
  border-style: solid;
  /* this can be overriden, but it might mess with the balance of the button heights across variants */
  border-width: var(--agnostic-input-border-size, 1px);
  border-color: var(--agnostic-input-border-color, var(--agnostic-gray-light));
  /* these can be overriden, but it might mess with the balance of the inputheights across variants */
  -webkit-padding-before: var(--agnostic-input-vertical-pad, 0.5rem);
          padding-block-start: var(--agnostic-input-vertical-pad, 0.5rem);
  -webkit-padding-after: var(--agnostic-input-vertical-pad, 0.5rem);
          padding-block-end: var(--agnostic-input-vertical-pad, 0.5rem);
  -webkit-padding-start: var(--agnostic-input-side-padding, 0.75rem);
          padding-inline-start: var(--agnostic-input-side-padding, 0.75rem);
  -webkit-padding-end: var(--agnostic-input-side-padding, 0.75rem);
          padding-inline-end: var(--agnostic-input-side-padding, 0.75rem);

  /* Note we only want to set properties that we actually want
  to transition in. For example, if we transition "all", the
  inputs will "grow in" on page load—not a happy effect :) */
  transition-property: box-shadow;
  transition-duration: var(--agnostic-input-timing, var(--agnostic-timing-medium));
}

.label {
  display: inline-block;
  /* Provided --agnostic-input-vertical-pad isn't overriden we'll get 20px
  label w/a 6px margin then a 38px input = 64 which is on the 8pt grid */
  -webkit-margin-before: 0;
          margin-block-start: 0;
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: 0;
          margin-inline-end: 0;
  -webkit-margin-after: var(--agnostic-input-label-pad, 0.375rem);
          margin-block-end: var(--agnostic-input-label-pad, 0.375rem);
  vertical-align: initial;
}

/* Reset labels and field errors to be 2px less then input font size */
.field-help,
.field-error,
.label,
.label-skin {
  font-size: calc(var(--agnostic-font-size, 1rem) - 2px);
}

.label-inline,
.input-inline {
  width: auto;
}

/* When inlined, the margin-block-end will throw the label off-center with adjacent input */
.label-inline {
  -webkit-margin-before: 0;
          margin-block-start: 0;
  -webkit-margin-after: 0;
          margin-block-end: 0;
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: var(--agnostic-input-side-padding, 0.75rem);
          margin-inline-end: var(--agnostic-input-side-padding, 0.75rem);
}

/**
* Placeholder
*/
.input::-webkit-input-placeholder {
  color: currentColor;
  opacity: 0.5;
  -webkit-transition: opacity var(--agnostic-timing-fast) ease-out;
  transition: opacity var(--agnostic-timing-fast) ease-out;
}

.input::-moz-placeholder {
  color: currentColor;
  opacity: 0.5;
  -moz-transition: opacity var(--agnostic-timing-fast) ease-out;
  transition: opacity var(--agnostic-timing-fast) ease-out;
}

.input::-ms-placeholder {
  color: currentColor;
  opacity: 0.5;
  -ms-transition: opacity var(--agnostic-timing-fast) ease-out;
  transition: opacity var(--agnostic-timing-fast) ease-out;
}

.input:-ms-placeholder {
  color: currentColor;
  opacity: 0.5;
  -ms-transition: opacity var(--agnostic-timing-fast) ease-out;
  transition: opacity var(--agnostic-timing-fast) ease-out;
}

/**
* Underlined inputs
*/
.input-underlined {
  border-top: 0;
  border-left: 0;
  border-right: 0;
  border-color: var(--agnostic-input-underlined-color, var(--agnostic-gray-mid-dark));
  background-color: transparent;
}

.input-underlined-bg {
  background-color: var(--agnostic-input-underlined-bg-color, var(--agnostic-gray-extra-light));
}

/**
* Rounded inputs
*/
.input-rounded {
  border-radius: var(--agnostic-radius, 0.25rem);
}

/**
 * Errors
 * We provide a class-based approach to setting errors which means we do
 * not support :invalid, so it requires custom use of html4 validation API
 * (see https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation
 * of the example in corresponding input.html file). The reason I elected to
 * not include :invalid, is it seems to result in "shouting" at the user as
 * I did not find an easy way to only kick in errors after a certain number
 * of characters have been type (blur is actually better but I did not
 * implement that in the contrived example).
 */
.label-error {
  color: var(--agnostic-input-error-color, var(--agnostic-error));
}
.input-error {
  border-color: var(--agnostic-input-error-color, var(--agnostic-error));
}

.label-error,
.field-error,
.field-error-small,
.field-error-large {
  color: var(--agnostic-input-error-color, var(--agnostic-error));
}

.field-help,
.field-help-small,
.field-help-large {
  color: var(--agnostic-input-help-color, var(--agnostic-gray-dark));
}

.field-help,
.field-help-small,
.field-help-large,
.field-error,
.field-error-small,
.field-error-large {
  display: inline-block;
  width: 100%;
  -webkit-margin-before: calc(var(--agnostic-input-vertical-pad, 0.5rem) / 2);
          margin-block-start: calc(var(--agnostic-input-vertical-pad, 0.5rem) / 2);
}

/**
  * Sizes
  */
.input-large {
  font-size: calc(var(--agnostic-font-size, 1rem) + 0.25rem);
  line-height: 1.6rem;
}

.field-help-large,
.field-error-large,
.label-large {
  /* We initially remove -2px from font-size so setting to font-size essentially adds the 2px back */
  font-size: var(--agnostic-font-size, 1rem);
}

.input-small {
  font-size: calc(var(--agnostic-font-size, 1rem) - 0.25rem);
  line-height: 1rem;
}

.field-help-small,
.field-error-small,
.label-small {
  font-size: calc(var(--agnostic-font-size, 1rem) - 0.25rem);
}

.input:focus {
  box-shadow: 0 0 0 3px var(--agnostic-focus-ring-color);
  /* High contrast mode outline */
  outline: 3px solid transparent;
  transition: box-shadow var(--agnostic-timing-fast) ease-out;
}
/* Set the focus to transparent when there's an error since we use
borders that visually conflict. */
.input-error:focus {
  box-shadow: 0 0 0 3px transparent;
}

/*
* Disabled State
*
* The disabled state uses the class .disabled,
* and the form attribute disabled="disabled".
* The use of !important is only added because this is a state
* that must be applied to all inputs when in a disabled state.
*/
.input.disabled, /* DEPRECATED -- TODO remove class based disabled */
.input:disabled {
  background: var(--agnostic-input-disabled-bg, var(--agnostic-disabled-bg)) !important;
  color: var(--agnostic-input-disabled-color, var(--agnostic-disabled-color)) !important;
  -webkit-appearance: none !important;
     -moz-appearance: none !important;
          appearance: none !important;
  box-shadow: none !important;
  cursor: not-allowed !important;
  opacity: 0.8 !important;
}

@media screen and (-ms-high-contrast: active) {
  /* High contrast mode outline hacks */
  .input:disabled {
    outline: 2px solid transparent;
    outline-offset: -2px;
  }
}

/**
 * Input "has addon"
 */

.input-addon-container {
  display: flex;
  position: relative;
  width: 100%;
  /* Maybe I should have defined another css prop for addon adjustments but trying
  to avoid any extra variable explosion there--will need to keep an eye on this */
  --addon-padding: calc(var(--agnostic-input-side-padding, 0.75rem) * 1.5);
}

.input-has-left-addon,
.input-has-right-addon {
  flex: 1;
}

.input-has-left-addon {
  -webkit-padding-start: calc(var(--addon-padding) * 2.25);
          padding-inline-start: calc(var(--addon-padding) * 2.25);
}

.input-has-right-addon {
  -webkit-padding-end: calc(var(--addon-padding) * 2.25);
          padding-inline-end: calc(var(--addon-padding) * 2.25);
}

/*
* Input addons e.g. icons inside the input
*/
.input-addon-right,
.input-addon-left {
  /* Maybe I should have defined another css prop for addon adjustments but trying
  to avoid any extra variable explosion there--will need to keep an eye on this */
  --addon-padding: calc(var(--agnostic-input-side-padding) * 1.5);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.input-addon-left {
  left: var(--addon-padding);
}

.input-addon-right {
  right: var(--addon-padding);
}

/* https://stackoverflow.com/questions/45507970/how-can-i-change-the-color-of-a-progress-bar-value-in-html */
/**
 * Most examples show styling directly to the <progress> element itself. However,
 * my tests (chrome, ff, safari on mac mini 2020), showed it's perfectly possibly
 * to use a class selector instead. The reason I'd prefer that here, is that I can
 * then use CSS Modules composes against .progress (e.g. for React/Vue components)
 */
.progress {
  -webkit-appearance: none;
  height: var(--agnostic-progress-height, var(--fluid-10, 0.625rem));
  width: 100%;
  border: none;
  /* Next couple of rules are required to be here for FF (but not chrome) */
  background-color: var(--agnostic-progress-background, var(--agnostic-gray-light, #ededed));
  border-radius: var(--agnostic-progress-radius, var(--fluid-10, 0.625rem));
}

.progress[value]::-webkit-progress-bar {
  /* In my tests chrome requires this whereas FF wants it on the progress {} rule */
  background-color: var(--agnostic-progress-background, var(--agnostic-gray-light, #ededed));
  border-radius: var(--agnostic-progress-radius, var(--fluid-10, 0.625rem));
}

.progress[value]::-webkit-progress-value {
  background-color: var(--agnostic-progress-fill-color, var(--agnostic-primary, #077acb));
  border-radius: var(--agnostic-progress-radius, var(--fluid-10, 0.625rem));
}

.progress[value]::-moz-progress-bar {
  background-color: var(--agnostic-progress-fill-color, var(--agnostic-primary, #077acb));
  border-radius: var(--agnostic-progress-radius, var(--fluid-10, 0.625rem));
}

.progress[value]::-ms-fill {
  background-color: var(--agnostic-progress-fill-color, var(--agnostic-primary, #077acb));
  border-radius: var(--agnostic-progress-radius, var(--fluid-10, 0.625rem));
}

/**
 * Switch
 * 
 * This switch is inspired by Scott Ohara's checkbox switch:
 * https://scottaohara.github.io/a11y_styled_form_controls/src/checkbox--switch/
 */
.switch-container {
  display: block;
  /* TODO: Hopefully this doesn't become a problem but since we use absolute
  positioning extensively, we need some way to have adjacent spaced lines */
  min-height: 2.25rem;
  width: 100%;
  padding: 0.5rem;
  position: relative;
}

.switch-container:hover {
  cursor: pointer;
}

/* using the before/after pseudo elements of the span to create the "switch" */
.switch:before,
.switch:after {
  border: 1px solid var(--agnostic-gray-mid-dark);
  content: '';
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

/* styling specific to the knob of the switch */
.switch:after {
  background: #fff;
  border-radius: 100%;
  width: 1.4rem;
  height: 1.4rem;
  right: 1.4rem;
  transition: right var(--agnostic-timing-fast) ease-in-out;
}

/* styling specific to the knob "container" */
.switch:before {
  background: #eee;
  border-radius: 1.75rem;
  width: 2.75rem;
  height: 1.75rem;
  right: 0.25rem;
  transition: background var(--agnostic-timing-medium) ease-in-out;
}

/* Sizes */
.switch-small:after {
  width: 1.25rem;
  height: 1.25rem;
  right: 1.125rem;
}

.switch-small:before {
  width: 2.25rem;
  height: 1.5rem;
}

.switch-large:after {
  width: 1.65rem;
  height: 1.65rem;
  right: 1.65rem;
}

.switch-large:before {
  width: 3.25rem;
  height: 2rem;
}

.switch-border:before {
  border: 1px solid var(--agnostic-primary);
}

.switch-action.switch-border:before {
  border: 1px solid var(--agnostic-action);
}

/* From: https://scottaohara.github.io/a11y_styled_form_controls/src/checkbox--switch/
  hide the actual checkbox from view, but not from keyboards or ATs.
  Instead of standard visually hidden styling, instead set opacity to
  almost 0 (not zero for ChomeVox legacy bug), pointer-events none, and
  then set to full height/width of container element so that VO focus
  ring outlines the component, instead of a tiny box within the component
*/
.switch-input {
  margin: 0;
  opacity: 0.0001;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.switch-input:focus + .switch:before {
  box-shadow: 0 0 0 3px var(--agnostic-focus-ring-color);
}

/* ---- CHECKED STATE ----- */

/* change the position of the knob to indicate it has been checked*/
.switch-input:checked + .switch:after {
  right: 0.5em;
}
.switch-input:checked + .switch-small:after {
  right: 0.425rem;
}

/* update the color of the "container" to further visually indicate state */
.switch-input:checked + .switch:not(.switch-border):before {
  background: var(--agnostic-primary);
}

.switch-input:checked + .switch-action:not(.switch-border):before {
  background: var(--agnostic-action);
}

/* Border switch on checked the thumb gets primary or action bg respectively */
.switch-input:checked + .switch-border:after {
  background: var(--agnostic-primary);
}
.switch-input:checked + .switch-action.switch-border:after {
  background: var(--agnostic-action);
}

/* Switch label on right */

/* Flips transition target to left to preserve our smooth transitions */
.switch-right .switch:after {
  transition: left var(--agnostic-timing-fast) ease-in-out;
}

.switch-right .switch-input:checked + .switch:after {
  right: initial;
  left: 0.5em;
}
.switch-right .switch-input:checked + .switch-small:after {
  right: initial;
  left: 0.425rem;
}

/* We have to flip the positioning when the label is on the right of switch */
.switch-right .switch:before {
  right: initial;
  left: 0.25rem;
}

.switch-right .switch::after {
  right: initial;
  left: 1.4rem;
}

.switch-right .switch-label {
  position: absolute;
  top: 0;
  right: 0;
}

/* Switch sizes w/label on right -- I expect SMACSS so .switch .switch-small
classes should both exist so the right: initial was taken care of above :) */
.switch-right .switch-small:after {
  left: 1.125rem;
}

.switch-right .switch-large:after {
  left: 1.65rem;
}

/* Disabled aka :disabled is not actually supported for <label>
element so we use attribute selector for that:
https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled#:~:text=The%20disabled%20attribute%20is%20supported,control%20or%20its%20descendant%20controls.
*/
.switch-input[disabled] + .switch,
.switch-input[disabled] + .switch-label,
.switch-container.disabled {
  color: var(--agnostic-input-disabled-color, var(--agnostic-disabled-color)) !important;
  -webkit-appearance: none !important;
     -moz-appearance: none !important;
          appearance: none !important;
  box-shadow: none !important;
  cursor: not-allowed !important;
  opacity: 0.8 !important;
}

@media screen and (-ms-high-contrast: active) {
  .switch:after {
    background-color: windowText;
  }

  /* High contrast mode outline hacks */
  .switch-input[disabled] + .switch-label,
  .switch-container.disabled {
    outline: 2px solid transparent;
    outline-offset: -2px;
  }
}

.tab-list,
.tab-list-base {
  display: flex;
}

.tab-list,
.tab-skinned {
  flex-wrap: wrap;
  flex-direction: row;
  -webkit-padding-start: 0;
          padding-inline-start: 0;
  -webkit-margin-after: 0;
          margin-block-end: 0;
  border-bottom: var(--agnostic-tabs-border-size, 1px) solid
    var(--agnostic-tabs-bgcolor, var(--agnostic-gray-light));
  transition-property: all;
  transition-duration: var(--agnostic-timing-medium);
}

/* We can ask for .tab-button which is base and skin combined, or, we can utilize .tab-button-base
if we'd like to only blank out buttons but otherwise skin ourselves. */
.tab-button,
.tab-button-base {
  /* Blank out the button */
  background-color: transparent;
  border: 0;
  border-radius: 0;
  box-shadow: none;
  /* Reset margins/padding; this will get added back if it's a "skinned" tab button. However, we have
  a use case where a tab-button is wrapping a faux button. For that, we don't want margins/padding because
  the faux button provides that. */
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: 0;
          margin-inline-end: 0;
  -webkit-padding-before: 0;
          padding-block-start: 0;
  -webkit-padding-after: 0;
          padding-block-end: 0;
  -webkit-padding-start: 0;
          padding-inline-start: 0;
  -webkit-padding-end: 0;
          padding-inline-end: 0;
}

/* We pull back the 2nd subsequent tabs to remove the double border */
.tab-button:not(:first-of-type),
.tab-button-base:not(:first-of-type) {
  -webkit-margin-start: -1px;
          margin-inline-start: -1px;
}

.tab-button,
.tab-button-skin {
  display: block;
  /* Since this is a "skinned tab button" we add our padding here to previously "reset" .tab-button-base */
  -webkit-padding-before: var(--agnostic-vertical-pad, 0.5rem);
          padding-block-start: var(--agnostic-vertical-pad, 0.5rem);
  -webkit-padding-after: var(--agnostic-vertical-pad, 0.5rem);
          padding-block-end: var(--agnostic-vertical-pad, 0.5rem);
  -webkit-padding-start: var(--agnostic-side-padding, 0.75rem);
          padding-inline-start: var(--agnostic-side-padding, 0.75rem);
  -webkit-padding-end: var(--agnostic-side-padding, 0.75rem);
          padding-inline-end: var(--agnostic-side-padding, 0.75rem);
  font-family: var(--agnostic-btn-font-family, var(--agnostic-font-family));
  font-weight: var(--agnostic-btn-font-weight, 400);
  font-size: var(--agnostic-btn-font-size, 1rem);
  /* this can be overriden, but it might mess with the balance of the button heights across variants */
  line-height: var(--agnostic-line-height, var(--fluid-20, 1.25rem));
  color: var(--agnostic-tabs-primary, var(--agnostic-primary));
  text-decoration: none;
  transition: color var(--agnostic-timing-fast) ease-in-out,
    background-color var(--agnostic-timing-fast) ease-in-out,
    border-color var(--agnostic-timing-fast) ease-in-out;
}

.tab-borderless {
  border: none !important;
}

.tab-button-large {
  -webkit-padding-before: calc(var(--agnostic-input-side-padding) * 1.25);
          padding-block-start: calc(var(--agnostic-input-side-padding) * 1.25);
  -webkit-padding-after: calc(var(--agnostic-input-side-padding) * 1.25);
          padding-block-end: calc(var(--agnostic-input-side-padding) * 1.25);
  -webkit-padding-start: calc(var(--agnostic-input-side-padding) * 1.75);
          padding-inline-start: calc(var(--agnostic-input-side-padding) * 1.75);
  -webkit-padding-end: calc(var(--agnostic-input-side-padding) * 1.75);
          padding-inline-end: calc(var(--agnostic-input-side-padding) * 1.75);
}

.tab-button-jumbo {
  -webkit-padding-before: calc(var(--agnostic-input-side-padding) * 2);
          padding-block-start: calc(var(--agnostic-input-side-padding) * 2);
  -webkit-padding-after: calc(var(--agnostic-input-side-padding) * 2);
          padding-block-end: calc(var(--agnostic-input-side-padding) * 2);
  -webkit-padding-start: calc(var(--agnostic-input-side-padding) * 3);
          padding-inline-start: calc(var(--agnostic-input-side-padding) * 3);
  -webkit-padding-end: calc(var(--agnostic-input-side-padding) * 3);
          padding-inline-end: calc(var(--agnostic-input-side-padding) * 3);
}
.tab-item.tab-button {
  -webkit-margin-after: -1px;
          margin-block-end: -1px;
  background: 0 0;
  border: 1px solid transparent;
  border-top-left-radius: var(--agnostic-tabs-radius, 0.25rem);
  border-top-right-radius: var(--agnostic-tabs-radius, 0.25rem);
}

.tab-item.tab-button.active {
  color: var(--agnostic-gray-dark);
  /* TODO -- update these colors to use css properties */
  background-color: #fff;
  border-color: #dee2e6 #dee2e6 #fff;
}

.tab-item:hover,
.tab-button:focus {
  border-color: #e9ecef #e9ecef #dee2e6;
  isolation: isolate;
  cursor: pointer;
}

.tab-button:disabled {
  color: var(--agnostic-tabas-disabled-bg, var(--agnostic-gray-mid-dark));
  background-color: transparent;
  border-color: transparent;
  opacity: 0.8;
}

.tag {
  display: inline-flex;
  align-items: center;
  background-color: var(--agnostic-gray-light);
  border-radius: var(--agnostic-radius);
  color: var(--agnostic-dark);
  font-size: var(--fluid-14);
  justify-content: center;
  line-height: var(--agnostic-line-height, var(--fluid-20, 1.25rem));
  -webkit-padding-before: var(--fluid-2);
          padding-block-start: var(--fluid-2);
  -webkit-padding-after: var(--fluid-2);
          padding-block-end: var(--fluid-2);
  -webkit-padding-start: var(--fluid-8);
          padding-inline-start: var(--fluid-8);
  -webkit-padding-end: var(--fluid-8);
          padding-inline-end: var(--fluid-8);
  white-space: nowrap;
}
.tag-info {
  background: var(--agnostic-primary-light);
  color: var(--agnostic-primary-dark);
}
.tag-warning {
  background: var(--agnostic-warning-light);
  color: var(--agnostic-primary-dark);
}
.tag-error {
  background: var(--agnostic-error-light);
  color: var(--agnostic-error-dark);
}
.tag-success {
  background: var(--agnostic-action-light);
  color: var(--agnostic-action-from);
}
.tag-upper {
  text-transform: uppercase;
}

/*# sourceMappingURL=data:application/json;base64,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bkIsNENBQTRDO0VBQzVDLHFDQUFxQztFQUNyQywyQkFBMkI7RUFDM0IsMEJBQTBCO0VBQzFCLHVCQUF1QjtFQUN2QixrRUFBa0U7RUFDbEUsc0NBQW1DO1VBQW5DLG1DQUFtQztFQUNuQyxxQ0FBaUM7VUFBakMsaUNBQWlDO0VBQ2pDLHFDQUFvQztVQUFwQyxvQ0FBb0M7RUFDcEMsbUNBQWtDO1VBQWxDLGtDQUFrQztFQUNsQyxtQkFBbUI7QUFDckI7QUFDQTtFQUNFLHlDQUF5QztFQUN6QyxtQ0FBbUM7QUFDckM7QUFDQTtFQUNFLHlDQUF5QztFQUN6QyxtQ0FBbUM7QUFDckM7QUFDQTtFQUNFLHVDQUF1QztFQUN2QyxpQ0FBaUM7QUFDbkM7QUFDQTtFQUNFLHdDQUF3QztFQUN4QyxrQ0FBa0M7QUFDcEM7QUFDQTtFQUNFLHlCQUF5QjtBQUMzQiIsImZpbGUiOiJjb21wb25lbnRzLnByZWZpeGVkLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hbGVydC1iYXNlLFxuLmFsZXJ0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xufVxuLmFsZXJ0LWVuZCB7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG4uYWxlcnQtc2tpbixcbi5hbGVydCB7XG4gIHBhZGRpbmc6IHZhcigtLWFnbm9zdGljLXNpZGUtcGFkZGluZyk7XG4gIGJhY2tncm91bmQ6IHZhcigtLWFnbm9zdGljLWdyYXktbGlnaHQpO1xufVxuXG4uYWxlcnQtaWNvbiB7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1ncmF5LW1pZC1kYXJrKTtcbiAgbWFyZ2luLWlubGluZS1lbmQ6IHZhcigtLWZsdWlkLTgpO1xuICAvKiBFbnN1cmVzIG91ciBpY29uIGRvZXNuJ3QgZmxleCBncm93IG9yIHNocmluayAqL1xuICBmbGV4OiAwIDAgdmFyKC0tZmx1aWQtMjQpO1xufVxuXG4uYWxlcnQtYm9yZGVyLXRvcCB7XG4gIGJvcmRlci10b3A6IHZhcigtLWZsdWlkLTgpIHNvbGlkIHZhcigtLWFnbm9zdGljLWdyYXktbWlkLWRhcmspO1xufVxuLmFsZXJ0LWJvcmRlci1sZWZ0IHtcbiAgYm9yZGVyLWxlZnQ6IHZhcigtLWZsdWlkLTgpIHNvbGlkIHZhcigtLWFnbm9zdGljLWdyYXktbWlkLWRhcmspO1xufVxuLmFsZXJ0LWJvcmRlci1ib3R0b20ge1xuICBib3JkZXItYm90dG9tOiB2YXIoLS1mbHVpZC04KSBzb2xpZCB2YXIoLS1hZ25vc3RpYy1ncmF5LW1pZC1kYXJrKTtcbn1cbi5hbGVydC1ib3JkZXItcmlnaHQge1xuICBib3JkZXItcmlnaHQ6IHZhcigtLWZsdWlkLTgpIHNvbGlkIHZhcigtLWFnbm9zdGljLWdyYXktbWlkLWRhcmspO1xufVxuXG4uYWxlcnQtYm9yZGVyLWFsbCB7XG4gIGJvcmRlcjogdmFyKC0tZmx1aWQtMikgc29saWQgdmFyKC0tYWdub3N0aWMtZ3JheS1taWQtZGFyayk7XG59XG5cbi5hbGVydC1yb3VuZGVkIHtcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0tYWdub3N0aWMtYWxlcnQtcmFkaXVzLCB2YXIoLS1hZ25vc3RpYy1yYWRpdXMsIDAuMjVyZW0pKTtcbn1cblxuLmFsZXJ0LXdhcm5pbmcge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1hZ25vc3RpYy13YXJuaW5nLWxpZ2h0KTtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLXByaW1hcnktZGFyayk7XG59XG4uYWxlcnQtd2FybmluZy1pY29uIHtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLXdhcm5pbmctYm9yZGVyLWFjY2VudCk7XG4gIG1hcmdpbi1pbmxpbmUtZW5kOiB2YXIoLS1mbHVpZC04KTtcbiAgLyogRW5zdXJlcyBvdXIgaWNvbiBkb2Vzbid0IGZsZXggZ3JvdyBvciBzaHJpbmsgKi9cbiAgZmxleDogMCAwIHZhcigtLWZsdWlkLTI0KTtcbn1cbi5hbGVydC13YXJuaW5nLmFsZXJ0LWJvcmRlci10b3Age1xuICBib3JkZXItdG9wLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy13YXJuaW5nLWJvcmRlci1hY2NlbnQpO1xufVxuLmFsZXJ0LXdhcm5pbmcuYWxlcnQtYm9yZGVyLWxlZnQge1xuICBib3JkZXItbGVmdC1jb2xvcjogdmFyKC0tYWdub3N0aWMtd2FybmluZy1ib3JkZXItYWNjZW50KTtcbn1cbi5hbGVydC13YXJuaW5nLmFsZXJ0LWJvcmRlci1ib3R0b20ge1xuICBib3JkZXItYm90dG9tLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy13YXJuaW5nLWJvcmRlci1hY2NlbnQpO1xufVxuLmFsZXJ0LXdhcm5pbmcuYWxlcnQtYm9yZGVyLXJpZ2h0IHtcbiAgYm9yZGVyLXJpZ2h0LWNvbG9yOiB2YXIoLS1hZ25vc3RpYy13YXJuaW5nLWJvcmRlci1hY2NlbnQpO1xufVxuLmFsZXJ0LXdhcm5pbmcuYWxlcnQtYm9yZGVyLWFsbCB7XG4gIGJvcmRlcjogdmFyKC0tZmx1aWQtMikgc29saWQgdmFyKC0tYWdub3N0aWMtd2FybmluZy1ib3JkZXIpO1xufVxuXG4uYWxlcnQtaW5mbyB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWFnbm9zdGljLXByaW1hcnktbGlnaHQpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1kYXJrKTtcbn1cbi5hbGVydC1pbmZvLWljb24ge1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1kYXJrKTtcbiAgbWFyZ2luLWlubGluZS1lbmQ6IHZhcigtLWZsdWlkLTgpO1xuICAvKiBFbnN1cmVzIG91ciBpY29uIGRvZXNuJ3QgZmxleCBncm93IG9yIHNocmluayAqL1xuICBmbGV4OiAwIDAgdmFyKC0tZmx1aWQtMjQpO1xufVxuXG4uYWxlcnQtaW5mby5hbGVydC1ib3JkZXItdG9wIHtcbiAgYm9yZGVyLXRvcC1jb2xvcjogdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1kYXJrKTtcbn1cbi5hbGVydC1pbmZvLmFsZXJ0LWJvcmRlci1sZWZ0IHtcbiAgYm9yZGVyLWxlZnQtY29sb3I6IHZhcigtLWFnbm9zdGljLXByaW1hcnktZGFyayk7XG59XG4uYWxlcnQtaW5mby5hbGVydC1ib3JkZXItYm90dG9tIHtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1kYXJrKTtcbn1cbi5hbGVydC1pbmZvLmFsZXJ0LWJvcmRlci1yaWdodCB7XG4gIGJvcmRlci1yaWdodC1jb2xvcjogdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1kYXJrKTtcbn1cbi5hbGVydC1pbmZvLmFsZXJ0LWJvcmRlci1hbGwge1xuICBib3JkZXI6IHZhcigtLWZsdWlkLTIpIHNvbGlkIHZhcigtLWFnbm9zdGljLXByaW1hcnktYm9yZGVyKTtcbn1cblxuLmFsZXJ0LWVycm9yIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tYWdub3N0aWMtZXJyb3ItbGlnaHQpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtZXJyb3ItZGFyayk7XG59XG4uYWxlcnQtZXJyb3ItaWNvbiB7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1lcnJvci1kYXJrKTtcbiAgbWFyZ2luLWlubGluZS1lbmQ6IHZhcigtLWZsdWlkLTgpO1xuICAvKiBFbnN1cmVzIG91ciBpY29uIGRvZXNuJ3QgZmxleCBncm93IG9yIHNocmluayAqL1xuICBmbGV4OiAwIDAgdmFyKC0tZmx1aWQtMjQpO1xufVxuLmFsZXJ0LWVycm9yLmFsZXJ0LWJvcmRlci10b3Age1xuICBib3JkZXItdG9wLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1lcnJvci1kYXJrKTtcbn1cbi5hbGVydC1lcnJvci5hbGVydC1ib3JkZXItbGVmdCB7XG4gIGJvcmRlci1sZWZ0LWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1lcnJvci1kYXJrKTtcbn1cbi5hbGVydC1lcnJvci5hbGVydC1ib3JkZXItYm90dG9tIHtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogdmFyKC0tYWdub3N0aWMtZXJyb3ItZGFyayk7XG59XG4uYWxlcnQtZXJyb3IuYWxlcnQtYm9yZGVyLXJpZ2h0IHtcbiAgYm9yZGVyLXJpZ2h0LWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1lcnJvci1kYXJrKTtcbn1cbi5hbGVydC1lcnJvci5hbGVydC1ib3JkZXItYWxsIHtcbiAgYm9yZGVyOiB2YXIoLS1mbHVpZC0yKSBzb2xpZCB2YXIoLS1hZ25vc3RpYy1lcnJvci1ib3JkZXIpO1xufVxuXG4uYWxlcnQtc3VjY2VzcyB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWFnbm9zdGljLWFjdGlvbi1saWdodCk7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1hY3Rpb24tZnJvbSk7XG59XG4uYWxlcnQtc3VjY2Vzcy1pY29uIHtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWF0aW9uLWZyb20pO1xuICBtYXJnaW4taW5saW5lLWVuZDogdmFyKC0tZmx1aWQtOCk7XG4gIC8qIEVuc3VyZXMgb3VyIGljb24gZG9lc24ndCBmbGV4IGdyb3cgb3Igc2hyaW5rICovXG4gIGZsZXg6IDAgMCB2YXIoLS1mbHVpZC0yNCk7XG59XG4uYWxlcnQtc3VjY2Vzcy5hbGVydC1ib3JkZXItdG9wIHtcbiAgYm9yZGVyLXRvcC1jb2xvcjogdmFyKC0tYWdub3N0aWMtYWN0aW9uLWZyb20pO1xufVxuLmFsZXJ0LXN1Y2Nlc3MuYWxlcnQtYm9yZGVyLWxlZnQge1xuICBib3JkZXItbGVmdC1jb2xvcjogdmFyKC0tYWdub3N0aWMtYWN0aW9uLWZyb20pO1xufVxuLmFsZXJ0LXN1Y2Nlc3MuYWxlcnQtYm9yZGVyLWJvdHRvbSB7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6IHZhcigtLWFnbm9zdGljLWFjdGlvbi1mcm9tKTtcbn1cbi5hbGVydC1zdWNjZXNzLmFsZXJ0LWJvcmRlci1yaWdodCB7XG4gIGJvcmRlci1yaWdodC1jb2xvcjogdmFyKC0tYWdub3N0aWMtYWN0aW9uLWZyb20pO1xufVxuLmFsZXJ0LXN1Y2Nlc3MuYWxlcnQtYm9yZGVyLWFsbCB7XG4gIGJvcmRlcjogdmFyKC0tZmx1aWQtMikgc29saWQgdmFyKC0tYWdub3N0aWMtYWN0aW9uLWJvcmRlcik7XG59XG5cbi8qKlxuICogQnV0dG9uIEdyb3Vwc1xuICovXG4uYnRuLWdyb3VwIHtcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG59XG5cbi5idG4tZ3JvdXAgPiBidXR0b24ge1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1hZ25vc3RpYy1idG4tcmFkaXVzLCB2YXIoLS1hZ25vc3RpYy1yYWRpdXMsIDAuMjVyZW0pKTtcbn1cbi5idG4tZ3JvdXAgPiBidXR0b246bm90KDpsYXN0LWNoaWxkKSB7XG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMDtcbiAgbWFyZ2luLWlubGluZS1lbmQ6IC0xcHg7XG59XG4uYnRuLWdyb3VwID4gYnV0dG9uOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcbn1cblxuLypcbiogQmFzZSBCdXR0b24gU3R5bGVcbipcbiogUGxlYXNlIG5vdGUgdGhhdCB3ZSBoYXZlIHR3byB2ZXJzaW9ucyBvZiB0aGlzOlxuKiBgLmJ0bmAgd2hpY2ggZW5jb21wYXNzZXMgYm90aCB0aGUgYmFzZSBhbmQgc2tpbiBzdHlsZXNcbiogYC5idG4tYmFzZWAgYW5kIGBidG4tc2tpbmAuXG4qIFRoZSByZWFzb24gd2UndmUgZG9uZSB0aGlzIGlzIHRvIHByb3ZpZGUgeW91IHdpdGggc29tZSBjb252ZW5pZW5jZSBidXRcbiogYWxzbyBmbGV4aWJpbGl0eS4gTW9zdCB3aWxsIGp1c3Qgd2FudCB0byBhcHBseSBgLmJ0bmAuIEhvd2V2ZXIsIGlmIHRoZVxuKiBiYXNlIHNraW4gb2YgdGhlIGJ1dHRvbiBkb2VzIG5vdCB3b3JrIGZvciB5b3UsIGFub3RoZXIgb3B0aW9uIGlzIHRvIG9ubHlcbiogYXBwbHkgYC5idG4tYmFzZWAgYW5kIHRoZW4gc2V0IHlvdXIgb3duIFwiYnV0dG9uIHNraW5cIi5cbiovXG4uYnRuLWJhc2UsXG4uYnRuIHtcbiAgLyogVE9ETyB0ZXN0IHRoaXMgZmFsbGJhY2sgb3ZlcnJpZGUgc3ludGF4IGlzIGNvcnJlY3QgKi9cbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IHZhcigtLWFnbm9zdGljLXRpbWluZy1tZWRpdW0pO1xufVxuXG4uYnRuLXNraW4sXG4uYnRuIHtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWJ0bi1mb250LWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1kYXJrKSk7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFnbm9zdGljLWJ0bi1iZ2NvbG9yLCB2YXIoLS1hZ25vc3RpYy1ncmF5LWxpZ2h0KSk7XG4gIGJvcmRlci1jb2xvcjogdmFyKC0tYWdub3N0aWMtYnRuLWJnY29sb3IsIHZhcigtLWFnbm9zdGljLWdyYXktbGlnaHQpKTtcbiAgLyogc2VlbXMgbGlrZSBhIHJlYXNvbmFibGUgZGVmYXVsdCBhcyBjaHJvbWUgcGlja3MgYG91dHNldGAgd2hpY2ggcmVzdWx0cyBpbiBhIHdlaXJkIDNkIGVmZmVjdCAqL1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItd2lkdGg6IHZhcigtLWFnbm9zdGljLWJ0bi1ib3JkZXItc2l6ZSwgMXB4KTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWFnbm9zdGljLWJ0bi1mb250LWZhbWlseSwgdmFyKC0tYWdub3N0aWMtZm9udC1mYW1pbHkpKTtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWFnbm9zdGljLWJ0bi1mb250LXdlaWdodCwgNDAwKTtcbiAgZm9udC1zaXplOiB2YXIoLS1hZ25vc3RpYy1idG4tZm9udC1zaXplLCAxcmVtKTtcbiAgLyogdGhpcyBjYW4gYmUgb3ZlcnJpZGVuLCBidXQgaXQgbWlnaHQgbWVzcyB3aXRoIHRoZSBiYWxhbmNlIG9mIHRoZSBidXR0b24gaGVpZ2h0cyBhY3Jvc3MgdmFyaWFudHMgKi9cbiAgbGluZS1oZWlnaHQ6IHZhcigtLWFnbm9zdGljLWxpbmUtaGVpZ2h0LCB2YXIoLS1mbHVpZC0yMCwgMS4yNXJlbSkpO1xuICBwYWRkaW5nLWJsb2NrLXN0YXJ0OiB2YXIoLS1hZ25vc3RpYy12ZXJ0aWNhbC1wYWQsIDAuNXJlbSk7XG4gIHBhZGRpbmctYmxvY2stZW5kOiB2YXIoLS1hZ25vc3RpYy12ZXJ0aWNhbC1wYWQsIDAuNXJlbSk7XG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiB2YXIoLS1hZ25vc3RpYy1zaWRlLXBhZGRpbmcsIDAuNzVyZW0pO1xuICBwYWRkaW5nLWlubGluZS1lbmQ6IHZhcigtLWFnbm9zdGljLXNpZGUtcGFkZGluZywgMC43NXJlbSk7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBvdXRsaW5lOiBub25lO1xufVxuXG4uYnRuOnZpc2l0ZWQge1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtYnRuLWZvbnQtY29sb3IsIHZhcigtLWFnbm9zdGljLWRhcmspKTtcbn1cblxuLmJ0bjpob3ZlciB7XG4gIG9wYWNpdHk6IDAuODU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLmJ0bjphY3RpdmUge1xuICB0ZXh0LXNoYWRvdzogMCAxcHggMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMHM7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMik7XG59XG5cbi5idG46Zm9jdXMge1xuICBib3gtc2hhZG93OiAwIDAgMCAzcHggdmFyKC0tYWdub3N0aWMtZm9jdXMtcmluZy1jb2xvcik7XG4gIC8qIE5lZWRlZCBmb3IgSGlnaCBDb250cmFzdCBtb2RlICovXG4gIG91dGxpbmU6IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyB2YXIoLS1hZ25vc3RpYy10aW1pbmctZmFzdCkgZWFzZS1vdXQ7XG59XG5cbi8qXG4qIERpc2FibGVkIFN0YXRlXG4qXG4qIFRoZSBkaXNhYmxlZCBzdGF0ZSB1c2VzIHRoZSBjbGFzcyAuZGlzYWJsZWQsIGlzLWRpc2FibGVkLFxuKiBhbmQgdGhlIGZvcm0gYXR0cmlidXRlIGRpc2FibGVkPVwiZGlzYWJsZWRcIi5cbiogVGhlIHVzZSBvZiAhaW1wb3J0YW50IGlzIG9ubHkgYWRkZWQgYmVjYXVzZSB0aGlzIGlzIGEgc3RhdGVcbiogdGhhdCBtdXN0IGJlIGFwcGxpZWQgdG8gYWxsIGJ1dHRvbnMgd2hlbiBpbiBhIGRpc2FibGVkIHN0YXRlLlxuKi9cbi5idG4uZGlzYWJsZWQsXG4uYnRuOmRpc2FibGVkIHtcbiAgdG9wOiAwICFpbXBvcnRhbnQ7XG4gIGJhY2tncm91bmQ6IHZhcigtLWFnbm9zdGljLWJ0bi1kaXNhYmxlZC1iZywgdmFyKC0tYWdub3N0aWMtZ3JheS1taWQtZGFyaykpICFpbXBvcnRhbnQ7XG4gIHRleHQtc2hhZG93OiAwIDFweCAxcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAxKSAhaW1wb3J0YW50O1xuICAvKiBwcmltYXJ5LCBzZWNvbmRhcnksIG5hdHVyYWwsIGFsbCBsb29rIHNhbWUgd2hlbiBkaXNhYmxlZDsgYW5kIHdlIGRvbid0IHdhbnQgdG9cbiAgaGF2ZSBhbiBpbmFkdmVydGFudCBsb29raW5nIGJsdWUgcHJpbWFyeSBib3JkZXIgd2hlbiBkaXNhYmxlZCBzbyBpdCdzIHRyYW5zcGFyZW50ICovXG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1idG4tZGlzYWJsZWQtY29sb3IsIHZhcigtLWFnbm9zdGljLWdyYXktZGFyaykpICFpbXBvcnRhbnQ7XG4gIGN1cnNvcjogZGVmYXVsdCAhaW1wb3J0YW50O1xuICBhcHBlYXJhbmNlOiBub25lICFpbXBvcnRhbnQ7XG4gIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgb3BhY2l0eTogMC44ICFpbXBvcnRhbnQ7XG59XG5cbi5idG4tcHJpbWFyeSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFnbm9zdGljLWJ0bi1wcmltYXJ5LCB2YXIoLS1hZ25vc3RpYy1wcmltYXJ5KSk7XG4gIGJvcmRlci1jb2xvcjogdmFyKC0tYWdub3N0aWMtYnRuLXByaW1hcnksIHZhcigtLWFnbm9zdGljLXByaW1hcnkpKTtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWJ0bi1wcmltYXJ5LWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1saWdodCkpO1xufVxuXG4vKiBCb3JkZXIgYW5kIGZvbnQgaXMgcHJpbWFyeS4gV2hlbiBob3ZlcmVkLCB3ZSBpbnZlcnQgd2l0aCBwcmltYXJ5IGJhY2tncm91bmQgYW5kIHdoaXRlIGZvbnQgKi9cbi5idG4tcHJpbWFyeS5idG4tYm9yZGVyZWQge1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtYnRuLXByaW1hcnksIHZhcigtLWFnbm9zdGljLXByaW1hcnkpKTtcbn1cbi5idG4tcHJpbWFyeS5idG4tYm9yZGVyZWQ6aG92ZXIsXG4uYnRuLXByaW1hcnkuYnRuLWJvcmRlcmVkOmZvY3VzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWdub3N0aWMtYnRuLXByaW1hcnksIHZhcigtLWFnbm9zdGljLXByaW1hcnkpKTtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWJ0bi1wcmltYXJ5LWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1saWdodCkpO1xufVxuXG4uYnRuLXByaW1hcnk6dmlzaXRlZCB7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1idG4tcHJpbWFyeS1jb2xvciwgdmFyKC0tYWdub3N0aWMtbGlnaHQpKTtcbn1cblxuLmJ0bi1zZWNvbmRhcnkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1idG4tc2Vjb25kYXJ5LCB2YXIoLS1hZ25vc3RpYy1zZWNvbmRhcnkpKTtcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1idG4tc2Vjb25kYXJ5LCB2YXIoLS1hZ25vc3RpYy1zZWNvbmRhcnkpKTtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWJ0bi1zZWNvbmRhcnktY29sb3IsIHZhcigtLWFnbm9zdGljLWxpZ2h0KSk7XG59XG5cbi8qIEJvcmRlciBhbmQgZm9udCBpcyBzZWNvbmRhcnkuIFdoZW4gaG92ZXJlZCwgd2UgaW52ZXJ0IHdpdGggc2Vjb25kYXJ5IGJhY2tncm91bmQgYW5kIHdoaXRlIGZvbnQgKi9cbi5idG4tc2Vjb25kYXJ5LmJ0bi1ib3JkZXJlZCB7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1idG4tc2Vjb25kYXJ5LCB2YXIoLS1hZ25vc3RpYy1zZWNvbmRhcnkpKTtcbn1cbi5idG4tc2Vjb25kYXJ5LmJ0bi1ib3JkZXJlZDpob3Zlcixcbi5idG4tc2Vjb25kYXJ5LmJ0bi1ib3JkZXJlZDpmb2N1cyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFnbm9zdGljLWJ0bi1zZWNvbmRhcnksIHZhcigtLWFnbm9zdGljLXNlY29uZGFyeSkpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtYnRuLXNlY29uZGFyeS1jb2xvciwgdmFyKC0tYWdub3N0aWMtbGlnaHQpKTtcbn1cblxuLmJ0bi1zZWNvbmRhcnk6dmlzaXRlZCB7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1idG4tc2Vjb25kYXJ5LWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1saWdodCkpO1xufVxuXG4vKlxuKiBSYWlzZWQgQnV0dG9uc1xuKlxuKiBBIGNsYXNzaWMgbG9va2luZyBidXR0b24gdGhhdCBvZmZlcnNcbiogZ3JlYXQgZGVwdGggYW5kIGFmZm9yZGFuY2UuXG4qL1xuLmJ0bi1yYWlzZWQge1xuICBib3JkZXItY29sb3I6IHZhcigtLWFnbm9zdGljLWJ0bi1iZ2NvbG9yLCB2YXIoLS1hZ25vc3RpYy1ncmF5LWxpZ2h0KSk7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJhY2tncm91bmQ6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgbGVmdCBib3R0b20sIGZyb20oI2Y2ZjZmNiksIHRvKCNlMWUxZTEpKTtcbiAgLyogTm90ZSB0aGF0IHdoaWxlIG9uZSBjYW4gY3VzdG9taXplIHNvbWUgb2YgdGhlc2Ugc2xpZ2h0bHksIHdlIGVzc2VudGlhbGx5IGhhdmUgaGFyZC1jb2RlZFxuICBib3ggc2hhZG93IHJnYmEgdmFsdWVzIHNvIHRoZXkgY2FuJ3QgcmVhbGx5IGRvIHNvIGRyYXN0aWNhbGx5IHdoaWNoIGlzIHByb2JhYmx5IGZpbmUgOikgKi9cbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KFxuICAgIHZhcigtLWFnbm9zdGljLWJ0bi1yYWlzZWQtZnJvbSwgdmFyKC0tYWdub3N0aWMtZ3JheS1taWQpKSxcbiAgICB2YXIoLS1hZ25vc3RpYy1idG4tcmFpc2VkLXRvLCB2YXIoLS1hZ25vc3RpYy1ncmF5LWV4dHJhLWxpZ2h0KSlcbiAgKTtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwcHggMXB4IDBweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyksIDAgMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICBib3gtc2hhZG93OiBpbnNldCAwcHggMXB4IDBweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyksIDAgMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xufVxuLmJ0bi1yYWlzZWQ6aG92ZXIsXG4uYnRuLXJhaXNlZDpmb2N1cyB7XG4gIGJhY2tncm91bmQ6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgbGVmdCBib3R0b20sIGZyb20od2hpdGUpLCB0byhnYWluc2Jvcm8pKTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgd2hpdGUsIGdhaW5zYm9ybyk7XG59XG4uYnRuLXJhaXNlZC5hY3RpdmUge1xuICAvKiBUT0RPIC0tIG1heWJlIHRoaXMgc2hvdWxkbid0IGJlIGhhcmQgY29kZWQgKi9cbiAgYmFja2dyb3VuZDogI2VlZWVlZTtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwcHggMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMiksIDBweCAxcHggMHB4IHdoaXRlO1xuICBib3gtc2hhZG93OiBpbnNldCAwcHggMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMiksIDBweCAxcHggMHB4IHdoaXRlO1xufVxuXG4vKlxuKiBSYWlzZWQgUHJpbWFyeSBCdXR0b25zXG4qL1xuLmJ0bi1yYWlzZWQuYnRuLXByaW1hcnkge1xuICBib3JkZXItY29sb3I6IHZhcigtLWFnbm9zdGljLWJ0bi1wcmltYXJ5LXJhaXNlZC10bywgdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1mcm9tKSk7XG4gIGJhY2tncm91bmQ6IC13ZWJraXQtZ3JhZGllbnQoXG4gICAgbGluZWFyLFxuICAgIGxlZnQgdG9wLFxuICAgIGxlZnQgYm90dG9tLFxuICAgIGZyb20odmFyKC0tYWdub3N0aWMtYnRuLXByaW1hcnktcmFpc2VkLWZyb20sIHZhcigtLWFnbm9zdGljLXByaW1hcnktZnJvbSkpKSxcbiAgICB0byh2YXIoLS1hZ25vc3RpYy1idG4tcHJpbWFyeS1yYWlzZWQtdG8sIHZhcigtLWFnbm9zdGljLXByaW1hcnktdG8pKSlcbiAgKTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KFxuICAgIHZhcigtLWFnbm9zdGljLWJ0bi1wcmltYXJ5LXJhaXNlZC1mcm9tLCB2YXIoLS1hZ25vc3RpYy1wcmltYXJ5LWZyb20pKSxcbiAgICB2YXIoLS1hZ25vc3RpYy1idG4tcHJpbWFyeS1yYWlzZWQtdG8sIHZhcigtLWFnbm9zdGljLXByaW1hcnktdG8pKVxuICApO1xufVxuXG4uYnRuLXJhaXNlZC5idG4tcHJpbWFyeTpob3Zlcixcbi5idG4tcmFpc2VkLmJ0bi1wcmltYXJ5OmZvY3VzIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KFxuICAgIHRvIGJvdHRvbSxcbiAgICB2YXIoLS1hZ25vc3RpYy1idG4tcHJpbWFyeS1yYWlzZWQtaG92ZXItZnJvbSwgdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1ob3ZlcikpLFxuICAgIHZhcigtLWFnbm9zdGljLWJ0bi1wcmltYXJ5LXJhaXNlZC10bywgdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1mcm9tKSlcbiAgKTtcbiAgYmFja2dyb3VuZDogLXdlYmtpdC1ncmFkaWVudChcbiAgICBsaW5lYXIsXG4gICAgbGVmdCB0b3AsXG4gICAgbGVmdCBib3R0b20sXG4gICAgZnJvbSh2YXIoLS1hZ25vc3RpYy1idG4tcHJpbWFyeS1yYWlzZWQtaG92ZXItZnJvbSwgdmFyKC0tYWdub3N0aWMtcHJpbWFyeS1ob3ZlcikpKSxcbiAgICB0byh2YXIoLS1hZ25vc3RpYy1idG4tcHJpbWFyeS1yYWlzZWQtdG8sIHZhcigtLWFnbm9zdGljLXByaW1hcnktZnJvbSkpKVxuICApO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG4gICAgdmFyKC0tYWdub3N0aWMtYnRuLXByaW1hcnktcmFpc2VkLWhvdmVyLWZyb20sIHZhcigtLWFnbm9zdGljLXByaW1hcnktaG92ZXIpKSxcbiAgICB2YXIoLS1hZ25vc3RpYy1idG4tcHJpbWFyeS1yYWlzZWQtdG8sIHZhcigtLWFnbm9zdGljLXByaW1hcnktZnJvbSkpXG4gICk7XG59XG5cbi5idG4tcmFpc2VkLmJ0bi1wcmltYXJ5OmFjdGl2ZSxcbi5idG4tcmFpc2VkLmJ0bi1wcmltYXJ5LmFjdGl2ZSB7XG4gIG9wYWNpdHk6IDAuOTtcbiAgYm94LXNoYWRvdzogMCAwIDAgMXB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbn1cblxuLypcbiogUmFpc2VkIFNlY29uZGFyeSBCdXR0b25zXG4qL1xuLmJ0bi1yYWlzZWQuYnRuLXNlY29uZGFyeSB7XG4gIGJvcmRlci1jb2xvcjogdmFyKC0tYWdub3N0aWMtYnRuLXNlY29uZGFyeS1yYWlzZWQtdG8sIHZhcigtLWFnbm9zdGljLXNlY29uZGFyeS10bykpO1xuICBiYWNrZ3JvdW5kOiAtd2Via2l0LWdyYWRpZW50KFxuICAgIGxpbmVhcixcbiAgICBsZWZ0IHRvcCxcbiAgICBsZWZ0IGJvdHRvbSxcbiAgICBmcm9tKHZhcigtLWFnbm9zdGljLWJ0bi1zZWNvbmRhcnktcmFpc2VkLWZyb20sIHZhcigtLWFnbm9zdGljLXNlY29uZGFyeS1mcm9tKSkpLFxuICAgIHRvKHZhcigtLWFnbm9zdGljLWJ0bi1zZWNvbmRhcnktcmFpc2VkLXRvLCB2YXIoLS1hZ25vc3RpYy1zZWNvbmRhcnktdG8pKSlcbiAgKTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KFxuICAgIHZhcigtLWFnbm9zdGljLWJ0bi1zZWNvbmRhcnktcmFpc2VkLWZyb20sIHZhcigtLWFnbm9zdGljLXNlY29uZGFyeS1mcm9tKSksXG4gICAgdmFyKC0tYWdub3N0aWMtYnRuLXNlY29uZGFyeS1yYWlzZWQtdG8sIHZhcigtLWFnbm9zdGljLXNlY29uZGFyeS10bykpXG4gICk7XG59XG5cbi5idG4tcmFpc2VkLmJ0bi1zZWNvbmRhcnk6aG92ZXIsXG4uYnRuLXJhaXNlZC5idG4tc2Vjb25kYXJ5OmZvY3VzIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KFxuICAgIHRvIGJvdHRvbSxcbiAgICB2YXIoLS1hZ25vc3RpYy1idG4tc2Vjb25kYXJ5LXJhaXNlZC1ob3Zlci1mcm9tLCB2YXIoLS1hZ25vc3RpYy1zZWNvbmRhcnktaG92ZXIpKSxcbiAgICB2YXIoLS1hZ25vc3RpYy1idG4tc2Vjb25kYXJ5LXJhaXNlZC10bywgdmFyKC0tYWdub3N0aWMtc2Vjb25kYXJ5LXRvKSlcbiAgKTtcbiAgYmFja2dyb3VuZDogLXdlYmtpdC1ncmFkaWVudChcbiAgICBsaW5lYXIsXG4gICAgbGVmdCB0b3AsXG4gICAgbGVmdCBib3R0b20sXG4gICAgZnJvbSh2YXIoLS1hZ25vc3RpYy1idG4tc2Vjb25kYXJ5LXJhaXNlZC1ob3Zlci1mcm9tLCB2YXIoLS1hZ25vc3RpYy1zZWNvbmRhcnktaG92ZXIpKSksXG4gICAgdG8odmFyKC0tYWdub3N0aWMtYnRuLXNlY29uZGFyeS1yYWlzZWQtdG8sIHZhcigtLWFnbm9zdGljLXNlY29uZGFyeS10bykpKVxuICApO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXG4gICAgdmFyKC0tYWdub3N0aWMtYnRuLXNlY29uZGFyeS1yYWlzZWQtaG92ZXItZnJvbSwgdmFyKC0tYWdub3N0aWMtc2Vjb25kYXJ5LWhvdmVyKSksXG4gICAgdmFyKC0tYWdub3N0aWMtYnRuLXNlY29uZGFyeS1yYWlzZWQtdG8sIHZhcigtLWFnbm9zdGljLXNlY29uZGFyeS10bykpXG4gICk7XG59XG5cbi5idG4tcmFpc2VkLmJ0bi1zZWNvbmRhcnk6YWN0aXZlLFxuLmJ0bi1yYWlzZWQuYnRuLXNlY29uZGFyeS5hY3RpdmUge1xuICBvcGFjaXR5OiAwLjk7XG4gIGJveC1zaGFkb3c6IDAgMCAwIDFweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG59XG5cbi8qKlxuICAqIEJvcmRlciBCdXR0b25zXG4gICovXG4uYnRuLWJvcmRlcmVkIHtcbiAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAgKiBTaXplc1xuICAqL1xuLmJ0bi1sYXJnZSB7XG4gIGZvbnQtc2l6ZTogY2FsYyh2YXIoLS1hZ25vc3RpYy1idG4tZm9udC1zaXplLCAxcmVtKSArIDAuMjVyZW0pO1xuICBoZWlnaHQ6IDNyZW07XG4gIGxpbmUtaGVpZ2h0OiAzcmVtO1xuICBwYWRkaW5nOiAwIDNyZW07XG59XG5cbi5idG4tc21hbGwge1xuICBmb250LXNpemU6IGNhbGModmFyKC0tYWdub3N0aWMtYnRuLWZvbnQtc2l6ZSwgMXJlbSkgLSAwLjI1cmVtKTtcbiAgaGVpZ2h0OiAycmVtO1xuICBsaW5lLWhlaWdodDogMnJlbTtcbiAgcGFkZGluZzogMCAycmVtO1xufVxuXG4vKipcbiAgKiBSb3VuZGVkXG4gICovXG4uYnRuLXJvdW5kZWQge1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1hZ25vc3RpYy1idG4tcmFkaXVzLCB2YXIoLS1hZ25vc3RpYy1yYWRpdXMsIDAuMjVyZW0pKTtcbn1cblxuLmJ0bi1waWxsIHtcbiAgYm9yZGVyLXJhZGl1czogMjAwcHg7XG59XG5cbi8qXG4gICogU2l6ZSBBZGp1c3RtZW50IGZvciBlcXVhbCBoZWlnaHQgJiB3aWR0aCBidXR0b25zXG4gICpcbiAgKiBSZW1vdmUgcGFkZGluZ1xuICAqL1xuLmJ0bi1jaXJjbGUge1xuICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICB3aWR0aDogMi41cmVtO1xuICBoZWlnaHQ6IDIuNXJlbTtcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xufVxuXG4uYnRuLWNpcmNsZS1sYXJnZSB7XG4gIGZvbnQtc2l6ZTogY2FsYyh2YXIoLS1hZ25vc3RpYy1idG4tZm9udC1zaXplLCAxcmVtKSArIDAuMjVyZW0pO1xuICB3aWR0aDogM3JlbTtcbiAgaGVpZ2h0OiAzcmVtO1xufVxuXG4uYnRuLWNpcmNsZS1zbWFsbCB7XG4gIGZvbnQtc2l6ZTogY2FsYyh2YXIoLS1hZ25vc3RpYy1idG4tZm9udC1zaXplLCAxcmVtKSAtIDAuMjVyZW0pO1xuICB3aWR0aDogMnJlbTtcbiAgaGVpZ2h0OiAycmVtO1xufVxuXG4vKipcbiAqIEJ1dHRvbiBCbG9jayAoc3RhY2tlZClcbiAqL1xuLmJ0bi1ibG9jayB7XG4gIHdpZHRoOiAxMDAlO1xufVxuLyogVGhpcyBpcyBhIHV0aWxpdHkgY2xhc3MgdXNlZCBpZiB5b3UgbGl0ZXJhbGx5IHdhbnQgdG8gc3RhY2sgYmxvY2sgYnV0dG9ucyBvbmUgYWZ0ZXIgYW5vdGhlci5cbkFwcGx5IHRoaXMgY2xhc3MgdG8gdGhlIG50aC1vZi10eXBlKDIpIG9ud2FyZHMgdG8gZW5zdXJlIHRoZSBib3JkZXJzIGxpbmUgdXAgcHJvcGVybHkuICovXG4uYnRuLWJsb2NrLWZvbGxvd2luZyB7XG4gIG1hcmdpbi1ibG9jay1zdGFydDogLTFweDtcbn1cblxuLyoqXG4gKiBJbnZpc2libGUgYnV0dG9ucy4gR2VuZXJhbGx5IHVzZWQgZm9yIGEgQ2FuY2VsIG9yIGljb24gYnV0dG9uIHRoYXQgYmVoYXZlcyBsaWtlIGEgYnV0dG9uLFxuICogc2VtYW50aWNhbGx5IGFuZCBmb3IgYTExeSwgYnV0LCBkb2VzIHNvIHdpdGhvdXQgYWxsIHRoZSB0eXBpY2FsIFwiYnV0dG9uIGNocm9tZVwiIGJlaGluZCBpdC5cbiAqL1xuLmJ0bi1ibGFuayB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG59XG4uYnRuLWJsYW5rOmhvdmVyLFxuLmJ0bi1ibGFuazphY3RpdmUsXG4uYnRuLWJsYW5rOmZvY3VzIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgb3V0bGluZTogM3B4IHNvbGlkIHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIENhcmRzXG4gKlxuICogSSBkcmV3IHNvbWUgaW5zcGlyYXRpb24gZnJvbSB0aGUgYXJ0aWNsZSBvbiBtZWRpYS1xdWVyeSBsZXNzIGNhcmRzOlxuICogaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9ob3ctdG8tbWFrZS1hLW1lZGlhLXF1ZXJ5LWxlc3MtY2FyZC1jb21wb25lbnQvXG4gKi9cbi5jYXJkLFxuLmNhcmQtYmFzZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNhcmQsXG4uY2FyZC1za2luIHtcbiAgYm94LXNoYWRvdzogdmFyKC0tYWdub3N0aWMtY2FyZC1ib3hzaGFkb3cxLW9mZnNldC14LCAwKVxuICAgICAgdmFyKC0tYWdub3N0aWMtY2FyZC1ib3hzaGFkb3cxLW9mZnNldC15LCAwLjM3NXJlbSlcbiAgICAgIHZhcigtLWFnbm9zdGljLWNhcmQtYm94c2hhZG93MS1ibHVyLCAwLjU2MjVyZW0pXG4gICAgICB2YXIoLS1hZ25vc3RpYy1jYXJkLWJveHNoYWRvdzEtY29sb3IsIHJnYmEoNiwgNiwgNiwgMC4wNzUpKSxcbiAgICB2YXIoLS1hZ25vc3RpYy1jYXJkLWJveHNoYWRvdzItb2Zmc2V0LXgsIDApIHZhcigtLWFnbm9zdGljLWNhcmQtYm94c2hhZG93Mi1vZmZzZXQteSwgMClcbiAgICAgIHZhcigtLWFnbm9zdGljLWNhcmQtYm94c2hhZG93Mi1ibHVyLCAxcHgpXG4gICAgICB2YXIoLS1hZ25vc3RpYy1jYXJkLWJveHNoYWRvdzItY29sb3IsIHJnYmEoNSwgNSwgNSwgMC4xKSk7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLWFnbm9zdGljLWNhcmQtYm9yZGVyLXJhZGl1cywgdmFyKC0tYWdub3N0aWMtcmFkaXVzLCAwLjI1cmVtKSk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5jYXJkOmhvdmVyLFxuLmNhcmQtc2tpbjpob3ZlciB7XG4gIGJveC1zaGFkb3c6IHZhcigtLWFnbm9zdGljLWNhcmQtYm94c2hhZG93MS1vZmZzZXQteCwgMClcbiAgICAgIHZhcigtLWFnbm9zdGljLWNhcmQtYm94c2hhZG93MS1vZmZzZXQteSwgMC4zNzVyZW0pXG4gICAgICB2YXIoLS1hZ25vc3RpYy1jYXJkLWJveHNoYWRvdzEtYmx1ciwgMC44NzVyZW0pXG4gICAgICB2YXIoLS1hZ25vc3RpYy1jYXJkLWJveHNoYWRvdzEtY29sb3IsIHJnYmEoNCwgNCwgNCwgMC4xKSksXG4gICAgdmFyKC0tYWdub3N0aWMtY2FyZC1ib3hzaGFkb3cyLW9mZnNldC14LCAwKSB2YXIoLS1hZ25vc3RpYy1jYXJkLWJveHNoYWRvdzItb2Zmc2V0LXksIDApXG4gICAgICB2YXIoLS1hZ25vc3RpYy1jYXJkLWJveHNoYWRvdzItYmx1ciwgMnB4KVxuICAgICAgdmFyKC0tYWdub3N0aWMtY2FyZC1ib3hzaGFkb3cyLWNvbG9yLCByZ2JhKDMsIDMsIDMsIDAuMSkpO1xufVxuXG4vKipcbiAqIEFuaW1hdGVzIHRoZSB5IHBvc2l0aW9uIGFuZCBib3ggc2hhZG93IG9uIGhvdmVyXG4gKi9cbi5jYXJkLWFuaW1hdGVkIHtcbiAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyBlYXNlLW91dCA1cyxcbiAgICB0cmFuc2Zvcm0gdmFyKC0tYWdub3N0aWMtdGltaW5nLWZhc3QpXG4gICAgICBjdWJpYy1iZXppZXIoXG4gICAgICAgIHZhcigtLWFnbm9zdGljLWNhcmQtY3ViaWMtMSwgMC4zOSksXG4gICAgICAgIHZhcigtLWFnbm9zdGljLWNhcmQtY3ViaWMtMiwgMC41NzUpLFxuICAgICAgICB2YXIoLS1hZ25vc3RpYy1jYXJkLWN1YmljLTMsIDAuNTY1KSxcbiAgICAgICAgdmFyKC0tYWdub3N0aWMtY2FyZC1jdWJpYy00LCAxKVxuICAgICAgKTtcbn1cbi5jYXJkLWFuaW1hdGVkOmhvdmVyIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKHZhcigtLWFnbm9zdGljLWNhcmQtdHJhbnNsYXRlWS1ob3ZlciwgLTNweCkpO1xuICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IGVhc2Utb3V0IHZhcigtLWFnbm9zdGljLXRpbWluZy1mYXN0KSxcbiAgICB0cmFuc2Zvcm0gdmFyKC0tYWdub3N0aWMtdGltaW5nLXNsb3cpXG4gICAgICBjdWJpYy1iZXppZXIoXG4gICAgICAgIHZhcigtLWFnbm9zdGljLWNhcmQtY3ViaWMtMSwgMC4zOSksXG4gICAgICAgIHZhcigtLWFnbm9zdGljLWNhcmQtY3ViaWMtMiwgMC41NzUpLFxuICAgICAgICB2YXIoLS1hZ25vc3RpYy1jYXJkLWN1YmljLTMsIDAuNTY1KSxcbiAgICAgICAgdmFyKC0tYWdub3N0aWMtY2FyZC1jdWJpYy00LCAxKVxuICAgICAgKTtcbn1cblxuLmNhcmQtc3RhY2tlZCB7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi8qKlxuICogVGhlc2UgcmFkaW8gYW5kIGNoZWNrYm94IGN1c3RvbWl6YXRpb25zIGFyZSBhbiBhbWFsZ2FtYXRpb24gb2YgdmFyaW91cyByZXNvdXJjZXMgSSd2ZSBmb3VuZCBvbiB0aGUgaW50ZXJuZXRzOyBmcm9tIEhleWRvblxuICogUGlja2VyaW5nJ3MgcmFkaW8gYXJ0aWNsZSAoYW5kIGhpcyBJbmNsdXNpdmUgQ29tcG9uZW50cyBib29rKSwgdG8gU2FyYSBTb3VlaWRhbiwgU2NvdHQgTydIYXJhLCBNRE8sIGFuZCBBZHJpYW4gUm9zZWxsaSdzXG4gKiByZXNlYXJjaCBvbiB0aGUgbWF0dGVyIG9mIGluY2x1c2l2ZSBoaWRpbmcgYW5kIGN1c3RvbSByYWRpby9jaGVja2JveCBpbnB1dHMuXG4gKi9cblxuLmNoZWNrYm94LWdyb3VwLFxuLnJhZGlvLWdyb3VwIHtcbiAgLS13aWR0aC0yODogY2FsYyg3ICogdmFyKC0tZmx1aWQtNCkpOyAvKiAxLjc1cmVtLzI4cHggKi9cbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYWdub3N0aWMtY2hlY2tib3gtYm9yZGVyLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1ncmF5LWxpZ2h0KSk7XG4gIHBhZGRpbmc6IHZhcigtLWZsdWlkLTI0KTtcbiAgcGFkZGluZy10b3A6IHZhcigtLWZsdWlkLTE0KTtcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0tZmx1aWQtOCk7XG59XG5cbi5jaGVja2JveC1ncm91cC1sYXJnZSxcbi5yYWRpby1ncm91cC1sYXJnZSB7XG4gIHBhZGRpbmc6IHZhcigtLXdpZHRoLTI4KTtcbiAgcGFkZGluZy10b3A6IHZhcigtLWZsdWlkLTE2KTtcbn1cblxuLmNoZWNrYm94LWxlZ2VuZCxcbi5yYWRpby1sZWdlbmQge1xuICBwYWRkaW5nOiB2YXIoLS1mbHVpZC0yKSB2YXIoLS1mbHVpZC0xNCk7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLWZsdWlkLTIpO1xufVxuXG4vKiBIaWRpbmcgdGVjaG5pcXVlIGZyb20gaHR0cHM6Ly93d3cuc2FyYXNvdWVpZGFuLmNvbS9ibG9nL2luY2x1c2l2ZWx5LWhpZGluZy1hbmQtc3R5bGluZy1jaGVja2JveGVzLWFuZC1yYWRpby1idXR0b25zL1xuKi9cbi5jaGVja2JveCxcbi5yYWRpbyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IHZhcigtLWZsdWlkLTE0KTtcbiAgaGVpZ2h0OiB2YXIoLS1mbHVpZC0xNCk7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5jaGVja2JveC1zbWFsbCxcbi5yYWRpby1zbWFsbCB7XG4gIHdpZHRoOiB2YXIoLS1mbHVpZC0xMik7XG4gIGhlaWdodDogdmFyKC0tZmx1aWQtMTIpO1xufVxuXG4uY2hlY2tib3gtbGFyZ2UsXG4ucmFkaW8tbGFyZ2Uge1xuICB3aWR0aDogdmFyKC0tZmx1aWQtMTYpO1xuICBoZWlnaHQ6IHZhcigtLWZsdWlkLTE2KTtcbn1cblxuLmNoZWNrYm94LWxhYmVsLXdyYXAsXG4ucmFkaW8tbGFiZWwtd3JhcCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHVzZXItc2VsZWN0OiBub25lO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1mbHVpZC0zNik7XG59XG5cbi5jaGVja2JveC1sYWJlbC13cmFwLWlubGluZSxcbi5yYWRpby1sYWJlbC13cmFwLWlubGluZSB7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xufVxuXG4uY2hlY2tib3gtbGFiZWwtd3JhcC1pbmxpbmU6bm90KDpsYXN0LWNoaWxkKSxcbi5yYWRpby1sYWJlbC13cmFwLWlubGluZTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgbWFyZ2luLWlubGluZS1lbmQ6IHZhcigtLWZsdWlkLTgpO1xufVxuXG4vKiBUaGVzZSBhcmUgbm90IGFjdHVhbCA8bGFiZWw+IGVsZW1lbnRzIGJ1dCB0aGUgPHNwYW4+IGxhYmVsIGNvcHkgZWxlbWVudHMgKi9cbi5jaGVja2JveC1sYWJlbCxcbi5yYWRpby1sYWJlbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cblxuLyogVGhlIGNoZWNrbWFyayBpdHNlbGYgKi9cbi5jaGVja2JveC1sYWJlbDphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IHZhcigtLWZsdWlkLTYpO1xuICB0b3A6IHZhcigtLWZsdWlkLTEwKTtcbiAgd2lkdGg6IHZhcigtLWZsdWlkLTYpO1xuICBoZWlnaHQ6IHZhcigtLWZsdWlkLTEyKTtcbiAgYm9yZGVyOiBzb2xpZCB3aGl0ZTtcbiAgYm9yZGVyLXdpZHRoOiAwIHZhcigtLWZsdWlkLTIpIHZhcigtLWZsdWlkLTIpIDA7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBjZW50ZXI7XG4gIHRyYW5zZm9ybTogcm90YXRlKDQwZGVnKSBzY2FsZSgwKTtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYm9yZGVyLCBiYWNrZ3JvdW5kLWNvbG9yLCB0cmFuc2Zvcm07XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IHZhcigtLWFnbm9zdGljLXRpbWluZy1mYXN0KTtcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2UtaW4tb3V0O1xufVxuLmNoZWNrYm94LWxhYmVsOmJlZm9yZSxcbi5yYWRpby1sYWJlbDpiZWZvcmUge1xuICBjb250ZW50OiAnJztcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4taW5saW5lLWVuZDogdmFyKC0tYWdub3N0aWMtY2hlY2tib3gtc3BhY2luZy1lbmQsIDAuNzVyZW0pO1xuICB0cmFuc2l0aW9uOiB2YXIoLS1hZ25vc3RpYy10aW1pbmctZmFzdCkgZWFzZS1vdXQgYWxsO1xufVxuXG4vKiBTaW5jZSB3ZSBidWlsZCB1cCB0aGUgcmFkaW8gc2l6ZSBvdXR3YXJkbHksIGl0J3MgbmF0dXJhbGx5IGxhcmdlciB0aGVuIHRoZSBjaGVja2JveGVzXG5zbyB3ZSBhZGQgYSBtdWx0aXBseWVyIHRvIGV2ZW4gdGhvc2Ugb3V0IGluaXRpYWxseSAqL1xuLmNoZWNrYm94LWxhYmVsOmJlZm9yZSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWFnbm9zdGljLWNoZWNrYm94LWJvcmRlci1jb2xvciwgdmFyKC0tYWdub3N0aWMtZ3JheS1saWdodCkpO1xuICB3aWR0aDogdmFyKC0tZmx1aWQtMTYpO1xuICBoZWlnaHQ6IHZhcigtLWZsdWlkLTE2KTtcbiAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyB2YXIoLS1hZ25vc3RpYy10aW1pbmctZmFzdCkgZWFzZS1vdXQ7XG59XG5cbi5yYWRpby1sYWJlbDpiZWZvcmUge1xuICB3aWR0aDogdmFyKC0tZmx1aWQtMTQpO1xuICBoZWlnaHQ6IHZhcigtLWZsdWlkLTE0KTtcbiAgdmVydGljYWwtYWxpZ246IGNhbGMoLTEgKiB2YXIoLS1mbHVpZC0yKSk7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYm9yZGVyOiB2YXIoLS1mbHVpZC0yKSBzb2xpZCB2YXIoLS1hZ25vc3RpYy1jaGVja2JveC1saWdodCwgdmFyKC0tYWdub3N0aWMtbGlnaHQpKTtcbiAgYm94LXNoYWRvdzogMCAwIDAgdmFyKC0tZmx1aWQtMikgdmFyKC0tYWdub3N0aWMtY2hlY2tib3gtYm9yZGVyLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1ncmF5LWxpZ2h0KSk7XG4gIHRyYW5zaXRpb246IGJveC1zaGFkb3cgdmFyKC0tYWdub3N0aWMtdGltaW5nLWZhc3QpIGVhc2Utb3V0O1xufVxuXG4uY2hlY2tib3gtbGFiZWwtc21hbGw6YWZ0ZXIge1xuICBsZWZ0OiBjYWxjKDEuMjUgKiB2YXIoLS1mbHVpZC00KSk7XG59XG4uY2hlY2tib3gtbGFiZWwtc21hbGw6YmVmb3JlIHtcbiAgd2lkdGg6IHZhcigtLWZsdWlkLTE0KTtcbiAgaGVpZ2h0OiB2YXIoLS1mbHVpZC0xNCk7XG59XG5cbi5yYWRpby1sYWJlbC1zbWFsbDpiZWZvcmUge1xuICB3aWR0aDogdmFyKC0tZmx1aWQtMTIpO1xuICBoZWlnaHQ6IHZhcigtLWZsdWlkLTEyKTtcbn1cblxuLmNoZWNrYm94LWxhYmVsLWxhcmdlOmFmdGVyIHtcbiAgbGVmdDogY2FsYygxLjc1ICogdmFyKC0tZmx1aWQtNCkpO1xufVxuXG4uY2hlY2tib3gtbGFiZWwtbGFyZ2U6YmVmb3JlIHtcbiAgd2lkdGg6IHZhcigtLWZsdWlkLTE4KTtcbiAgaGVpZ2h0OiB2YXIoLS1mbHVpZC0xOCk7XG59XG5cbi5yYWRpby1sYWJlbC1sYXJnZTpiZWZvcmUge1xuICB3aWR0aDogdmFyKC0tZmx1aWQtMTYpO1xuICBoZWlnaHQ6IHZhcigtLWZsdWlkLTE2KTtcbn1cblxuLyogdGhlIGNoZWNrZWQgc3R5bGUgdXNpbmcgdGhlIDpjaGVja2VkIHBzZXVkbyBjbGFzcyAqL1xuLnJhZGlvOmNoZWNrZWQgKyAucmFkaW8tbGFiZWw6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tYWdub3N0aWMtY2hlY2tib3gtZmlsbC1jb2xvciwgIzA4YTg4MCk7XG4gIGJveC1zaGFkb3c6IDAgMCAwIHZhcigtLWZsdWlkLTIpIHZhcigtLWFnbm9zdGljLWNoZWNrYm94LWJvcmRlci1jb2xvciwgdmFyKC0tYWdub3N0aWMtZ3JheS1saWdodCkpO1xufVxuXG4ucmFkaW86Zm9jdXMgKyAucmFkaW8tbGFiZWw6YmVmb3JlIHtcbiAgYm94LXNoYWRvdzogMCAwIDAgdmFyKC0tZmx1aWQtMikgdmFyKC0tYWdub3N0aWMtY2hlY2tib3gtYm9yZGVyLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1ncmF5LWxpZ2h0KSksXG4gICAgMCAwIDAgY2FsYygxLjUgKiB2YXIoLS1mbHVpZC0yKSkgd2hpdGUsXG4gICAgMCAwIDAgY2FsYygyLjI1ICogdmFyKC0tZmx1aWQtMikpIHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctY29sb3IpO1xufVxuXG4uY2hlY2tib3g6Zm9jdXMgKyAuY2hlY2tib3gtbGFiZWw6YmVmb3JlIHtcbiAgYm94LXNoYWRvdzogMCAwIDAgM3B4IHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctY29sb3IpO1xuICBvdXRsaW5lOiAzcHggc29saWQgdHJhbnNwYXJlbnQ7XG59XG5cbi5jaGVja2JveDpjaGVja2VkICsgLmNoZWNrYm94LWxhYmVsOmFmdGVyIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDBkZWcpIHNjYWxlKDEpO1xufVxuLmNoZWNrYm94OmNoZWNrZWQgKyAuY2hlY2tib3gtbGFiZWw6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tYWdub3N0aWMtY2hlY2tib3gtZmlsbC1jb2xvciwgIzA4YTg4MCk7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWFnbm9zdGljLWNoZWNrYm94LWZpbGwtY29sb3IsICMwOGE4ODApO1xufVxuXG4vKipcbiAqIENvbnN1bWVyIHN0eWxlcyA8bGVnZW5kPiB0aGVtc2VsdmVzLCBhbmQgY2FuIG9wdCB0byB1c2UgdGhlIC5zY3JlZW5yZWFkZXItb25seSBmcm9tXG4gKiB1dGlsaXRpZXMuY3NzIGlmIHRoZXkncmUgZGVzaWduIHJlcXVpcmVzIGl0LlxuICovXG4uY2hlY2tib3gtZ3JvdXAtaGlkZGVuLFxuLnJhZGlvLWdyb3VwLWhpZGRlbiB7XG4gIGJvcmRlcjogMDtcbiAgbWFyZ2luLWJsb2NrLXN0YXJ0OiAwO1xuICBtYXJnaW4taW5saW5lLXN0YXJ0OiAwO1xuICBtYXJnaW4taW5saW5lLWVuZDogMDtcbiAgbWFyZ2luLWJsb2NrLWVuZDogMDtcbiAgcGFkZGluZy1ibG9jay1zdGFydDogMDtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDA7XG4gIHBhZGRpbmctaW5saW5lLWVuZDogMDtcbiAgcGFkZGluZy1ibG9jay1lbmQ6IDA7XG59XG5cbi8qIFRhcmdldHMgYm90aCB0aGUgbGFiZWwgY29udGFpbmVyIGFuZCB0aGUgc3BhbiBsYWJlbCB0aGF0IGlzIHVzZWRcbnRvIHN0eWxlIHRoZSBjdXN0b20gcmFkaW8gLyBjaGVja2JveC4gTm90ZSBpdCBkb2VzIE5PVCB0YXJnZXQgdGhlIGlucHV0XG5pdHNlbGYuICovXG4uY2hlY2tib3hbZGlzYWJsZWRdICsgLmNoZWNrYm94LWxhYmVsLFxuLnJhZGlvW2Rpc2FibGVkXSArIC5yYWRpby1sYWJlbCxcbi5jaGVja2JveC1sYWJlbC13cmFwLmRpc2FibGVkLFxuLnJhZGlvLWxhYmVsLXdyYXAuZGlzYWJsZWQsXG4uY2hlY2tib3gtbGFiZWwtd3JhcC1pbmxpbmUuZGlzYWJsZWQsXG4ucmFkaW8tbGFiZWwtd3JhcC1pbmxpbmUuZGlzYWJsZWQge1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtaW5wdXQtZGlzYWJsZWQtY29sb3IsIHZhcigtLWFnbm9zdGljLWRpc2FibGVkLWNvbG9yKSkgIWltcG9ydGFudDtcbiAgYXBwZWFyYW5jZTogbm9uZSAhaW1wb3J0YW50O1xuICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQgIWltcG9ydGFudDtcbiAgb3BhY2l0eTogMC44ICFpbXBvcnRhbnQ7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kICgtbXMtaGlnaC1jb250cmFzdDogYWN0aXZlKSB7XG4gIC8qIEhpZ2ggY29udHJhc3QgbW9kZSBvdXRsaW5lIGhhY2tzICovXG4gIC5jaGVja2JveC1sYWJlbC13cmFwLmRpc2FibGVkLFxuICAucmFkaW8tbGFiZWwtd3JhcC5kaXNhYmxlZCxcbiAgLmNoZWNrYm94LWxhYmVsLXdyYXAtaW5saW5lLmRpc2FibGVkLFxuICAucmFkaW8tbGFiZWwtd3JhcC1pbmxpbmUuZGlzYWJsZWQge1xuICAgIG91dGxpbmU6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgfVxufVxuXG4uaGVhZGVyLFxuLmhlYWRlci1iYXNlIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5oZWFkZXItYmFzZSBpbWcsXG4uaGVhZGVyIGltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4uaGVhZGVyLFxuLmhlYWRlci1za2luIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWdub3N0aWMtaGVhZGVyLWJhY2tncm91bmQtY29sb3IsIHZhcigtLWFnbm9zdGljLWxpZ2h0KSk7XG4gIGJveC1zaGFkb3c6IHZhcigtLWFnbm9zdGljLWhlYWRlci1ib3gtc2hhZG93LWhvciwgMCkgdmFyKC0tYWdub3N0aWMtaGVhZGVyLWJveC1zaGFkb3ctdmVyLCAxcHgpXG4gICAgdmFyKC0tYWdub3N0aWMtaGVhZGVyLWJveC1zaGFkb3ctYmx1ciwgNXB4KSB2YXIoLS1hZ25vc3RpYy1oZWFkZXItYm94LXNoYWRvdy1zcHJlYWQsIDJweClcbiAgICB2YXIoLS1hZ25vc3RpYy1oZWFkZXItYm94LXNoYWRvdy1jb2xvciwgcmdiYSgwLCAwLCAwLCAwLjEpKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWFnbm9zdGljLWhlYWRlci1mb250LWZhbWlseSwgdmFyKC0tYWdub3N0aWMtZm9udC1mYW1pbHkpKTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLWFnbm9zdGljLWhlYWRlci1ib3JkZXItY29sb3IsIHZhcigtLWFnbm9zdGljLWdyYXktbGlnaHQpKTtcbiAgcGFkZGluZy1ibG9jay1zdGFydDogdmFyKC0tYWdub3N0aWMtdmVydGljYWwtcGFkLCAwLjVyZW0pO1xuICBwYWRkaW5nLWJsb2NrLWVuZDogdmFyKC0tYWdub3N0aWMtdmVydGljYWwtcGFkLCAwLjVyZW0pO1xuICBwYWRkaW5nLWlubGluZS1zdGFydDogdmFyKC0tYWdub3N0aWMtc2lkZS1wYWRkaW5nLCAwLjc1cmVtKTtcbiAgcGFkZGluZy1pbmxpbmUtZW5kOiB2YXIoLS1hZ25vc3RpYy1zaWRlLXBhZGRpbmcsIDAuNzVyZW0pO1xufVxuXG4uaGVhZGVyLWNvbnRlbnQge1xuICB3aWR0aDogdmFyKC0tYWdub3N0aWMtaGVhZGVyLWNvbnRlbnQtd2lkdGgsIDk2MHB4KTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cblxuLyoqXG4gKiBJZiB5b3UgbWFrZSB5b3VyIGhlYWRlciBzdGlja3ksIHlvdSBzaG91bGQgbGlrZWx5IGNvbnNpZGVyIHRoYXQganVtcCBsaW5rc1xuICogZS5nLiA8aDEgaWQ9XCJKdW1wLUhlcmVcIj4uLi4gd2lsbCB0dWNrIHVuZGVybmVhdGggdGhlIGhlYWRlciEgSGVyZSdzIGEgcmVjb21tZW5kYXRpb25cbiAqIGZvciBob3cgdG8gY2lyY3VtbmF2aWdhdGUgdGhpcyBpc3N1ZSB2aWEgc2Nyb2xsLW1hcmdpbi10b3A6XG4gIGgxW2lkXSxcbiAgaDJbaWRdLFxuICBoM1tpZF0sXG4gIGg0W2lkXSxcbiAgaDVbaWRdLFxuICBoNltpZF0ge1xuICAgIHNjcm9sbC1tYXJnaW4tdG9wOiA4MHB4O1xuICB9XG4gKiBJbiB0aGlzIGNhc2UgSSBoYXZlIGEgNjRweCB0YWxsIGhlYWRlciBzbyBJJ3ZlIGFkZGVkIDE2cHggZm9yIGNsZWFyYW5jZSAtLSB5b3UnbGwgbmVlZFxuICogdG8gY3VyYXRlIHlvdXIgb3duIHVzZSBjYXNlLCBidXQgc2Nyb2xsLW1hcmdpbi10b3AgaXMgc3VwZXIgdXNlZnVsIGZvciB0aGlzIHVzZSBjYXNlLlxuICovXG5cbi5oZWFkZXItc3RpY2t5IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDA7XG4gIHotaW5kZXg6IDEwO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTYwcHgpIHtcbiAgLmhlYWRlci1zdGlja3kge1xuICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gIH1cblxuICAuaGVhZGVyLWNvbnRlbnQge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB9XG59XG5cbi8qIEdvZXMgb24gdGhlIDx1bD4gKi9cbi5oZWFkZXItbmF2IHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTYwcHgpIHtcbiAgLmhlYWRlci1uYXYge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIH1cbn1cblxuLmhlYWRlci1uYXYtaXRlbSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cbi5oZWFkZXItbmF2LWl0ZW06bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1pbmxpbmUtZW5kOiBpbml0aWFsO1xuICBtYXJnaW4tYmxvY2stZW5kOiB2YXIoLS1mbHVpZC04KTtcbn1cblxuLmhlYWRlci1uYXYtaXRlbSBhIHtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWhlYWRlci1jb2xvciwgdmFyKC0tYWdub3N0aWMtZm9udC1jb2xvcikpO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA5NjBweCkge1xuICAuaGVhZGVyLW5hdi1pdGVtOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgIG1hcmdpbi1pbmxpbmUtZW5kOiB2YXIoLS1hZ25vc3RpYy1oZWFkZXItbmF2LXNwYWNpbmcsIHZhcigtLWZsdWlkLTMyKSk7XG4gICAgbWFyZ2luLWJsb2NrLWVuZDogaW5pdGlhbDtcbiAgfVxufVxuXG4uaW5wdXQtYmFzZSxcbi5pbnB1dCB7XG4gIC8qIE5vdGUgdGhpcyBjYW5ub3QgYmUgdXNlci1zZWxlY3Q6IG5vbmUgZWxzZSBtb2JpbGUgc2FmYXJpIHdvbid0IGFjY2VwdCBpbnB1dDpcbiAgaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDk4ODkwMDMvY2Fubm90LXdyaXRlLWludG8taW5wdXQtZmllbGQtb24tc2FmYXJpLzQ5OTAxMDY5XG4gICAqL1xuICB1c2VyLXNlbGVjdDogaW5pdGlhbDtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogVXNlIHRoZSBzYW1lIGNvbG9yIGZvciB0aGUgY3Vyc29yICovXG4gIGNhcmV0LWNvbG9yOiBjdXJyZW50Q29sb3I7XG59XG5cbi5sYWJlbCxcbi5sYWJlbC1iYXNlIHtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbn1cblxuLyogRWxlY3RpbmcgdG8gc2NvcGUgdGhlc2UgYXMgb3Bwb3NlZCB0byBkb2luZyA6cm9vdCBsZXZlbCBkZWZpbml0aW9ucyAqL1xuLmZpZWxkLWhlbHAsXG4uZmllbGQtaGVscC1sYXJnZSxcbi5maWVsZC1oZWxwLXNtYWxsLFxuLmZpZWxkLWVycm9yLFxuLmZpZWxkLWVycm9yLWxhcmdlLFxuLmZpZWxkLWVycm9yLXNtYWxsLFxuLmxhYmVsLXNraW4sXG4ubGFiZWwsXG4uaW5wdXQtYWRkb24tY29udGFpbmVyLFxuLmlucHV0LXNtYWxsLFxuLmlucHV0LWxhcmdlLFxuLmlucHV0LXNraW4sXG4uaW5wdXQtdW5kZXJsaW5lZCxcbi5pbnB1dC11bmRlcmxpbmVkLWJnLFxuLmlucHV0IHtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWZvbnQtY29sb3IsIHZhcigtLWFnbm9zdGljLWRhcmspKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWFnbm9zdGljLWZvbnQtZmFtaWx5KTtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWFnbm9zdGljLWZvbnQtd2VpZ2h0LCAzMDApO1xuICBmb250LXNpemU6IHZhcigtLWFnbm9zdGljLWZvbnQtc2l6ZSwgMXJlbSk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1hZ25vc3RpYy1saW5lLWhlaWdodCwgdmFyKC0tZmx1aWQtMjAsIDEuMjVyZW0pKTtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cblxuLmlucHV0LXNraW4sXG4uaW5wdXQge1xuICAvKiBzZWVtcyBsaWtlIGEgcmVhc29uYWJsZSBkZWZhdWx0IGFzIGNocm9tZSBwaWNrcyBgb3V0c2V0YCB3aGljaCByZXN1bHRzIGluIGEgd2VpcmQgM2QgZWZmZWN0ICovXG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIC8qIHRoaXMgY2FuIGJlIG92ZXJyaWRlbiwgYnV0IGl0IG1pZ2h0IG1lc3Mgd2l0aCB0aGUgYmFsYW5jZSBvZiB0aGUgYnV0dG9uIGhlaWdodHMgYWNyb3NzIHZhcmlhbnRzICovXG4gIGJvcmRlci13aWR0aDogdmFyKC0tYWdub3N0aWMtaW5wdXQtYm9yZGVyLXNpemUsIDFweCk7XG4gIGJvcmRlci1jb2xvcjogdmFyKC0tYWdub3N0aWMtaW5wdXQtYm9yZGVyLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1ncmF5LWxpZ2h0KSk7XG4gIC8qIHRoZXNlIGNhbiBiZSBvdmVycmlkZW4sIGJ1dCBpdCBtaWdodCBtZXNzIHdpdGggdGhlIGJhbGFuY2Ugb2YgdGhlIGlucHV0aGVpZ2h0cyBhY3Jvc3MgdmFyaWFudHMgKi9cbiAgcGFkZGluZy1ibG9jay1zdGFydDogdmFyKC0tYWdub3N0aWMtaW5wdXQtdmVydGljYWwtcGFkLCAwLjVyZW0pO1xuICBwYWRkaW5nLWJsb2NrLWVuZDogdmFyKC0tYWdub3N0aWMtaW5wdXQtdmVydGljYWwtcGFkLCAwLjVyZW0pO1xuICBwYWRkaW5nLWlubGluZS1zdGFydDogdmFyKC0tYWdub3N0aWMtaW5wdXQtc2lkZS1wYWRkaW5nLCAwLjc1cmVtKTtcbiAgcGFkZGluZy1pbmxpbmUtZW5kOiB2YXIoLS1hZ25vc3RpYy1pbnB1dC1zaWRlLXBhZGRpbmcsIDAuNzVyZW0pO1xuXG4gIC8qIE5vdGUgd2Ugb25seSB3YW50IHRvIHNldCBwcm9wZXJ0aWVzIHRoYXQgd2UgYWN0dWFsbHkgd2FudFxuICB0byB0cmFuc2l0aW9uIGluLiBGb3IgZXhhbXBsZSwgaWYgd2UgdHJhbnNpdGlvbiBcImFsbFwiLCB0aGVcbiAgaW5wdXRzIHdpbGwgXCJncm93IGluXCIgb24gcGFnZSBsb2Fk4oCUbm90IGEgaGFwcHkgZWZmZWN0IDopICovXG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IGJveC1zaGFkb3c7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IHZhcigtLWFnbm9zdGljLWlucHV0LXRpbWluZywgdmFyKC0tYWdub3N0aWMtdGltaW5nLW1lZGl1bSkpO1xufVxuXG4ubGFiZWwge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIC8qIFByb3ZpZGVkIC0tYWdub3N0aWMtaW5wdXQtdmVydGljYWwtcGFkIGlzbid0IG92ZXJyaWRlbiB3ZSdsbCBnZXQgMjBweFxuICBsYWJlbCB3L2EgNnB4IG1hcmdpbiB0aGVuIGEgMzhweCBpbnB1dCA9IDY0IHdoaWNoIGlzIG9uIHRoZSA4cHQgZ3JpZCAqL1xuICBtYXJnaW4tYmxvY2stc3RhcnQ6IDA7XG4gIG1hcmdpbi1pbmxpbmUtc3RhcnQ6IDA7XG4gIG1hcmdpbi1pbmxpbmUtZW5kOiAwO1xuICBtYXJnaW4tYmxvY2stZW5kOiB2YXIoLS1hZ25vc3RpYy1pbnB1dC1sYWJlbC1wYWQsIDAuMzc1cmVtKTtcbiAgdmVydGljYWwtYWxpZ246IGluaXRpYWw7XG59XG5cbi8qIFJlc2V0IGxhYmVscyBhbmQgZmllbGQgZXJyb3JzIHRvIGJlIDJweCBsZXNzIHRoZW4gaW5wdXQgZm9udCBzaXplICovXG4uZmllbGQtaGVscCxcbi5maWVsZC1lcnJvcixcbi5sYWJlbCxcbi5sYWJlbC1za2luIHtcbiAgZm9udC1zaXplOiBjYWxjKHZhcigtLWFnbm9zdGljLWZvbnQtc2l6ZSwgMXJlbSkgLSAycHgpO1xufVxuXG4ubGFiZWwtaW5saW5lLFxuLmlucHV0LWlubGluZSB7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG4vKiBXaGVuIGlubGluZWQsIHRoZSBtYXJnaW4tYmxvY2stZW5kIHdpbGwgdGhyb3cgdGhlIGxhYmVsIG9mZi1jZW50ZXIgd2l0aCBhZGphY2VudCBpbnB1dCAqL1xuLmxhYmVsLWlubGluZSB7XG4gIG1hcmdpbi1ibG9jay1zdGFydDogMDtcbiAgbWFyZ2luLWJsb2NrLWVuZDogMDtcbiAgbWFyZ2luLWlubGluZS1zdGFydDogMDtcbiAgbWFyZ2luLWlubGluZS1lbmQ6IHZhcigtLWFnbm9zdGljLWlucHV0LXNpZGUtcGFkZGluZywgMC43NXJlbSk7XG59XG5cbi8qKlxuKiBQbGFjZWhvbGRlclxuKi9cbi5pbnB1dDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIG9wYWNpdHk6IDAuNTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSB2YXIoLS1hZ25vc3RpYy10aW1pbmctZmFzdCkgZWFzZS1vdXQ7XG59XG5cbi5pbnB1dDo6LW1vei1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIG9wYWNpdHk6IDAuNTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSB2YXIoLS1hZ25vc3RpYy10aW1pbmctZmFzdCkgZWFzZS1vdXQ7XG59XG5cbi5pbnB1dDo6LW1zLXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgb3BhY2l0eTogMC41O1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IHZhcigtLWFnbm9zdGljLXRpbWluZy1mYXN0KSBlYXNlLW91dDtcbn1cblxuLmlucHV0Oi1tcy1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIG9wYWNpdHk6IDAuNTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSB2YXIoLS1hZ25vc3RpYy10aW1pbmctZmFzdCkgZWFzZS1vdXQ7XG59XG5cbi8qKlxuKiBVbmRlcmxpbmVkIGlucHV0c1xuKi9cbi5pbnB1dC11bmRlcmxpbmVkIHtcbiAgYm9yZGVyLXRvcDogMDtcbiAgYm9yZGVyLWxlZnQ6IDA7XG4gIGJvcmRlci1yaWdodDogMDtcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1pbnB1dC11bmRlcmxpbmVkLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1ncmF5LW1pZC1kYXJrKSk7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4uaW5wdXQtdW5kZXJsaW5lZC1iZyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFnbm9zdGljLWlucHV0LXVuZGVybGluZWQtYmctY29sb3IsIHZhcigtLWFnbm9zdGljLWdyYXktZXh0cmEtbGlnaHQpKTtcbn1cblxuLyoqXG4qIFJvdW5kZWQgaW5wdXRzXG4qL1xuLmlucHV0LXJvdW5kZWQge1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1hZ25vc3RpYy1yYWRpdXMsIDAuMjVyZW0pO1xufVxuXG4vKipcbiAqIEVycm9yc1xuICogV2UgcHJvdmlkZSBhIGNsYXNzLWJhc2VkIGFwcHJvYWNoIHRvIHNldHRpbmcgZXJyb3JzIHdoaWNoIG1lYW5zIHdlIGRvXG4gKiBub3Qgc3VwcG9ydCA6aW52YWxpZCwgc28gaXQgcmVxdWlyZXMgY3VzdG9tIHVzZSBvZiBodG1sNCB2YWxpZGF0aW9uIEFQSVxuICogKHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL0xlYXJuL0Zvcm1zL0Zvcm1fdmFsaWRhdGlvblxuICogb2YgdGhlIGV4YW1wbGUgaW4gY29ycmVzcG9uZGluZyBpbnB1dC5odG1sIGZpbGUpLiBUaGUgcmVhc29uIEkgZWxlY3RlZCB0b1xuICogbm90IGluY2x1ZGUgOmludmFsaWQsIGlzIGl0IHNlZW1zIHRvIHJlc3VsdCBpbiBcInNob3V0aW5nXCIgYXQgdGhlIHVzZXIgYXNcbiAqIEkgZGlkIG5vdCBmaW5kIGFuIGVhc3kgd2F5IHRvIG9ubHkga2ljayBpbiBlcnJvcnMgYWZ0ZXIgYSBjZXJ0YWluIG51bWJlclxuICogb2YgY2hhcmFjdGVycyBoYXZlIGJlZW4gdHlwZSAoYmx1ciBpcyBhY3R1YWxseSBiZXR0ZXIgYnV0IEkgZGlkIG5vdFxuICogaW1wbGVtZW50IHRoYXQgaW4gdGhlIGNvbnRyaXZlZCBleGFtcGxlKS5cbiAqL1xuLmxhYmVsLWVycm9yIHtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWlucHV0LWVycm9yLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1lcnJvcikpO1xufVxuLmlucHV0LWVycm9yIHtcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1pbnB1dC1lcnJvci1jb2xvciwgdmFyKC0tYWdub3N0aWMtZXJyb3IpKTtcbn1cblxuLmxhYmVsLWVycm9yLFxuLmZpZWxkLWVycm9yLFxuLmZpZWxkLWVycm9yLXNtYWxsLFxuLmZpZWxkLWVycm9yLWxhcmdlIHtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLWlucHV0LWVycm9yLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1lcnJvcikpO1xufVxuXG4uZmllbGQtaGVscCxcbi5maWVsZC1oZWxwLXNtYWxsLFxuLmZpZWxkLWhlbHAtbGFyZ2Uge1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtaW5wdXQtaGVscC1jb2xvciwgdmFyKC0tYWdub3N0aWMtZ3JheS1kYXJrKSk7XG59XG5cbi5maWVsZC1oZWxwLFxuLmZpZWxkLWhlbHAtc21hbGwsXG4uZmllbGQtaGVscC1sYXJnZSxcbi5maWVsZC1lcnJvcixcbi5maWVsZC1lcnJvci1zbWFsbCxcbi5maWVsZC1lcnJvci1sYXJnZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1ibG9jay1zdGFydDogY2FsYyh2YXIoLS1hZ25vc3RpYy1pbnB1dC12ZXJ0aWNhbC1wYWQsIDAuNXJlbSkgLyAyKTtcbn1cblxuLyoqXG4gICogU2l6ZXNcbiAgKi9cbi5pbnB1dC1sYXJnZSB7XG4gIGZvbnQtc2l6ZTogY2FsYyh2YXIoLS1hZ25vc3RpYy1mb250LXNpemUsIDFyZW0pICsgMC4yNXJlbSk7XG4gIGxpbmUtaGVpZ2h0OiAxLjZyZW07XG59XG5cbi5maWVsZC1oZWxwLWxhcmdlLFxuLmZpZWxkLWVycm9yLWxhcmdlLFxuLmxhYmVsLWxhcmdlIHtcbiAgLyogV2UgaW5pdGlhbGx5IHJlbW92ZSAtMnB4IGZyb20gZm9udC1zaXplIHNvIHNldHRpbmcgdG8gZm9udC1zaXplIGVzc2VudGlhbGx5IGFkZHMgdGhlIDJweCBiYWNrICovXG4gIGZvbnQtc2l6ZTogdmFyKC0tYWdub3N0aWMtZm9udC1zaXplLCAxcmVtKTtcbn1cblxuLmlucHV0LXNtYWxsIHtcbiAgZm9udC1zaXplOiBjYWxjKHZhcigtLWFnbm9zdGljLWZvbnQtc2l6ZSwgMXJlbSkgLSAwLjI1cmVtKTtcbiAgbGluZS1oZWlnaHQ6IDFyZW07XG59XG5cbi5maWVsZC1oZWxwLXNtYWxsLFxuLmZpZWxkLWVycm9yLXNtYWxsLFxuLmxhYmVsLXNtYWxsIHtcbiAgZm9udC1zaXplOiBjYWxjKHZhcigtLWFnbm9zdGljLWZvbnQtc2l6ZSwgMXJlbSkgLSAwLjI1cmVtKTtcbn1cblxuLmlucHV0OmZvY3VzIHtcbiAgYm94LXNoYWRvdzogMCAwIDAgM3B4IHZhcigtLWFnbm9zdGljLWZvY3VzLXJpbmctY29sb3IpO1xuICAvKiBIaWdoIGNvbnRyYXN0IG1vZGUgb3V0bGluZSAqL1xuICBvdXRsaW5lOiAzcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIHRyYW5zaXRpb246IGJveC1zaGFkb3cgdmFyKC0tYWdub3N0aWMtdGltaW5nLWZhc3QpIGVhc2Utb3V0O1xufVxuLyogU2V0IHRoZSBmb2N1cyB0byB0cmFuc3BhcmVudCB3aGVuIHRoZXJlJ3MgYW4gZXJyb3Igc2luY2Ugd2UgdXNlXG5ib3JkZXJzIHRoYXQgdmlzdWFsbHkgY29uZmxpY3QuICovXG4uaW5wdXQtZXJyb3I6Zm9jdXMge1xuICBib3gtc2hhZG93OiAwIDAgMCAzcHggdHJhbnNwYXJlbnQ7XG59XG5cbi8qXG4qIERpc2FibGVkIFN0YXRlXG4qXG4qIFRoZSBkaXNhYmxlZCBzdGF0ZSB1c2VzIHRoZSBjbGFzcyAuZGlzYWJsZWQsXG4qIGFuZCB0aGUgZm9ybSBhdHRyaWJ1dGUgZGlzYWJsZWQ9XCJkaXNhYmxlZFwiLlxuKiBUaGUgdXNlIG9mICFpbXBvcnRhbnQgaXMgb25seSBhZGRlZCBiZWNhdXNlIHRoaXMgaXMgYSBzdGF0ZVxuKiB0aGF0IG11c3QgYmUgYXBwbGllZCB0byBhbGwgaW5wdXRzIHdoZW4gaW4gYSBkaXNhYmxlZCBzdGF0ZS5cbiovXG4uaW5wdXQuZGlzYWJsZWQsIC8qIERFUFJFQ0FURUQgLS0gVE9ETyByZW1vdmUgY2xhc3MgYmFzZWQgZGlzYWJsZWQgKi9cbi5pbnB1dDpkaXNhYmxlZCB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWFnbm9zdGljLWlucHV0LWRpc2FibGVkLWJnLCB2YXIoLS1hZ25vc3RpYy1kaXNhYmxlZC1iZykpICFpbXBvcnRhbnQ7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1pbnB1dC1kaXNhYmxlZC1jb2xvciwgdmFyKC0tYWdub3N0aWMtZGlzYWJsZWQtY29sb3IpKSAhaW1wb3J0YW50O1xuICBhcHBlYXJhbmNlOiBub25lICFpbXBvcnRhbnQ7XG4gIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgY3Vyc29yOiBub3QtYWxsb3dlZCAhaW1wb3J0YW50O1xuICBvcGFjaXR5OiAwLjggIWltcG9ydGFudDtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKC1tcy1oaWdoLWNvbnRyYXN0OiBhY3RpdmUpIHtcbiAgLyogSGlnaCBjb250cmFzdCBtb2RlIG91dGxpbmUgaGFja3MgKi9cbiAgLmlucHV0OmRpc2FibGVkIHtcbiAgICBvdXRsaW5lOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIH1cbn1cblxuLyoqXG4gKiBJbnB1dCBcImhhcyBhZGRvblwiXG4gKi9cblxuLmlucHV0LWFkZG9uLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIC8qIE1heWJlIEkgc2hvdWxkIGhhdmUgZGVmaW5lZCBhbm90aGVyIGNzcyBwcm9wIGZvciBhZGRvbiBhZGp1c3RtZW50cyBidXQgdHJ5aW5nXG4gIHRvIGF2b2lkIGFueSBleHRyYSB2YXJpYWJsZSBleHBsb3Npb24gdGhlcmUtLXdpbGwgbmVlZCB0byBrZWVwIGFuIGV5ZSBvbiB0aGlzICovXG4gIC0tYWRkb24tcGFkZGluZzogY2FsYyh2YXIoLS1hZ25vc3RpYy1pbnB1dC1zaWRlLXBhZGRpbmcsIDAuNzVyZW0pICogMS41KTtcbn1cblxuLmlucHV0LWhhcy1sZWZ0LWFkZG9uLFxuLmlucHV0LWhhcy1yaWdodC1hZGRvbiB7XG4gIGZsZXg6IDE7XG59XG5cbi5pbnB1dC1oYXMtbGVmdC1hZGRvbiB7XG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiBjYWxjKHZhcigtLWFkZG9uLXBhZGRpbmcpICogMi4yNSk7XG59XG5cbi5pbnB1dC1oYXMtcmlnaHQtYWRkb24ge1xuICBwYWRkaW5nLWlubGluZS1lbmQ6IGNhbGModmFyKC0tYWRkb24tcGFkZGluZykgKiAyLjI1KTtcbn1cblxuLypcbiogSW5wdXQgYWRkb25zIGUuZy4gaWNvbnMgaW5zaWRlIHRoZSBpbnB1dFxuKi9cbi5pbnB1dC1hZGRvbi1yaWdodCxcbi5pbnB1dC1hZGRvbi1sZWZ0IHtcbiAgLyogTWF5YmUgSSBzaG91bGQgaGF2ZSBkZWZpbmVkIGFub3RoZXIgY3NzIHByb3AgZm9yIGFkZG9uIGFkanVzdG1lbnRzIGJ1dCB0cnlpbmdcbiAgdG8gYXZvaWQgYW55IGV4dHJhIHZhcmlhYmxlIGV4cGxvc2lvbiB0aGVyZS0td2lsbCBuZWVkIHRvIGtlZXAgYW4gZXllIG9uIHRoaXMgKi9cbiAgLS1hZGRvbi1wYWRkaW5nOiBjYWxjKHZhcigtLWFnbm9zdGljLWlucHV0LXNpZGUtcGFkZGluZykgKiAxLjUpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG59XG5cbi5pbnB1dC1hZGRvbi1sZWZ0IHtcbiAgbGVmdDogdmFyKC0tYWRkb24tcGFkZGluZyk7XG59XG5cbi5pbnB1dC1hZGRvbi1yaWdodCB7XG4gIHJpZ2h0OiB2YXIoLS1hZGRvbi1wYWRkaW5nKTtcbn1cblxuLyogaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDU1MDc5NzAvaG93LWNhbi1pLWNoYW5nZS10aGUtY29sb3Itb2YtYS1wcm9ncmVzcy1iYXItdmFsdWUtaW4taHRtbCAqL1xuLyoqXG4gKiBNb3N0IGV4YW1wbGVzIHNob3cgc3R5bGluZyBkaXJlY3RseSB0byB0aGUgPHByb2dyZXNzPiBlbGVtZW50IGl0c2VsZi4gSG93ZXZlcixcbiAqIG15IHRlc3RzIChjaHJvbWUsIGZmLCBzYWZhcmkgb24gbWFjIG1pbmkgMjAyMCksIHNob3dlZCBpdCdzIHBlcmZlY3RseSBwb3NzaWJseVxuICogdG8gdXNlIGEgY2xhc3Mgc2VsZWN0b3IgaW5zdGVhZC4gVGhlIHJlYXNvbiBJJ2QgcHJlZmVyIHRoYXQgaGVyZSwgaXMgdGhhdCBJIGNhblxuICogdGhlbiB1c2UgQ1NTIE1vZHVsZXMgY29tcG9zZXMgYWdhaW5zdCAucHJvZ3Jlc3MgKGUuZy4gZm9yIFJlYWN0L1Z1ZSBjb21wb25lbnRzKVxuICovXG4ucHJvZ3Jlc3Mge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIGhlaWdodDogdmFyKC0tYWdub3N0aWMtcHJvZ3Jlc3MtaGVpZ2h0LCB2YXIoLS1mbHVpZC0xMCwgMC42MjVyZW0pKTtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogbm9uZTtcbiAgLyogTmV4dCBjb3VwbGUgb2YgcnVsZXMgYXJlIHJlcXVpcmVkIHRvIGJlIGhlcmUgZm9yIEZGIChidXQgbm90IGNocm9tZSkgKi9cbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWdub3N0aWMtcHJvZ3Jlc3MtYmFja2dyb3VuZCwgdmFyKC0tYWdub3N0aWMtZ3JheS1saWdodCwgI2VkZWRlZCkpO1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1hZ25vc3RpYy1wcm9ncmVzcy1yYWRpdXMsIHZhcigtLWZsdWlkLTEwLCAwLjYyNXJlbSkpO1xufVxuXG4ucHJvZ3Jlc3NbdmFsdWVdOjotd2Via2l0LXByb2dyZXNzLWJhciB7XG4gIC8qIEluIG15IHRlc3RzIGNocm9tZSByZXF1aXJlcyB0aGlzIHdoZXJlYXMgRkYgd2FudHMgaXQgb24gdGhlIHByb2dyZXNzIHt9IHJ1bGUgKi9cbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWdub3N0aWMtcHJvZ3Jlc3MtYmFja2dyb3VuZCwgdmFyKC0tYWdub3N0aWMtZ3JheS1saWdodCwgI2VkZWRlZCkpO1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1hZ25vc3RpYy1wcm9ncmVzcy1yYWRpdXMsIHZhcigtLWZsdWlkLTEwLCAwLjYyNXJlbSkpO1xufVxuXG4ucHJvZ3Jlc3NbdmFsdWVdOjotd2Via2l0LXByb2dyZXNzLXZhbHVlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWdub3N0aWMtcHJvZ3Jlc3MtZmlsbC1jb2xvciwgdmFyKC0tYWdub3N0aWMtcHJpbWFyeSwgIzA3N2FjYikpO1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1hZ25vc3RpYy1wcm9ncmVzcy1yYWRpdXMsIHZhcigtLWZsdWlkLTEwLCAwLjYyNXJlbSkpO1xufVxuXG4ucHJvZ3Jlc3NbdmFsdWVdOjotbW96LXByb2dyZXNzLWJhciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFnbm9zdGljLXByb2dyZXNzLWZpbGwtY29sb3IsIHZhcigtLWFnbm9zdGljLXByaW1hcnksICMwNzdhY2IpKTtcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0tYWdub3N0aWMtcHJvZ3Jlc3MtcmFkaXVzLCB2YXIoLS1mbHVpZC0xMCwgMC42MjVyZW0pKTtcbn1cblxuLnByb2dyZXNzW3ZhbHVlXTo6LW1zLWZpbGwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hZ25vc3RpYy1wcm9ncmVzcy1maWxsLWNvbG9yLCB2YXIoLS1hZ25vc3RpYy1wcmltYXJ5LCAjMDc3YWNiKSk7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLWFnbm9zdGljLXByb2dyZXNzLXJhZGl1cywgdmFyKC0tZmx1aWQtMTAsIDAuNjI1cmVtKSk7XG59XG5cbi8qKlxuICogU3dpdGNoXG4gKiBcbiAqIFRoaXMgc3dpdGNoIGlzIGluc3BpcmVkIGJ5IFNjb3R0IE9oYXJhJ3MgY2hlY2tib3ggc3dpdGNoOlxuICogaHR0cHM6Ly9zY290dGFvaGFyYS5naXRodWIuaW8vYTExeV9zdHlsZWRfZm9ybV9jb250cm9scy9zcmMvY2hlY2tib3gtLXN3aXRjaC9cbiAqL1xuLnN3aXRjaC1jb250YWluZXIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgLyogVE9ETzogSG9wZWZ1bGx5IHRoaXMgZG9lc24ndCBiZWNvbWUgYSBwcm9ibGVtIGJ1dCBzaW5jZSB3ZSB1c2UgYWJzb2x1dGVcbiAgcG9zaXRpb25pbmcgZXh0ZW5zaXZlbHksIHdlIG5lZWQgc29tZSB3YXkgdG8gaGF2ZSBhZGphY2VudCBzcGFjZWQgbGluZXMgKi9cbiAgbWluLWhlaWdodDogMi4yNXJlbTtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDAuNXJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uc3dpdGNoLWNvbnRhaW5lcjpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLyogdXNpbmcgdGhlIGJlZm9yZS9hZnRlciBwc2V1ZG8gZWxlbWVudHMgb2YgdGhlIHNwYW4gdG8gY3JlYXRlIHRoZSBcInN3aXRjaFwiICovXG4uc3dpdGNoOmJlZm9yZSxcbi5zd2l0Y2g6YWZ0ZXIge1xuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1hZ25vc3RpYy1ncmF5LW1pZC1kYXJrKTtcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbn1cblxuLyogc3R5bGluZyBzcGVjaWZpYyB0byB0aGUga25vYiBvZiB0aGUgc3dpdGNoICovXG4uc3dpdGNoOmFmdGVyIHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgd2lkdGg6IDEuNHJlbTtcbiAgaGVpZ2h0OiAxLjRyZW07XG4gIHJpZ2h0OiAxLjRyZW07XG4gIHRyYW5zaXRpb246IHJpZ2h0IHZhcigtLWFnbm9zdGljLXRpbWluZy1mYXN0KSBlYXNlLWluLW91dDtcbn1cblxuLyogc3R5bGluZyBzcGVjaWZpYyB0byB0aGUga25vYiBcImNvbnRhaW5lclwiICovXG4uc3dpdGNoOmJlZm9yZSB7XG4gIGJhY2tncm91bmQ6ICNlZWU7XG4gIGJvcmRlci1yYWRpdXM6IDEuNzVyZW07XG4gIHdpZHRoOiAyLjc1cmVtO1xuICBoZWlnaHQ6IDEuNzVyZW07XG4gIHJpZ2h0OiAwLjI1cmVtO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIHZhcigtLWFnbm9zdGljLXRpbWluZy1tZWRpdW0pIGVhc2UtaW4tb3V0O1xufVxuXG4vKiBTaXplcyAqL1xuLnN3aXRjaC1zbWFsbDphZnRlciB7XG4gIHdpZHRoOiAxLjI1cmVtO1xuICBoZWlnaHQ6IDEuMjVyZW07XG4gIHJpZ2h0OiAxLjEyNXJlbTtcbn1cblxuLnN3aXRjaC1zbWFsbDpiZWZvcmUge1xuICB3aWR0aDogMi4yNXJlbTtcbiAgaGVpZ2h0OiAxLjVyZW07XG59XG5cbi5zd2l0Y2gtbGFyZ2U6YWZ0ZXIge1xuICB3aWR0aDogMS42NXJlbTtcbiAgaGVpZ2h0OiAxLjY1cmVtO1xuICByaWdodDogMS42NXJlbTtcbn1cblxuLnN3aXRjaC1sYXJnZTpiZWZvcmUge1xuICB3aWR0aDogMy4yNXJlbTtcbiAgaGVpZ2h0OiAycmVtO1xufVxuXG4uc3dpdGNoLWJvcmRlcjpiZWZvcmUge1xuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1hZ25vc3RpYy1wcmltYXJ5KTtcbn1cblxuLnN3aXRjaC1hY3Rpb24uc3dpdGNoLWJvcmRlcjpiZWZvcmUge1xuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1hZ25vc3RpYy1hY3Rpb24pO1xufVxuXG4vKiBGcm9tOiBodHRwczovL3Njb3R0YW9oYXJhLmdpdGh1Yi5pby9hMTF5X3N0eWxlZF9mb3JtX2NvbnRyb2xzL3NyYy9jaGVja2JveC0tc3dpdGNoL1xuICBoaWRlIHRoZSBhY3R1YWwgY2hlY2tib3ggZnJvbSB2aWV3LCBidXQgbm90IGZyb20ga2V5Ym9hcmRzIG9yIEFUcy5cbiAgSW5zdGVhZCBvZiBzdGFuZGFyZCB2aXN1YWxseSBoaWRkZW4gc3R5bGluZywgaW5zdGVhZCBzZXQgb3BhY2l0eSB0b1xuICBhbG1vc3QgMCAobm90IHplcm8gZm9yIENob21lVm94IGxlZ2FjeSBidWcpLCBwb2ludGVyLWV2ZW50cyBub25lLCBhbmRcbiAgdGhlbiBzZXQgdG8gZnVsbCBoZWlnaHQvd2lkdGggb2YgY29udGFpbmVyIGVsZW1lbnQgc28gdGhhdCBWTyBmb2N1c1xuICByaW5nIG91dGxpbmVzIHRoZSBjb21wb25lbnQsIGluc3RlYWQgb2YgYSB0aW55IGJveCB3aXRoaW4gdGhlIGNvbXBvbmVudFxuKi9cbi5zd2l0Y2gtaW5wdXQge1xuICBtYXJnaW46IDA7XG4gIG9wYWNpdHk6IDAuMDAwMTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4uc3dpdGNoLWlucHV0OmZvY3VzICsgLnN3aXRjaDpiZWZvcmUge1xuICBib3gtc2hhZG93OiAwIDAgMCAzcHggdmFyKC0tYWdub3N0aWMtZm9jdXMtcmluZy1jb2xvcik7XG59XG5cbi8qIC0tLS0gQ0hFQ0tFRCBTVEFURSAtLS0tLSAqL1xuXG4vKiBjaGFuZ2UgdGhlIHBvc2l0aW9uIG9mIHRoZSBrbm9iIHRvIGluZGljYXRlIGl0IGhhcyBiZWVuIGNoZWNrZWQqL1xuLnN3aXRjaC1pbnB1dDpjaGVja2VkICsgLnN3aXRjaDphZnRlciB7XG4gIHJpZ2h0OiAwLjVlbTtcbn1cbi5zd2l0Y2gtaW5wdXQ6Y2hlY2tlZCArIC5zd2l0Y2gtc21hbGw6YWZ0ZXIge1xuICByaWdodDogMC40MjVyZW07XG59XG5cbi8qIHVwZGF0ZSB0aGUgY29sb3Igb2YgdGhlIFwiY29udGFpbmVyXCIgdG8gZnVydGhlciB2aXN1YWxseSBpbmRpY2F0ZSBzdGF0ZSAqL1xuLnN3aXRjaC1pbnB1dDpjaGVja2VkICsgLnN3aXRjaDpub3QoLnN3aXRjaC1ib3JkZXIpOmJlZm9yZSB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWFnbm9zdGljLXByaW1hcnkpO1xufVxuXG4uc3dpdGNoLWlucHV0OmNoZWNrZWQgKyAuc3dpdGNoLWFjdGlvbjpub3QoLnN3aXRjaC1ib3JkZXIpOmJlZm9yZSB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWFnbm9zdGljLWFjdGlvbik7XG59XG5cbi8qIEJvcmRlciBzd2l0Y2ggb24gY2hlY2tlZCB0aGUgdGh1bWIgZ2V0cyBwcmltYXJ5IG9yIGFjdGlvbiBiZyByZXNwZWN0aXZlbHkgKi9cbi5zd2l0Y2gtaW5wdXQ6Y2hlY2tlZCArIC5zd2l0Y2gtYm9yZGVyOmFmdGVyIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tYWdub3N0aWMtcHJpbWFyeSk7XG59XG4uc3dpdGNoLWlucHV0OmNoZWNrZWQgKyAuc3dpdGNoLWFjdGlvbi5zd2l0Y2gtYm9yZGVyOmFmdGVyIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tYWdub3N0aWMtYWN0aW9uKTtcbn1cblxuLyogU3dpdGNoIGxhYmVsIG9uIHJpZ2h0ICovXG5cbi8qIEZsaXBzIHRyYW5zaXRpb24gdGFyZ2V0IHRvIGxlZnQgdG8gcHJlc2VydmUgb3VyIHNtb290aCB0cmFuc2l0aW9ucyAqL1xuLnN3aXRjaC1yaWdodCAuc3dpdGNoOmFmdGVyIHtcbiAgdHJhbnNpdGlvbjogbGVmdCB2YXIoLS1hZ25vc3RpYy10aW1pbmctZmFzdCkgZWFzZS1pbi1vdXQ7XG59XG5cbi5zd2l0Y2gtcmlnaHQgLnN3aXRjaC1pbnB1dDpjaGVja2VkICsgLnN3aXRjaDphZnRlciB7XG4gIHJpZ2h0OiBpbml0aWFsO1xuICBsZWZ0OiAwLjVlbTtcbn1cbi5zd2l0Y2gtcmlnaHQgLnN3aXRjaC1pbnB1dDpjaGVja2VkICsgLnN3aXRjaC1zbWFsbDphZnRlciB7XG4gIHJpZ2h0OiBpbml0aWFsO1xuICBsZWZ0OiAwLjQyNXJlbTtcbn1cblxuLyogV2UgaGF2ZSB0byBmbGlwIHRoZSBwb3NpdGlvbmluZyB3aGVuIHRoZSBsYWJlbCBpcyBvbiB0aGUgcmlnaHQgb2Ygc3dpdGNoICovXG4uc3dpdGNoLXJpZ2h0IC5zd2l0Y2g6YmVmb3JlIHtcbiAgcmlnaHQ6IGluaXRpYWw7XG4gIGxlZnQ6IDAuMjVyZW07XG59XG5cbi5zd2l0Y2gtcmlnaHQgLnN3aXRjaDo6YWZ0ZXIge1xuICByaWdodDogaW5pdGlhbDtcbiAgbGVmdDogMS40cmVtO1xufVxuXG4uc3dpdGNoLXJpZ2h0IC5zd2l0Y2gtbGFiZWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG59XG5cbi8qIFN3aXRjaCBzaXplcyB3L2xhYmVsIG9uIHJpZ2h0IC0tIEkgZXhwZWN0IFNNQUNTUyBzbyAuc3dpdGNoIC5zd2l0Y2gtc21hbGxcbmNsYXNzZXMgc2hvdWxkIGJvdGggZXhpc3Qgc28gdGhlIHJpZ2h0OiBpbml0aWFsIHdhcyB0YWtlbiBjYXJlIG9mIGFib3ZlIDopICovXG4uc3dpdGNoLXJpZ2h0IC5zd2l0Y2gtc21hbGw6YWZ0ZXIge1xuICBsZWZ0OiAxLjEyNXJlbTtcbn1cblxuLnN3aXRjaC1yaWdodCAuc3dpdGNoLWxhcmdlOmFmdGVyIHtcbiAgbGVmdDogMS42NXJlbTtcbn1cblxuLyogRGlzYWJsZWQgYWthIDpkaXNhYmxlZCBpcyBub3QgYWN0dWFsbHkgc3VwcG9ydGVkIGZvciA8bGFiZWw+XG5lbGVtZW50IHNvIHdlIHVzZSBhdHRyaWJ1dGUgc2VsZWN0b3IgZm9yIHRoYXQ6XG5odHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVE1ML0F0dHJpYnV0ZXMvZGlzYWJsZWQjOn46dGV4dD1UaGUlMjBkaXNhYmxlZCUyMGF0dHJpYnV0ZSUyMGlzJTIwc3VwcG9ydGVkLGNvbnRyb2wlMjBvciUyMGl0cyUyMGRlc2NlbmRhbnQlMjBjb250cm9scy5cbiovXG4uc3dpdGNoLWlucHV0W2Rpc2FibGVkXSArIC5zd2l0Y2gsXG4uc3dpdGNoLWlucHV0W2Rpc2FibGVkXSArIC5zd2l0Y2gtbGFiZWwsXG4uc3dpdGNoLWNvbnRhaW5lci5kaXNhYmxlZCB7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy1pbnB1dC1kaXNhYmxlZC1jb2xvciwgdmFyKC0tYWdub3N0aWMtZGlzYWJsZWQtY29sb3IpKSAhaW1wb3J0YW50O1xuICBhcHBlYXJhbmNlOiBub25lICFpbXBvcnRhbnQ7XG4gIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgY3Vyc29yOiBub3QtYWxsb3dlZCAhaW1wb3J0YW50O1xuICBvcGFjaXR5OiAwLjggIWltcG9ydGFudDtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKC1tcy1oaWdoLWNvbnRyYXN0OiBhY3RpdmUpIHtcbiAgLnN3aXRjaDphZnRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2luZG93VGV4dDtcbiAgfVxuXG4gIC8qIEhpZ2ggY29udHJhc3QgbW9kZSBvdXRsaW5lIGhhY2tzICovXG4gIC5zd2l0Y2gtaW5wdXRbZGlzYWJsZWRdICsgLnN3aXRjaC1sYWJlbCxcbiAgLnN3aXRjaC1jb250YWluZXIuZGlzYWJsZWQge1xuICAgIG91dGxpbmU6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgfVxufVxuXG4udGFiLWxpc3QsXG4udGFiLWxpc3QtYmFzZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi50YWItbGlzdCxcbi50YWItc2tpbm5lZCB7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDA7XG4gIG1hcmdpbi1ibG9jay1lbmQ6IDA7XG4gIGJvcmRlci1ib3R0b206IHZhcigtLWFnbm9zdGljLXRhYnMtYm9yZGVyLXNpemUsIDFweCkgc29saWRcbiAgICB2YXIoLS1hZ25vc3RpYy10YWJzLWJnY29sb3IsIHZhcigtLWFnbm9zdGljLWdyYXktbGlnaHQpKTtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYWxsO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiB2YXIoLS1hZ25vc3RpYy10aW1pbmctbWVkaXVtKTtcbn1cblxuLyogV2UgY2FuIGFzayBmb3IgLnRhYi1idXR0b24gd2hpY2ggaXMgYmFzZSBhbmQgc2tpbiBjb21iaW5lZCwgb3IsIHdlIGNhbiB1dGlsaXplIC50YWItYnV0dG9uLWJhc2VcbmlmIHdlJ2QgbGlrZSB0byBvbmx5IGJsYW5rIG91dCBidXR0b25zIGJ1dCBvdGhlcndpc2Ugc2tpbiBvdXJzZWx2ZXMuICovXG4udGFiLWJ1dHRvbixcbi50YWItYnV0dG9uLWJhc2Uge1xuICAvKiBCbGFuayBvdXQgdGhlIGJ1dHRvbiAqL1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBib3gtc2hhZG93OiBub25lO1xuICAvKiBSZXNldCBtYXJnaW5zL3BhZGRpbmc7IHRoaXMgd2lsbCBnZXQgYWRkZWQgYmFjayBpZiBpdCdzIGEgXCJza2lubmVkXCIgdGFiIGJ1dHRvbi4gSG93ZXZlciwgd2UgaGF2ZVxuICBhIHVzZSBjYXNlIHdoZXJlIGEgdGFiLWJ1dHRvbiBpcyB3cmFwcGluZyBhIGZhdXggYnV0dG9uLiBGb3IgdGhhdCwgd2UgZG9uJ3Qgd2FudCBtYXJnaW5zL3BhZGRpbmcgYmVjYXVzZVxuICB0aGUgZmF1eCBidXR0b24gcHJvdmlkZXMgdGhhdC4gKi9cbiAgbWFyZ2luLWlubGluZS1zdGFydDogMDtcbiAgbWFyZ2luLWlubGluZS1lbmQ6IDA7XG4gIHBhZGRpbmctYmxvY2stc3RhcnQ6IDA7XG4gIHBhZGRpbmctYmxvY2stZW5kOiAwO1xuICBwYWRkaW5nLWlubGluZS1zdGFydDogMDtcbiAgcGFkZGluZy1pbmxpbmUtZW5kOiAwO1xufVxuXG4vKiBXZSBwdWxsIGJhY2sgdGhlIDJuZCBzdWJzZXF1ZW50IHRhYnMgdG8gcmVtb3ZlIHRoZSBkb3VibGUgYm9yZGVyICovXG4udGFiLWJ1dHRvbjpub3QoOmZpcnN0LW9mLXR5cGUpLFxuLnRhYi1idXR0b24tYmFzZTpub3QoOmZpcnN0LW9mLXR5cGUpIHtcbiAgbWFyZ2luLWlubGluZS1zdGFydDogLTFweDtcbn1cblxuLnRhYi1idXR0b24sXG4udGFiLWJ1dHRvbi1za2luIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIC8qIFNpbmNlIHRoaXMgaXMgYSBcInNraW5uZWQgdGFiIGJ1dHRvblwiIHdlIGFkZCBvdXIgcGFkZGluZyBoZXJlIHRvIHByZXZpb3VzbHkgXCJyZXNldFwiIC50YWItYnV0dG9uLWJhc2UgKi9cbiAgcGFkZGluZy1ibG9jay1zdGFydDogdmFyKC0tYWdub3N0aWMtdmVydGljYWwtcGFkLCAwLjVyZW0pO1xuICBwYWRkaW5nLWJsb2NrLWVuZDogdmFyKC0tYWdub3N0aWMtdmVydGljYWwtcGFkLCAwLjVyZW0pO1xuICBwYWRkaW5nLWlubGluZS1zdGFydDogdmFyKC0tYWdub3N0aWMtc2lkZS1wYWRkaW5nLCAwLjc1cmVtKTtcbiAgcGFkZGluZy1pbmxpbmUtZW5kOiB2YXIoLS1hZ25vc3RpYy1zaWRlLXBhZGRpbmcsIDAuNzVyZW0pO1xuICBmb250LWZhbWlseTogdmFyKC0tYWdub3N0aWMtYnRuLWZvbnQtZmFtaWx5LCB2YXIoLS1hZ25vc3RpYy1mb250LWZhbWlseSkpO1xuICBmb250LXdlaWdodDogdmFyKC0tYWdub3N0aWMtYnRuLWZvbnQtd2VpZ2h0LCA0MDApO1xuICBmb250LXNpemU6IHZhcigtLWFnbm9zdGljLWJ0bi1mb250LXNpemUsIDFyZW0pO1xuICAvKiB0aGlzIGNhbiBiZSBvdmVycmlkZW4sIGJ1dCBpdCBtaWdodCBtZXNzIHdpdGggdGhlIGJhbGFuY2Ugb2YgdGhlIGJ1dHRvbiBoZWlnaHRzIGFjcm9zcyB2YXJpYW50cyAqL1xuICBsaW5lLWhlaWdodDogdmFyKC0tYWdub3N0aWMtbGluZS1oZWlnaHQsIHZhcigtLWZsdWlkLTIwLCAxLjI1cmVtKSk7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy10YWJzLXByaW1hcnksIHZhcigtLWFnbm9zdGljLXByaW1hcnkpKTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0cmFuc2l0aW9uOiBjb2xvciB2YXIoLS1hZ25vc3RpYy10aW1pbmctZmFzdCkgZWFzZS1pbi1vdXQsXG4gICAgYmFja2dyb3VuZC1jb2xvciB2YXIoLS1hZ25vc3RpYy10aW1pbmctZmFzdCkgZWFzZS1pbi1vdXQsXG4gICAgYm9yZGVyLWNvbG9yIHZhcigtLWFnbm9zdGljLXRpbWluZy1mYXN0KSBlYXNlLWluLW91dDtcbn1cblxuLnRhYi1ib3JkZXJsZXNzIHtcbiAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi50YWItYnV0dG9uLWxhcmdlIHtcbiAgcGFkZGluZy1ibG9jay1zdGFydDogY2FsYyh2YXIoLS1hZ25vc3RpYy1pbnB1dC1zaWRlLXBhZGRpbmcpICogMS4yNSk7XG4gIHBhZGRpbmctYmxvY2stZW5kOiBjYWxjKHZhcigtLWFnbm9zdGljLWlucHV0LXNpZGUtcGFkZGluZykgKiAxLjI1KTtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IGNhbGModmFyKC0tYWdub3N0aWMtaW5wdXQtc2lkZS1wYWRkaW5nKSAqIDEuNzUpO1xuICBwYWRkaW5nLWlubGluZS1lbmQ6IGNhbGModmFyKC0tYWdub3N0aWMtaW5wdXQtc2lkZS1wYWRkaW5nKSAqIDEuNzUpO1xufVxuXG4udGFiLWJ1dHRvbi1qdW1ibyB7XG4gIHBhZGRpbmctYmxvY2stc3RhcnQ6IGNhbGModmFyKC0tYWdub3N0aWMtaW5wdXQtc2lkZS1wYWRkaW5nKSAqIDIpO1xuICBwYWRkaW5nLWJsb2NrLWVuZDogY2FsYyh2YXIoLS1hZ25vc3RpYy1pbnB1dC1zaWRlLXBhZGRpbmcpICogMik7XG4gIHBhZGRpbmctaW5saW5lLXN0YXJ0OiBjYWxjKHZhcigtLWFnbm9zdGljLWlucHV0LXNpZGUtcGFkZGluZykgKiAzKTtcbiAgcGFkZGluZy1pbmxpbmUtZW5kOiBjYWxjKHZhcigtLWFnbm9zdGljLWlucHV0LXNpZGUtcGFkZGluZykgKiAzKTtcbn1cbi50YWItaXRlbS50YWItYnV0dG9uIHtcbiAgbWFyZ2luLWJsb2NrLWVuZDogLTFweDtcbiAgYmFja2dyb3VuZDogMCAwO1xuICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogdmFyKC0tYWdub3N0aWMtdGFicy1yYWRpdXMsIDAuMjVyZW0pO1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogdmFyKC0tYWdub3N0aWMtdGFicy1yYWRpdXMsIDAuMjVyZW0pO1xufVxuXG4udGFiLWl0ZW0udGFiLWJ1dHRvbi5hY3RpdmUge1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtZ3JheS1kYXJrKTtcbiAgLyogVE9ETyAtLSB1cGRhdGUgdGhlc2UgY29sb3JzIHRvIHVzZSBjc3MgcHJvcGVydGllcyAqL1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3JkZXItY29sb3I6ICNkZWUyZTYgI2RlZTJlNiAjZmZmO1xufVxuXG4udGFiLWl0ZW06aG92ZXIsXG4udGFiLWJ1dHRvbjpmb2N1cyB7XG4gIGJvcmRlci1jb2xvcjogI2U5ZWNlZiAjZTllY2VmICNkZWUyZTY7XG4gIGlzb2xhdGlvbjogaXNvbGF0ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4udGFiLWJ1dHRvbjpkaXNhYmxlZCB7XG4gIGNvbG9yOiB2YXIoLS1hZ25vc3RpYy10YWJhcy1kaXNhYmxlZC1iZywgdmFyKC0tYWdub3N0aWMtZ3JheS1taWQtZGFyaykpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgb3BhY2l0eTogMC44O1xufVxuXG4udGFnIHtcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFnbm9zdGljLWdyYXktbGlnaHQpO1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1hZ25vc3RpYy1yYWRpdXMpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtZGFyayk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZmx1aWQtMTQpO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWFnbm9zdGljLWxpbmUtaGVpZ2h0LCB2YXIoLS1mbHVpZC0yMCwgMS4yNXJlbSkpO1xuICBwYWRkaW5nLWJsb2NrLXN0YXJ0OiB2YXIoLS1mbHVpZC0yKTtcbiAgcGFkZGluZy1ibG9jay1lbmQ6IHZhcigtLWZsdWlkLTIpO1xuICBwYWRkaW5nLWlubGluZS1zdGFydDogdmFyKC0tZmx1aWQtOCk7XG4gIHBhZGRpbmctaW5saW5lLWVuZDogdmFyKC0tZmx1aWQtOCk7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG4udGFnLWluZm8ge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1hZ25vc3RpYy1wcmltYXJ5LWxpZ2h0KTtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLXByaW1hcnktZGFyayk7XG59XG4udGFnLXdhcm5pbmcge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1hZ25vc3RpYy13YXJuaW5nLWxpZ2h0KTtcbiAgY29sb3I6IHZhcigtLWFnbm9zdGljLXByaW1hcnktZGFyayk7XG59XG4udGFnLWVycm9yIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tYWdub3N0aWMtZXJyb3ItbGlnaHQpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtZXJyb3ItZGFyayk7XG59XG4udGFnLXN1Y2Nlc3Mge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1hZ25vc3RpYy1hY3Rpb24tbGlnaHQpO1xuICBjb2xvcjogdmFyKC0tYWdub3N0aWMtYWN0aW9uLWZyb20pO1xufVxuLnRhZy11cHBlciB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG4iXX0= */
<article class="{{ cardClasses }}">
  <div class="card-demo-image-wrap">
    <img src="https://via.placeholder.com/2000x1000?text=Really+Big+Image"
         alt="Image placeholder image for testing responsiveness" />
  </div>
  <div class="card-demo-content">
    <h1 class="card-demo-title"><a href="#">{{ title }}</a></h1>

    <p class="card-demo-metadata">
      <span class="card-demo-rating">★★★★<span>☆</span></span>
      <span class="card-demo-votes">(1234 votes)</span>
    </p>

    <p class="card-demo-desc">
      This card has the stacked card class which produces a single-column or stacked layout.
      This is a popular choice for cards, but make sure you've applied the
      <i>card-stacked</i> class or else you want get this behavior
      <span class="quoted">out-the-box</span>. This particular example has an image whereas
      the one below does not.
    </p>
    <p>{{ text }}</p>

    <button class="btn btn-primary"
            type="submit">{{ buttonCopy }}</button>
  </div>
</article>

<article class="{{ cardClasses }}">
  <div class="card-demo-content">
    <h1 class="card-demo-title"><a href="#">{{ title }}</a></h1>
    <p class="card-demo-metadata">
      <span class="card-demo-rating">★★★★<span>☆</span></span>
      <span class="card-demo-votes">(1234 votes)</span>
    </p>
    <p class="card-demo-desc">
      This card also has the stacked card class which produces a single-column or stacked
      layout.
    </p>

    <p>{{ text }}</p>

    <button class="btn btn-primary"
            type="submit">{{ buttonCopy }}</button>
  </div>
</article>

<article class="card-base"
         style="border: 1px solid #dddddd">
  <section style="padding: 24px 24px">
    <h1 style="margin: 0">Card Base / No Skin</h1>
    <p>
      If using CSS custom properties theming is not enough customizability for you, this
      approach may help. So, each card's CSS is, essentially, split into two classes between a
      card's base and its skinning styles:
      <i>.card-base</i> and <i>.card-skin</i> with <i>.card</i> combings these two for
      convenience. But, check out how you can leave out the skin…
    </p>
    <p>
      If you inspect this card in devtools, you'll see that we use the
      <i>card-base</i> class. With only the base styles, I can customize the skin exactly to
      my liking. For example, I've elected to use a 1 pixel border on the card itself, and not
      pull in the raised box shadow styles you see on the other examples.
    </p>
    <p>
      Customizing this way is sort of an escape hatch and I would advise first seeing if using
      the CSS custom properties override approach gets you what you need. That said, it's
      available should you need it!
    </p>
  </section>
</article>

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots AG—React/Button Customizations 1`] = `
Array [
  <button
    className="btn my-custom-css-klass"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Inspect me to find custom classes
  </button>,
  <button
    className="btn blank"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Blank button
  </button>,
  <button
    className="btnBase"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Unskinned
  </button>,
]
`;

exports[`Storyshots AG—React/Button Default 1`] = `
Array [
  <button
    className="btn"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn bordered"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn rounded"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn bordered rounded"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn rounded raised"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn circle"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn bordered circle"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn block"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn bordered block"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
]
`;

exports[`Storyshots AG—React/Button Disabled All 1`] = `
Array [
  <button
    className="btn disabled"
    disabled={true}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn primary disabled"
    disabled={true}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn secondary disabled"
    disabled={true}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn secondary bordered disabled"
    disabled={true}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
]
`;

exports[`Storyshots AG—React/Button Primary 1`] = `
Array [
  <button
    className="btn primary"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn primary bordered"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn primary rounded"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn primary bordered rounded"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn primary rounded raised"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn primary circle"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn primary bordered circle"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn primary block"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn primary bordered block"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
]
`;

exports[`Storyshots AG—React/Button Secondary 1`] = `
Array [
  <button
    className="btn secondary"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn secondary bordered"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn secondary rounded"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn secondary bordered rounded"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn secondary rounded raised"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn secondary circle"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn secondary bordered circle"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn secondary block"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn secondary bordered block"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
]
`;

exports[`Storyshots AG—React/Button Sizes 1`] = `
Array [
  <button
    className="btn small"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
  <button
    className="btn large"
    disabled={false}
    onClick={[Function]}
    type="button"
  >
    Go
  </button>,
]
`;

exports[`Storyshots AG—React/Button Types 1`] = `
Array [
  <button
    className="btn"
    disabled={false}
    onClick={[Function]}
    type="reset"
  >
    Go
  </button>,
  <button
    className="btn"
    disabled={false}
    onClick={[Function]}
    type="submit"
  >
    Go
  </button>,
]
`;

exports[`Storyshots AG—React/ButtonGroups All 1`] = `
Array [
  <div
    aria-label="Appropriate label for your button group"
    className="group "
    role="group"
  >
    <button
      className="btn"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      One
    </button>
    <button
      className="btn"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Two
    </button>
    <button
      className="btn"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Three
    </button>
  </div>,
  <div
    aria-label="Appropriate label for your button group"
    className="group "
    role="group"
  >
    <button
      className="btn raised"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      One
    </button>
    <button
      className="btn raised"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Two
    </button>
    <button
      className="btn raised"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Three
    </button>
  </div>,
  <div
    aria-label="Appropriate label for your button group"
    className="group "
    role="group"
  >
    <button
      className="btn bordered"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      One
    </button>
    <button
      className="btn bordered"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Two
    </button>
    <button
      className="btn bordered"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Three
    </button>
  </div>,
  <div
    aria-label="Appropriate label for your button group"
    className="group "
    role="group"
  >
    <button
      className="btn secondary"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      One
    </button>
    <button
      className="btn secondary"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Two
    </button>
    <button
      className="btn secondary"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Three
    </button>
  </div>,
  <div
    aria-label="Appropriate label for your button group"
    className="group "
    role="group"
  >
    <button
      className="btn secondary raised"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      One
    </button>
    <button
      className="btn secondary raised"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Two
    </button>
    <button
      className="btn secondary raised"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Three
    </button>
  </div>,
  <div
    aria-label="Appropriate label for your button group"
    className="group "
    role="group"
  >
    <button
      className="btn secondary bordered"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      One
    </button>
    <button
      className="btn secondary bordered"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Two
    </button>
    <button
      className="btn secondary bordered"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Three
    </button>
  </div>,
  <div
    aria-label="Appropriate label for your button group"
    className="group "
    role="group"
  >
    <button
      className="btn primary"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      One
    </button>
    <button
      className="btn primary"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Two
    </button>
    <button
      className="btn primary"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Three
    </button>
  </div>,
  <div
    aria-label="Appropriate label for your button group"
    className="group "
    role="group"
  >
    <button
      className="btn primary raised"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      One
    </button>
    <button
      className="btn primary raised"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Two
    </button>
    <button
      className="btn primary raised"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Three
    </button>
  </div>,
  <div
    aria-label="Appropriate label for your button group"
    className="group "
    role="group"
  >
    <button
      className="btn primary bordered"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      One
    </button>
    <button
      className="btn primary bordered"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Two
    </button>
    <button
      className="btn primary bordered"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Three
    </button>
  </div>,
  <div
    aria-label="Appropriate label for your button group"
    className="group "
    role="group"
  >
    <button
      className="btn primary disabled"
      disabled={true}
      type="button"
    >
      One
    </button>
    <button
      className="btn primary"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Two
    </button>
    <button
      className="btn primary"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Three
    </button>
  </div>,
  <div
    aria-label="Appropriate label for your button group"
    className="group "
    role="group"
  >
    <button
      className="btn primary disabled"
      disabled={true}
      type="button"
    >
      One
    </button>
    <button
      className="btn primary"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Two
    </button>
    <button
      className="btn primary disabled"
      disabled={true}
      type="button"
    >
      Three
    </button>
  </div>,
  <div
    aria-label="Appropriate label for your button group"
    className="group "
    role="group"
  >
    <button
      className="btn primary disabled"
      disabled={true}
      type="button"
    >
      One
    </button>
    <button
      className="btn primary disabled"
      disabled={true}
      type="button"
    >
      Two
    </button>
    <button
      className="btn primary disabled"
      disabled={true}
      type="button"
    >
      Three
    </button>
  </div>,
]
`;

exports[`Storyshots AG—React/ButtonIcons Button Icons 1`] = `
Array [
  <div>
    <button
      className="btn primary"
      disabled={false}
      type="button"
    >
      <svg
        aria-hidden="true"
        className="btn-icon"
        height="16"
        role="img"
        version="1.1"
        viewBox="0 0 16 16"
        width="16"
      >
        <desc>
          Example icon graphic
        </desc>
        <path
          d="M9 12h2l-3 3-3-3h2V7h2v5zm3-8c0-.44-.91-3-4.5-3C5.08 1 3 2.92 3 5 1.02 5 0 6.52 0 8c0 1.53 1 3 3 3h3V9.7H3C1.38 9.7 1.3 8.28 1.3 8c0-.17.05-1.7 1.7-1.7h1.3V5c0-1.39 1.56-2.7 3.2-2.7 2.55 0 3.13 1.55 3.2 1.8v1.2H12c.81 0 2.7.22 2.7 2.2 0 2.09-2.25 2.2-2.7 2.2h-2V11h2c2.08 0 4-1.16 4-3.5C16 5.06 14.08 4 12 4z"
          fill="currentColor"
          fillRule="evenodd"
        />
      </svg>
      Icon Left
    </button>
  </div>,
  <div
    style={
      Object {
        "marginTop": 16,
      }
    }
  >
    <button
      className="btn primary"
      disabled={false}
      type="button"
    >
      Icon Right
      <svg
        aria-hidden="true"
        className="btn-icon"
        height="16"
        role="img"
        version="1.1"
        viewBox="0 0 16 16"
        width="16"
      >
        <desc>
          Example icon graphic
        </desc>
        <path
          d="M9 12h2l-3 3-3-3h2V7h2v5zm3-8c0-.44-.91-3-4.5-3C5.08 1 3 2.92 3 5 1.02 5 0 6.52 0 8c0 1.53 1 3 3 3h3V9.7H3C1.38 9.7 1.3 8.28 1.3 8c0-.17.05-1.7 1.7-1.7h1.3V5c0-1.39 1.56-2.7 3.2-2.7 2.55 0 3.13 1.55 3.2 1.8v1.2H12c.81 0 2.7.22 2.7 2.2 0 2.09-2.25 2.2-2.7 2.2h-2V11h2c2.08 0 4-1.16 4-3.5C16 5.06 14.08 4 12 4z"
          fill="currentColor"
          fillRule="evenodd"
        />
      </svg>
    </button>
  </div>,
]
`;

exports[`Storyshots AG—React/Card All 1`] = `
Array [
  <div
    className="card"
  >
    <div
      style={
        Object {
          "padding": 24,
        }
      }
    >
      Default
    </div>
    <div
      style={
        Object {
          "padding": 24,
        }
      }
    >
      Card
    </div>
  </div>,
  <div
    className="card cardStacked"
  >
    <div
      style={
        Object {
          "padding": 24,
        }
      }
    >
      Stacked
    </div>
    <div
      style={
        Object {
          "padding": 24,
        }
      }
    >
      Card
    </div>
  </div>,
  <div
    className="card cardAnimated cardStacked"
  >
    <div
      style={
        Object {
          "padding": 24,
        }
      }
    >
      Animated & Stacked
    </div>
    <div
      style={
        Object {
          "padding": 24,
        }
      }
    >
      Card
    </div>
  </div>,
  <div
    className="cardBase"
  >
    <div
      style={
        Object {
          "padding": 24,
        }
      }
    >
      Base Card
    </div>
    <div
      style={
        Object {
          "padding": 24,
        }
      }
    >
      No Skin
    </div>
  </div>,
  <div
    className="card foo-bar"
  >
    <div
      style={
        Object {
          "padding": 24,
        }
      }
    >
      Custom CSS Class
    </div>
    <div
      style={
        Object {
          "padding": 24,
        }
      }
    >
      Inspect to see foo-bar
    </div>
  </div>,
]
`;

exports[`Storyshots AG—React/ChoiceInput All 1`] = `
Array [
  <fieldset
    className="checkbox-group"
  >
    <legend
      className="checkbox-legend "
    >
      Checkbox legend
    </legend>
    <label
      className="checkbox-label-wrap"
      disabled={false}
    >
      <input
        checked={false}
        className="checkbox"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="daily"
      />
      <span
        className="checkbox-label"
      >
        Daily
      </span>
    </label>
    <label
      className="checkbox-label-wrap"
      disabled={false}
    >
      <input
        checked={false}
        className="checkbox"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="weekly"
      />
      <span
        className="checkbox-label"
      >
        Weekly
      </span>
    </label>
    <label
      className="checkbox-label-wrap"
      disabled={false}
    >
      <input
        checked={false}
        className="checkbox"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="monthly"
      />
      <span
        className="checkbox-label"
      >
        Monthly
      </span>
    </label>
  </fieldset>,
  <fieldset
    className="checkbox-group"
  >
    <legend
      className="checkbox-legend "
    >
      Checkbox disabled
    </legend>
    <label
      className="checkbox-label-wrap"
      disabled={true}
    >
      <input
        checked={false}
        className="checkbox disabled"
        disabled={true}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="daily"
      />
      <span
        className="checkbox-label"
      >
        Daily
      </span>
    </label>
    <label
      className="checkbox-label-wrap"
      disabled={true}
    >
      <input
        checked={false}
        className="checkbox disabled"
        disabled={true}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="weekly"
      />
      <span
        className="checkbox-label"
      >
        Weekly
      </span>
    </label>
    <label
      className="checkbox-label-wrap"
      disabled={true}
    >
      <input
        checked={false}
        className="checkbox disabled"
        disabled={true}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="monthly"
      />
      <span
        className="checkbox-label"
      >
        Monthly
      </span>
    </label>
  </fieldset>,
  <fieldset
    className="checkbox-group"
  >
    <legend
      className="checkbox-legend "
    >
      Checkbox specific options disabled
    </legend>
    <label
      className="checkbox-label-wrap"
      disabled={false}
    >
      <input
        checked={false}
        className="checkbox"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="daily"
      />
      <span
        className="checkbox-label"
      >
        Daily
      </span>
    </label>
    <label
      className="checkbox-label-wrap"
      disabled={true}
    >
      <input
        checked={false}
        className="checkbox"
        disabled={true}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="weekly"
      />
      <span
        className="checkbox-label"
      >
        Weekly
      </span>
    </label>
    <label
      className="checkbox-label-wrap"
      disabled={true}
    >
      <input
        checked={false}
        className="checkbox"
        disabled={true}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="monthly"
      />
      <span
        className="checkbox-label"
      >
        Monthly
      </span>
    </label>
  </fieldset>,
  <fieldset
    className="checkbox-group checkbox-group-hidden"
  >
    <legend
      className="checkbox-legend screenreader-only"
    >
      Checkbox fieldset hidden
    </legend>
    <label
      className="checkbox-label-wrap"
      disabled={false}
    >
      <input
        checked={false}
        className="checkbox"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="daily"
      />
      <span
        className="checkbox-label"
      >
        Daily
      </span>
    </label>
    <label
      className="checkbox-label-wrap"
      disabled={false}
    >
      <input
        checked={false}
        className="checkbox"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="weekly"
      />
      <span
        className="checkbox-label"
      >
        Weekly
      </span>
    </label>
    <label
      className="checkbox-label-wrap"
      disabled={false}
    >
      <input
        checked={false}
        className="checkbox"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="monthly"
      />
      <span
        className="checkbox-label"
      >
        Monthly
      </span>
    </label>
  </fieldset>,
  <fieldset
    className="checkbox-group"
  >
    <legend
      className="checkbox-legend "
    >
      Checkbox inline
    </legend>
    <label
      className="checkbox-label-wrap checkbox-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="checkbox"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="daily"
      />
      <span
        className="checkbox-label"
      >
        Daily
      </span>
    </label>
    <label
      className="checkbox-label-wrap checkbox-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="checkbox"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="weekly"
      />
      <span
        className="checkbox-label"
      >
        Weekly
      </span>
    </label>
    <label
      className="checkbox-label-wrap checkbox-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="checkbox"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="monthly"
      />
      <span
        className="checkbox-label"
      >
        Monthly
      </span>
    </label>
  </fieldset>,
  <fieldset
    className="checkbox-group"
  >
    <legend
      className="checkbox-legend "
    >
      Checkbox small
    </legend>
    <label
      className="checkbox-label-wrap checkbox-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="checkbox checkbox-small"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="daily"
      />
      <span
        className="checkbox-label checkbox-label-small"
      >
        Daily
      </span>
    </label>
    <label
      className="checkbox-label-wrap checkbox-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="checkbox checkbox-small"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="weekly"
      />
      <span
        className="checkbox-label checkbox-label-small"
      >
        Weekly
      </span>
    </label>
    <label
      className="checkbox-label-wrap checkbox-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="checkbox checkbox-small"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="monthly"
      />
      <span
        className="checkbox-label checkbox-label-small"
      >
        Monthly
      </span>
    </label>
  </fieldset>,
  <fieldset
    className="checkbox-group checkbox-group-large"
  >
    <legend
      className="checkbox-legend "
    >
      Checkbox large
    </legend>
    <label
      className="checkbox-label-wrap checkbox-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="checkbox checkbox-large"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="daily"
      />
      <span
        className="checkbox-label checkbox-label-large"
      >
        Daily
      </span>
    </label>
    <label
      className="checkbox-label-wrap checkbox-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="checkbox checkbox-large"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="weekly"
      />
      <span
        className="checkbox-label checkbox-label-large"
      >
        Weekly
      </span>
    </label>
    <label
      className="checkbox-label-wrap checkbox-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="checkbox checkbox-large"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="monthly"
      />
      <span
        className="checkbox-label checkbox-label-large"
      >
        Monthly
      </span>
    </label>
  </fieldset>,
  <fieldset
    className="checkbox-group checkbox-group-large"
  >
    <legend
      className="checkbox-legend "
    >
      Checkbox prechecked options
    </legend>
    <label
      className="checkbox-label-wrap checkbox-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={true}
        className="checkbox checkbox-large"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="daily"
      />
      <span
        className="checkbox-label checkbox-label-large"
      >
        Daily
      </span>
    </label>
    <label
      className="checkbox-label-wrap checkbox-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={true}
        className="checkbox checkbox-large"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="weekly"
      />
      <span
        className="checkbox-label checkbox-label-large"
      >
        Weekly
      </span>
    </label>
    <label
      className="checkbox-label-wrap checkbox-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="checkbox checkbox-large"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="checkbox"
        value="monthly"
      />
      <span
        className="checkbox-label checkbox-label-large"
      >
        Monthly
      </span>
    </label>
  </fieldset>,
  <fieldset
    className="radio-group"
  >
    <legend
      className="radio-legend "
    >
      Radio legend
    </legend>
    <label
      className="radio-label-wrap"
      disabled={false}
    >
      <input
        checked={false}
        className="radio"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="radio"
        value="daily"
      />
      <span
        className="radio-label"
      >
        Daily
      </span>
    </label>
    <label
      className="radio-label-wrap"
      disabled={false}
    >
      <input
        checked={false}
        className="radio"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="radio"
        value="weekly"
      />
      <span
        className="radio-label"
      >
        Weekly
      </span>
    </label>
    <label
      className="radio-label-wrap"
      disabled={false}
    >
      <input
        checked={false}
        className="radio"
        disabled={false}
        name="frequency"
        onChange={[Function]}
        type="radio"
        value="monthly"
      />
      <span
        className="radio-label"
      >
        Monthly
      </span>
    </label>
  </fieldset>,
  <fieldset
    className="radio-group"
  >
    <legend
      className="radio-legend "
    >
      Radio disabled
    </legend>
    <label
      className="radio-label-wrap"
      disabled={true}
    >
      <input
        checked={false}
        className="radio disabled"
        disabled={true}
        name="frequency"
        onChange={[Function]}
        type="radio"
        value="daily"
      />
      <span
        className="radio-label"
      >
        Daily
      </span>
    </label>
    <label
      className="radio-label-wrap"
      disabled={true}
    >
      <input
        checked={false}
        className="radio disabled"
        disabled={true}
        name="frequency"
        onChange={[Function]}
        type="radio"
        value="weekly"
      />
      <span
        className="radio-label"
      >
        Weekly
      </span>
    </label>
    <label
      className="radio-label-wrap"
      disabled={true}
    >
      <input
        checked={false}
        className="radio disabled"
        disabled={true}
        name="frequency"
        onChange={[Function]}
        type="radio"
        value="monthly"
      />
      <span
        className="radio-label"
      >
        Monthly
      </span>
    </label>
  </fieldset>,
  <fieldset
    className="radio-group"
  >
    <legend
      className="radio-legend "
    >
      Radio specific options disabled
    </legend>
    <label
      className="radio-label-wrap"
      disabled={false}
    >
      <input
        checked={false}
        className="radio"
        disabled={false}
        name="numbers"
        onChange={[Function]}
        type="radio"
        value="one"
      />
      <span
        className="radio-label"
      >
        one
      </span>
    </label>
    <label
      className="radio-label-wrap"
      disabled={true}
    >
      <input
        checked={false}
        className="radio"
        disabled={true}
        name="numbers"
        onChange={[Function]}
        type="radio"
        value="two"
      />
      <span
        className="radio-label"
      >
        two
      </span>
    </label>
    <label
      className="radio-label-wrap"
      disabled={false}
    >
      <input
        checked={false}
        className="radio"
        disabled={false}
        name="numbers"
        onChange={[Function]}
        type="radio"
        value="three"
      />
      <span
        className="radio-label"
      >
        three
      </span>
    </label>
  </fieldset>,
  <fieldset
    className="radio-group radio-group-hidden"
  >
    <legend
      className="radio-legend screenreader-only"
    >
      Radio fieldset hidden
    </legend>
    <label
      className="radio-label-wrap"
      disabled={false}
    >
      <input
        checked={false}
        className="radio"
        disabled={false}
        name="es"
        onChange={[Function]}
        type="radio"
        value="uno"
      />
      <span
        className="radio-label"
      >
        uno
      </span>
    </label>
    <label
      className="radio-label-wrap"
      disabled={false}
    >
      <input
        checked={false}
        className="radio"
        disabled={false}
        name="es"
        onChange={[Function]}
        type="radio"
        value="dos"
      />
      <span
        className="radio-label"
      >
        dos
      </span>
    </label>
    <label
      className="radio-label-wrap"
      disabled={false}
    >
      <input
        checked={false}
        className="radio"
        disabled={false}
        name="es"
        onChange={[Function]}
        type="radio"
        value="tres"
      />
      <span
        className="radio-label"
      >
        tres
      </span>
    </label>
  </fieldset>,
  <fieldset
    className="radio-group"
  >
    <legend
      className="radio-legend "
    >
      Radio inline
    </legend>
    <label
      className="radio-label-wrap radio-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="radio"
        disabled={false}
        name="colors"
        onChange={[Function]}
        type="radio"
        value="blue"
      />
      <span
        className="radio-label"
      >
        Blue
      </span>
    </label>
    <label
      className="radio-label-wrap radio-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="radio"
        disabled={false}
        name="colors"
        onChange={[Function]}
        type="radio"
        value="red"
      />
      <span
        className="radio-label"
      >
        Red
      </span>
    </label>
    <label
      className="radio-label-wrap radio-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="radio"
        disabled={false}
        name="colors"
        onChange={[Function]}
        type="radio"
        value="silver"
      />
      <span
        className="radio-label"
      >
        Silver
      </span>
    </label>
  </fieldset>,
  <fieldset
    className="radio-group"
  >
    <legend
      className="radio-legend "
    >
      Radio small
    </legend>
    <label
      className="radio-label-wrap radio-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="radio radio-small"
        disabled={false}
        name="shape"
        onChange={[Function]}
        type="radio"
        value="square"
      />
      <span
        className="radio-label radio-label-small"
      >
        Square
      </span>
    </label>
    <label
      className="radio-label-wrap radio-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="radio radio-small"
        disabled={false}
        name="shape"
        onChange={[Function]}
        type="radio"
        value="circle"
      />
      <span
        className="radio-label radio-label-small"
      >
        Circle
      </span>
    </label>
  </fieldset>,
  <fieldset
    className="radio-group radio-group-large"
  >
    <legend
      className="radio-legend "
    >
      Radio large
    </legend>
    <label
      className="radio-label-wrap radio-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="radio radio-large"
        disabled={false}
        name="bands"
        onChange={[Function]}
        type="radio"
        value="bonjovi"
      />
      <span
        className="radio-label radio-label-large"
      >
        Bon Jovi
      </span>
    </label>
    <label
      className="radio-label-wrap radio-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="radio radio-large"
        disabled={false}
        name="bands"
        onChange={[Function]}
        type="radio"
        value="stones"
      />
      <span
        className="radio-label radio-label-large"
      >
        Rolling Stones
      </span>
    </label>
    <label
      className="radio-label-wrap radio-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="radio radio-large"
        disabled={false}
        name="bands"
        onChange={[Function]}
        type="radio"
        value="isleybros"
      />
      <span
        className="radio-label radio-label-large"
      >
        Isley Brothers
      </span>
    </label>
  </fieldset>,
  <fieldset
    className="radio-group radio-group-large"
  >
    <legend
      className="radio-legend "
    >
      Radio prechecked option
    </legend>
    <label
      className="radio-label-wrap radio-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="radio radio-large"
        disabled={false}
        name="solo"
        onChange={[Function]}
        type="radio"
        value="stevie"
      />
      <span
        className="radio-label radio-label-large"
      >
        Stevie Wonder
      </span>
    </label>
    <label
      className="radio-label-wrap radio-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={true}
        className="radio radio-large"
        disabled={false}
        name="solo"
        onChange={[Function]}
        type="radio"
        value="charlie"
      />
      <span
        className="radio-label radio-label-large"
      >
        Charlie Wilson
      </span>
    </label>
    <label
      className="radio-label-wrap radio-label-wrap-inline"
      disabled={false}
    >
      <input
        checked={false}
        className="radio radio-large"
        disabled={false}
        name="solo"
        onChange={[Function]}
        type="radio"
        value="whitney"
      />
      <span
        className="radio-label radio-label-large"
      >
        Whitney Houston
      </span>
    </label>
  </fieldset>,
]
`;

exports[`Storyshots AG—React/Grid Usage Examples 1`] = `
Array [
  <section>
    <h1>
      FlexGrid
    </h1>
    <p>
      <i>
        xs
      </i>
       = Extra Small.
      <i>
        sm
      </i>
       = Small.
      <i>
        md
      </i>
       = Medium.
      <i>
        lg
      </i>
       = Large.
      <i>
        xl
      </i>
       = Extra Large.
    </p>
    <div
      className="flexgrid-container"
    >
      <div
        className="DemoCol row"
      >
        <div
          className="col-xs-12 col-sm-4 col-lg-6"
        >
          <p
            className="Field"
          >
            xs={12} sm={4} lg={6}
          </p>
        </div>
        <div
          className="col-xs-12 col-sm-4 col-lg-6"
        >
          <p
            className="Field"
          >
            xs={12} sm={4} lg={6}
          </p>
        </div>
        <div
          className="col-xs-12 col-sm-4 col-lg-3"
        >
          <p
            className="Field"
          >
            xs={12} sm={4} lg={3}
          </p>
        </div>
        <div
          className="col-xs-12 col-sm-4 col-lg-3"
        >
          <p
            className="Field"
          >
            xs={12} sm={4} lg={3}
          </p>
        </div>
        <div
          className="col-xs-12 col-sm-4 col-lg-3"
        >
          <p
            className="Field"
          >
            xs={12} sm={4} lg={3}
          </p>
        </div>
        <div
          className="col-xs-12 col-sm-4 col-lg-3"
        >
          <p
            className="Field"
          >
            xs={12} sm={4} lg={3}
          </p>
        </div>
      </div>
    </div>
  </section>,
  <section>
    <h1>
      Complex
    </h1>
    <p>
      Not that you would want this level of complexity, but it is available:
    </p>
    <div
      className="flexgrid-container"
    >
      <div
        className="DemoCol row"
      >
        <div
          className="col-xs-12 col-sm-8 col-md-4 col-lg-3 col-xl-2"
        >
          <p
            className="Field"
          >
            xs={12} sm={8} md={4} lg={3} xl={2}
          </p>
        </div>
        <div
          className="col-xs-12 col-sm-8 col-md-4 col-lg-3 col-xl-2"
        >
          <p
            className="Field"
          >
            xs={12} sm={8} md={4} lg={3} xl={2}
          </p>
        </div>
        <div
          className="col-xs-12 col-sm-8 col-md-4 col-lg-3 col-xl-2"
        >
          <p
            className="Field"
          >
            xs={12} sm={8} md={4} lg={3} xl={2}
          </p>
        </div>
      </div>
    </div>
  </section>,
  <section>
    <h1>
      Offsets
    </h1>
    <div
      className="flexgrid-container"
    >
      <div
        className="DemoCol row"
      >
        <div
          className="col-sm-2"
          style={
            Object {
              "border": "1px solid #f7cac9",
            }
          }
        >
          <p>
            sm=
            2
          </p>
        </div>
        <div
          className="col-sm-2 col-sm-offset-1"
          style={
            Object {
              "border": "1px solid #39cccc",
            }
          }
        >
          <p>
            sm=
            2
             smOffset=
            1
          </p>
        </div>
        <div
          className="col-sm-2 col-sm-offset-1"
          style={
            Object {
              "border": "1px solid #7fdbff",
            }
          }
        >
          <p>
            sm=
            2
             smOffset=
            1
          </p>
        </div>
        <div
          className="col-sm-2 col-sm-offset-1"
          style={
            Object {
              "border": "1px solid #ff6f61",
            }
          }
        >
          <p>
            sm=
            2
             smOffset=
            1
          </p>
        </div>
      </div>
    </div>
    <p>
      See 
      <a
        href="https://evgenyrodionov.github.io/flexboxgrid2/"
      >
        flexboxgrid2
      </a>
       for more examples.
    </p>
  </section>,
]
`;

exports[`Storyshots AG—React/Header Header And Nav 1`] = `
<header
  className="header custom-global-css-class"
>
  <div
    className="headerContent"
  >
    <div
      style={
        Object {
          "padding": 24,
        }
      }
    >
      LOGO
    </div>
    <nav>
      <ul
        className="headerNav"
      >
        <li
          className="headerNavItem"
        >
          <a
            href="#"
            style={
              Object {
                "color": "#333333",
                "textDecoration": "none",
              }
            }
          >
            Home
          </a>
        </li>
        <li
          className="headerNavItem"
        >
          <a
            href="#"
            style={
              Object {
                "color": "#333333",
                "textDecoration": "none",
              }
            }
          >
            Services
          </a>
        </li>
        <li
          className="headerNavItem"
        >
          <a
            href="#"
            style={
              Object {
                "color": "#333333",
                "textDecoration": "none",
              }
            }
          >
            About
          </a>
        </li>
        <li
          className="headerNavItem"
        >
          <a
            href="#"
            style={
              Object {
                "color": "#333333",
                "textDecoration": "none",
              }
            }
          >
            Contact
          </a>
        </li>
      </ul>
    </nav>
  </div>
</header>
`;

exports[`Storyshots AG—React/Header Header Sticky 1`] = `
<header
  className="header sticky"
>
  <div
    className="headerContent"
  >
    <div
      style={
        Object {
          "padding": 24,
        }
      }
    >
      Logo
    </div>
    <nav>
      <ul
        className="headerNav"
      >
        <li
          className="headerNavItem"
        >
          <a
            href="#"
            style={
              Object {
                "color": "#333333",
                "textDecoration": "none",
              }
            }
          >
            Sticky
          </a>
        </li>
      </ul>
    </nav>
  </div>
</header>
`;

exports[`Storyshots AG—React/Header Header Unskinned 1`] = `
<header
  className="headerBase"
>
  <div
    className="headerContent"
  >
    <div
      style={
        Object {
          "padding": 24,
        }
      }
    >
      NO-Skinz
    </div>
    <nav>
      <ul
        className="headerNav"
      >
        <li
          className="headerNavItem"
        >
          <a
            href="#"
            style={
              Object {
                "color": "#333333",
                "textDecoration": "none",
              }
            }
          >
            Not Skinned
          </a>
        </li>
      </ul>
    </nav>
  </div>
</header>
`;

exports[`Storyshots AG—React/Input All Inputs 1`] = `
Array [
  <div
    className="width-full"
  >
    <label
      className="label"
      htmlFor="myid-3f2f5-bdb6-e307-f32f-fc8313045504"
    >
      Default input
    </label>
    <input
      className="input"
      defaultValue=""
      disabled={false}
      id="myid-3f2f5-bdb6-e307-f32f-fc8313045504"
      name="myid-3f2f5-bdb6-e307-f32f-fc8313045504"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      type="text"
    />
  </div>,
  <div
    className="width-full"
  >
    <label
      className="label labelInline"
      htmlFor="myid-6070ba7-63d5-d3c1-5d-83138481e5cf"
    >
      Inline input
    </label>
    <input
      className="input inputInline"
      defaultValue=""
      disabled={false}
      id="myid-6070ba7-63d5-d3c1-5d-83138481e5cf"
      name="myid-6070ba7-63d5-d3c1-5d-83138481e5cf"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      type="text"
    />
  </div>,
  <div
    className="width-full"
  >
    <label
      className="label"
      htmlFor="myid-ac63b56-b7cf-ed31-fea7-fd15c68482c3"
    >
      Rounded input
    </label>
    <input
      className="input rounded"
      defaultValue=""
      disabled={false}
      id="myid-ac63b56-b7cf-ed31-fea7-fd15c68482c3"
      name="myid-ac63b56-b7cf-ed31-fea7-fd15c68482c3"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      type="text"
    />
  </div>,
  <div
    className="width-full"
  >
    <label
      className="label"
      htmlFor="myid-512e47-eb6-8e7-8462-828eef2d2ec"
    >
      Underlined input
    </label>
    <input
      className="input underlined"
      defaultValue=""
      disabled={false}
      id="myid-512e47-eb6-8e7-8462-828eef2d2ec"
      name="myid-512e47-eb6-8e7-8462-828eef2d2ec"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      type="text"
    />
  </div>,
  <div
    className="width-full"
  >
    <label
      className="label"
      htmlFor="myid-88247bc-b1e6-8b23-8be-311a51b3b0c2"
    >
      Underlined with background input
    </label>
    <input
      className="input underlined underlinedWithBackground"
      defaultValue=""
      disabled={false}
      id="myid-88247bc-b1e6-8b23-8be-311a51b3b0c2"
      name="myid-88247bc-b1e6-8b23-8be-311a51b3b0c2"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      type="text"
    />
  </div>,
  <div
    className="width-full"
  >
    <label
      className="label labelLarge"
      htmlFor="myid-5ddebf4-8d6-3778-801b-a1232c8088a4"
    >
      Large input
    </label>
    <input
      className="input inputLarge"
      defaultValue=""
      disabled={false}
      id="myid-5ddebf4-8d6-3778-801b-a1232c8088a4"
      name="myid-5ddebf4-8d6-3778-801b-a1232c8088a4"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      type="text"
    />
  </div>,
  <div
    className="width-full"
  >
    <label
      className="label labelSmall"
      htmlFor="myid-cee7b7-a6ef-5bf0-3f70-801143a4ae2"
    >
      Small input
    </label>
    <input
      className="input inputSmall"
      defaultValue=""
      disabled={false}
      id="myid-cee7b7-a6ef-5bf0-3f70-801143a4ae2"
      name="myid-cee7b7-a6ef-5bf0-3f70-801143a4ae2"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      type="text"
    />
  </div>,
  <div
    className="width-full"
  >
    <label
      className="label"
      htmlFor="myid-b3de14-468-4a42-551f-40a1f68728f"
    >
      Disabled
    </label>
    <input
      className="input disabled"
      defaultValue=""
      disabled={true}
      id="myid-b3de14-468-4a42-551f-40a1f68728f"
      name="myid-b3de14-468-4a42-551f-40a1f68728f"
      type="text"
    />
  </div>,
  <div
    className="width-full"
  >
    <label
      className="label"
      htmlFor="myid-0e4c1e5-7b23-5817-4d53-0cc081bc1ed8"
    >
      Input with addons
    </label>
    <div
      className="inputAddonContainer"
    >
      <div
        className="leftAddon"
      >
        <div>
          <span>
            L
          </span>
        </div>
      </div>
      <input
        className="input inputHasLeftAddon inputHasRightAddon"
        defaultValue=""
        disabled={false}
        id="myid-0e4c1e5-7b23-5817-4d53-0cc081bc1ed8"
        name="myid-0e4c1e5-7b23-5817-4d53-0cc081bc1ed8"
        type="text"
      />
      <div
        className="rightAddon"
      >
        <div>
          <span>
            R
          </span>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`Storyshots AG—React/Input Error And Help Text 1`] = `
Array [
  <div
    className="width-full"
  >
    <label
      className="label"
      htmlFor="myid-84c3532-4a03-d304-8b73-81416f0582f3"
    >
      Help text input
    </label>
    <input
      className="input"
      defaultValue=""
      disabled={false}
      id="myid-84c3532-4a03-d304-8b73-81416f0582f3"
      name="myid-84c3532-4a03-d304-8b73-81416f0582f3"
      type="text"
    />
    <span
      className="fieldHelp"
    >
      Some useful help text.
    </span>
  </div>,
  <div
    className="width-full"
  >
    <label
      className="label labelError"
      htmlFor="myid-42d645-4e21-6fc8-b5dd-58f70acd1fa"
    >
      Invalid input
    </label>
    <input
      className="input invalid"
      defaultValue=""
      disabled={false}
      id="myid-42d645-4e21-6fc8-b5dd-58f70acd1fa"
      name="myid-42d645-4e21-6fc8-b5dd-58f70acd1fa"
      type="text"
    />
    <span
      aria-live="polite"
      className="fieldError"
      role="status"
    >
      This field has errors.
    </span>
  </div>,
  <div
    className="width-full"
  >
    <label
      className="label labelError labelSmall"
      htmlFor="myid-232d267-b0e-8f6-2516-f4ef8bd2547"
    >
      Invalid small input
    </label>
    <input
      className="input invalid inputSmall"
      defaultValue=""
      disabled={false}
      id="myid-232d267-b0e-8f6-2516-f4ef8bd2547"
      name="myid-232d267-b0e-8f6-2516-f4ef8bd2547"
      type="text"
    />
    <span
      aria-live="polite"
      className="fieldErrorSmall"
      role="status"
    >
      This field has errors.
    </span>
  </div>,
  <div
    className="width-full"
  >
    <label
      className="label labelError labelLarge"
      htmlFor="myid-b7d8321-1d33-1f58-72d8-581dd6546dc8"
    >
      Invalid large input
    </label>
    <input
      className="input invalid inputLarge"
      defaultValue=""
      disabled={false}
      id="myid-b7d8321-1d33-1f58-72d8-581dd6546dc8"
      name="myid-b7d8321-1d33-1f58-72d8-581dd6546dc8"
      type="text"
    />
    <span
      aria-live="polite"
      className="fieldErrorLarge"
      role="status"
    >
      This field has errors.
    </span>
  </div>,
]
`;

exports[`Storyshots AG—React/Input Textareas 1`] = `
Array [
  <div
    className="width-full"
  >
    <label
      className="label"
      htmlFor="myid-e07e3c7-7305-fe62-1535-0ce0db33bb0e"
    >
      Textarea
    </label>
    <textarea
      className="input"
      defaultValue=""
      disabled={false}
      id="myid-e07e3c7-7305-fe62-1535-0ce0db33bb0e"
      name="myid-e07e3c7-7305-fe62-1535-0ce0db33bb0e"
    />
  </div>,
  <div
    className="width-full"
  >
    <label
      className="label labelSmall"
      htmlFor="myid-50a0218-b2f-c45-1253-14ff0f7c3ff"
    >
      Textarea small
    </label>
    <textarea
      className="input inputSmall"
      cols="5"
      defaultValue=""
      disabled={false}
      id="myid-50a0218-b2f-c45-1253-14ff0f7c3ff"
      name="myid-50a0218-b2f-c45-1253-14ff0f7c3ff"
      rows="10"
    />
  </div>,
  <div
    className="width-full"
  >
    <label
      className="label labelLarge"
      htmlFor="myid-2b315c1-377-d328-c313-8a84fbf40c"
    >
      Textarea large
    </label>
    <textarea
      className="input inputLarge"
      cols="5"
      defaultValue=""
      disabled={false}
      id="myid-2b315c1-377-d328-c313-8a84fbf40c"
      name="myid-2b315c1-377-d328-c313-8a84fbf40c"
      rows="10"
    />
  </div>,
]
`;

exports[`Storyshots AG—React/Progress All 1`] = `
Array [
  <progress
    className="progressBar"
    max={100}
    value={30}
  />,
  <progress
    className="progressBar foo-bar"
    max={100}
    value={30}
  />,
  <progress
    className="progressBar foo-bar"
    max={100}
    value={0}
  />,
  <progress
    className="progressBar foo-bar"
    max={100}
    value={100}
  />,
]
`;

exports[`Storyshots AG—React/Switch All 1`] = `
Array [
  <label
    className="switch-container"
    htmlFor="1"
  >
    <span
      className="switch-label"
    >
      Switch small
    </span>
    <input
      checked={false}
      className="switch-input"
      disabled={false}
      id="1"
      onChange={[Function]}
      onClick={[Function]}
      onKeyPress={[Function]}
      role="switch"
      type="checkbox"
    />
    <span
      aria-hidden="true"
      className="switch switch-small"
    />
  </label>,
  <label
    className="switch-container"
    htmlFor="2"
  >
    <span
      className="switch-label"
    >
      Switch default
    </span>
    <input
      checked={false}
      className="switch-input"
      disabled={false}
      id="2"
      onChange={[Function]}
      onClick={[Function]}
      onKeyPress={[Function]}
      role="switch"
      type="checkbox"
    />
    <span
      aria-hidden="true"
      className="switch"
    />
  </label>,
  <label
    className="switch-container"
    htmlFor="3"
  >
    <span
      className="switch-label"
    >
      Switch large
    </span>
    <input
      checked={false}
      className="switch-input"
      disabled={false}
      id="3"
      onChange={[Function]}
      onClick={[Function]}
      onKeyPress={[Function]}
      role="switch"
      type="checkbox"
    />
    <span
      aria-hidden="true"
      className="switch switch-large"
    />
  </label>,
  <label
    className="switch-container"
    htmlFor="4"
  >
    <span
      className="switch-label"
    >
      Switch prechecked
    </span>
    <input
      checked={true}
      className="switch-input"
      disabled={false}
      id="4"
      onChange={[Function]}
      onClick={[Function]}
      onKeyPress={[Function]}
      role="switch"
      type="checkbox"
    />
    <span
      aria-hidden="true"
      className="switch switch-large"
    />
  </label>,
  <label
    className="switch-container disabled"
    htmlFor="5"
  >
    <span
      className="switch-label"
    >
      Switch disabled
    </span>
    <input
      checked={true}
      className="switch-input"
      disabled={true}
      id="5"
      onClick={[Function]}
      onKeyPress={[Function]}
      role="switch"
      type="checkbox"
    />
    <span
      aria-hidden="true"
      className="switch switch-large"
    />
  </label>,
  <label
    className="switch-container"
    htmlFor="6"
  >
    <span
      className="switch-label"
    >
      Switch action
    </span>
    <input
      checked={false}
      className="switch-input"
      disabled={false}
      id="6"
      onChange={[Function]}
      onClick={[Function]}
      onKeyPress={[Function]}
      role="switch"
      type="checkbox"
    />
    <span
      aria-hidden="true"
      className="switch switch-action switch-large"
    />
  </label>,
  <label
    className="switch-container"
    htmlFor="7"
  >
    <span
      className="switch-label"
    >
      Switch bordered
    </span>
    <input
      checked={false}
      className="switch-input"
      disabled={false}
      id="7"
      onChange={[Function]}
      onClick={[Function]}
      onKeyPress={[Function]}
      role="switch"
      type="checkbox"
    />
    <span
      aria-hidden="true"
      className="switch switch-border switch-large"
    />
  </label>,
  <label
    className="switch-container"
    htmlFor="8"
  >
    <span
      className="switch-label"
    >
      Switch bordered action
    </span>
    <input
      checked={false}
      className="switch-input"
      disabled={false}
      id="8"
      onChange={[Function]}
      onClick={[Function]}
      onKeyPress={[Function]}
      role="switch"
      type="checkbox"
    />
    <span
      aria-hidden="true"
      className="switch switch-border switch-action switch-large"
    />
  </label>,
  <label
    className="switch-container switch-right"
    htmlFor="9"
  >
    <input
      checked={false}
      className="switch-input"
      disabled={false}
      id="9"
      onChange={[Function]}
      onClick={[Function]}
      onKeyPress={[Function]}
      role="switch"
      type="checkbox"
    />
    <span
      aria-hidden="true"
      className="switch"
    />
    <span
      className="switch-label"
    >
      Switch label on right
    </span>
  </label>,
  <label
    className="switch-container switch-right"
    htmlFor="10"
  >
    <input
      checked={false}
      className="switch-input"
      disabled={false}
      id="10"
      onChange={[Function]}
      onClick={[Function]}
      onKeyPress={[Function]}
      role="switch"
      type="checkbox"
    />
    <span
      aria-hidden="true"
      className="switch switch-border"
    />
    <span
      className="switch-label"
    >
      Switch right bordered
    </span>
  </label>,
  <label
    className="switch-container switch-right"
    htmlFor="11"
  >
    <input
      checked={false}
      className="switch-input"
      disabled={false}
      id="11"
      onChange={[Function]}
      onClick={[Function]}
      onKeyPress={[Function]}
      role="switch"
      type="checkbox"
    />
    <span
      aria-hidden="true"
      className="switch switch-action"
    />
    <span
      className="switch-label"
    >
      Switch right action
    </span>
  </label>,
  <label
    className="switch-container switch-right"
    htmlFor="12"
  >
    <input
      checked={false}
      className="switch-input"
      disabled={false}
      id="12"
      onChange={[Function]}
      onClick={[Function]}
      onKeyPress={[Function]}
      role="switch"
      type="checkbox"
    />
    <span
      aria-hidden="true"
      className="switch switch-border switch-action"
    />
    <span
      className="switch-label"
    >
      Switch right action bordered
    </span>
  </label>,
  <label
    className="switch-container switch-right disabled"
    htmlFor="13"
  >
    <input
      checked={false}
      className="switch-input"
      disabled={true}
      id="13"
      onClick={[Function]}
      onKeyPress={[Function]}
      role="switch"
      type="checkbox"
    />
    <span
      aria-hidden="true"
      className="switch switch-border switch-action"
    />
    <span
      className="switch-label"
    >
      Switch right action bordered disabled
    </span>
  </label>,
]
`;

exports[`Storyshots AG—React/Tabs Borderless 1`] = `
Array [
  <div
    aria-label="Tabs"
    className="tabList tabListBorderless"
    role="tablist"
  >
    <button
      aria-selected={true}
      className="tabItem tabButton active tabButtonBorderless tabButtonLarge"
      onClick={[Function]}
      role="tab"
    >
      Tab 1
    </button>
    <button
      aria-selected={false}
      className="tabItem tabButton tabButtonBorderless tabButtonLarge"
      onClick={[Function]}
      role="tab"
    >
      Tab 2
    </button>
    <button
      aria-selected={false}
      className="tabItem tabButton tabButtonBorderless tabButtonLarge"
      onClick={[Function]}
      role="tab"
    >
      Tab 3
    </button>
  </div>,
  <div
    aria-label="Tab 1"
    className="pane"
    role="tabpanel"
  >
    <p>
      Tab 1 content
    </p>
  </div>,
]
`;

exports[`Storyshots AG—React/Tabs Custom Buttons Example 1`] = `
Array [
  <div
    aria-label="Tabs"
    className="tabList tabListBorderless"
    role="tablist"
  >
    <button
      className="btn bordered 
        customTabButton active 
      "
      disabled={false}
      onClick={[Function]}
      role="tab"
      type="button"
    >
      Tab 1
    </button>
    <button
      className="btn bordered 
        customTabButton active 
      "
      disabled={false}
      onClick={[Function]}
      role="tab"
      type="button"
    >
      Tab 2
    </button>
    <button
      className="btn bordered 
        customTabButton active 
      "
      disabled={false}
      onClick={[Function]}
      role="tab"
      type="button"
    >
      Tab 3
    </button>
  </div>,
  <div
    aria-label="Tab 1"
    className="pane"
    role="tabpanel"
  >
    <p>
      Tab 1 content
    </p>
  </div>,
]
`;

exports[`Storyshots AG—React/Tabs Custom SVG Tab Buttons 1`] = `
Array [
  <div
    aria-label="Tabs"
    className="tabList tabListBorderless"
    role="tablist"
  >
    <button
      className="btn bordered 
        customTabButton active reactButton
      "
      disabled={false}
      onClick={[Function]}
      role="tab"
      type="button"
    >
      <svg
        viewBox="0 0 841.9 595.3"
        width="96"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="#61DAFB"
        >
          <path
            d="M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z"
          />
          <circle
            cx="420.9"
            cy="296.5"
            r="45.7"
          />
          <path
            d="M520.5 78.1z"
          />
        </g>
      </svg>
    </button>
    <button
      className="btn bordered 
        customTabButton active vueButton
      "
      disabled={false}
      onClick={[Function]}
      role="tab"
      type="button"
    >
      <svg
        viewBox="0 0 261.76 226.69"
        width="54"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M161.096.001l-30.224 52.35L100.647.002H-.005L130.872 226.69 261.749 0z"
          fill="#41b883"
        />
        <path
          d="M161.096.001l-30.224 52.35L100.647.002H52.346l78.526 136.01L209.398.001z"
          fill="#34495e"
        />
      </svg>
    </button>
    <button
      className="btn bordered 
        customTabButton active angularButton
      "
      disabled={false}
      onClick={[Function]}
      role="tab"
      type="button"
    >
      <svg
        viewBox="0 0 250 250"
        width="68"
      >
        <path
          d="M125 30L31.9 63.2l14.2 123.1L125 230l78.9-43.7 14.2-123.1z"
          fill="#dd0031"
        />
        <path
          d="M125 30v22.2-.1V230l78.9-43.7 14.2-123.1L125 30z"
          fill="#c3002f"
        />
        <path
          d="M125 52.1L66.8 182.6h21.7l11.7-29.2h49.4l11.7 29.2H183L125 52.1zm17 83.3h-34l17-40.9 17 40.9z"
          fill="#fff"
        />
      </svg>
    </button>
    <button
      className="btn bordered 
        customTabButton active svelteButton
      "
      disabled={false}
      onClick={[Function]}
      role="tab"
      type="button"
    >
      <svg
        viewBox="0 0 98.1 118"
        width="48"
      >
        <path
          d="M91.8 15.6C80.9-.1 59.2-4.7 43.6 5.2L16.1 22.8C8.6 27.5 3.4 35.2 1.9 43.9c-1.3 7.3-.2 14.8 3.3 21.3-2.4 3.6-4 7.6-4.7 11.8-1.6 8.9.5 18.1 5.7 25.4 11 15.7 32.6 20.3 48.2 10.4l27.5-17.5c7.5-4.7 12.7-12.4 14.2-21.1 1.3-7.3.2-14.8-3.3-21.3 2.4-3.6 4-7.6 4.7-11.8 1.7-9-.4-18.2-5.7-25.5"
          fill="#ff3e00"
        />
        <path
          d="M40.9 103.9c-8.9 2.3-18.2-1.2-23.4-8.7-3.2-4.4-4.4-9.9-3.5-15.3.2-.9.4-1.7.6-2.6l.5-1.6 1.4 1c3.3 2.4 6.9 4.2 10.8 5.4l1 .3-.1 1c-.1 1.4.3 2.9 1.1 4.1 1.6 2.3 4.4 3.4 7.1 2.7.6-.2 1.2-.4 1.7-.7L65.5 72c1.4-.9 2.3-2.2 2.6-3.8.3-1.6-.1-3.3-1-4.6-1.6-2.3-4.4-3.3-7.1-2.6-.6.2-1.2.4-1.7.7l-10.5 6.7c-1.7 1.1-3.6 1.9-5.6 2.4-8.9 2.3-18.2-1.2-23.4-8.7-3.1-4.4-4.4-9.9-3.4-15.3.9-5.2 4.1-9.9 8.6-12.7l27.5-17.5c1.7-1.1 3.6-1.9 5.6-2.5 8.9-2.3 18.2 1.2 23.4 8.7 3.2 4.4 4.4 9.9 3.5 15.3-.2.9-.4 1.7-.7 2.6l-.5 1.6-1.4-1c-3.3-2.4-6.9-4.2-10.8-5.4l-1-.3.1-1c.1-1.4-.3-2.9-1.1-4.1-1.6-2.3-4.4-3.3-7.1-2.6-.6.2-1.2.4-1.7.7L32.4 46.1c-1.4.9-2.3 2.2-2.6 3.8s.1 3.3 1 4.6c1.6 2.3 4.4 3.3 7.1 2.6.6-.2 1.2-.4 1.7-.7l10.5-6.7c1.7-1.1 3.6-1.9 5.6-2.5 8.9-2.3 18.2 1.2 23.4 8.7 3.2 4.4 4.4 9.9 3.5 15.3-.9 5.2-4.1 9.9-8.6 12.7l-27.5 17.5c-1.7 1.1-3.6 1.9-5.6 2.5"
          fill="#fff"
        />
      </svg>
    </button>
  </div>,
  <div
    aria-label="Tab 1"
    className="pane"
    role="tabpanel"
  >
    <p>
      Tab 1 content
    </p>
  </div>,
]
`;

exports[`Storyshots AG—React/Tabs Default 1`] = `
Array [
  <div
    aria-label="Tabs"
    className="tabList "
    role="tablist"
  >
    <button
      aria-selected={true}
      className="tabItem tabButton active"
      onClick={[Function]}
      role="tab"
    >
      Tab 1
    </button>
    <button
      aria-selected={false}
      className="tabItem tabButton"
      onClick={[Function]}
      role="tab"
    >
      Tab 2
    </button>
    <button
      aria-selected={false}
      className="tabItem tabButton"
      onClick={[Function]}
      role="tab"
    >
      Tab 3
    </button>
  </div>,
  <div
    aria-label="Tab 1"
    className="pane"
    role="tabpanel"
  >
    <p>
      Tab 1 content
    </p>
  </div>,
]
`;

exports[`Storyshots AG—React/Tabs Jumbo 1`] = `
Array [
  <div
    aria-label="Tabs"
    className="tabList "
    role="tablist"
  >
    <button
      aria-selected={true}
      className="tabItem tabButton active tabButtonJumbo"
      onClick={[Function]}
      role="tab"
    >
      Tab 1
    </button>
    <button
      aria-selected={false}
      className="tabItem tabButton tabButtonJumbo"
      onClick={[Function]}
      role="tab"
    >
      Tab 2
    </button>
    <button
      aria-selected={false}
      className="tabItem tabButton tabButtonJumbo"
      onClick={[Function]}
      role="tab"
    >
      Tab 3
    </button>
  </div>,
  <div
    aria-label="Tab 1"
    className="pane"
    role="tabpanel"
  >
    <p>
      Tab 1 content
    </p>
  </div>,
]
`;

exports[`Storyshots AG—React/Tabs Large 1`] = `
Array [
  <div
    aria-label="Tabs"
    className="tabList "
    role="tablist"
  >
    <button
      aria-selected={true}
      className="tabItem tabButton active tabButtonLarge"
      onClick={[Function]}
      role="tab"
    >
      Tab 1
    </button>
    <button
      aria-selected={false}
      className="tabItem tabButton tabButtonLarge"
      onClick={[Function]}
      role="tab"
    >
      Tab 2
    </button>
    <button
      aria-selected={false}
      className="tabItem tabButton tabButtonLarge"
      onClick={[Function]}
      role="tab"
    >
      Tab 3
    </button>
  </div>,
  <div
    aria-label="Tab 1"
    className="pane"
    role="tabpanel"
  >
    <p>
      Tab 1 content
    </p>
  </div>,
]
`;
